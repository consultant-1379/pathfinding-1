<project name="symboliclinkcreator" default="compile" xmlns:sonar="antlib:org.sonar.ant">

  <property name="pack.name" value="symboliclinkcreator"/>
  <property name="pack.version" value="5-0-0"/>

  <!-- Attention! pack.dir have to be under tmp-dir because the actual build is done there --> 
  <property name="pack.dir" value="/vobs/eniq/design/plat/etl_controller/dev/symboliclinkcreator"/>

  <!-- ENIQ Jars -->
  <property name="eniq.common.dir" value="/vobs/eniq/design/plat/common_utilities/build/common_utilities"/>
  <property name="eniq.repository.dir" value="/vobs/eniq/design/plat/installer/build/repository"/>
  <property name="eniq.engine.dir" value="/vobs/eniq/design/plat/etl_controller/dev/engine"/>

  <!-- 3PP Jars -->
  <property name="3pp.ant.dir" value="/vobs/eniq/3pp/apache/ant/v1_10_8/prod"/>
  <property name="3pp.commons_codec.dir" value="/vobs/eniq/3pp/apache/comm_codec/v1_10/prod"/>
  <property name="3pp.jersey.dir" value="/vobs/eniq/3pp/jersey"/>
  <property name="3pp.httpclient.dir" value="/vobs/eniq/3pp/apache/comm_httpclient/v4_5_3/prod"/>
  <property name="3pp.httpcore.dir" value="/vobs/eniq/3pp/apache/comm_httpclient/v4_5_3/prod"/>
  <property name="3pp.httpclient1.dir" value="/vobs/eniq/3pp/apache/comm_httpclient/v3_0/prod"/>
  <property name="3pp.logging.dir" value="/vobs/eniq/3pp/apache/comm_logging/v1_2/prod"/>
  <property name="3pp.jconn.dir" value="/vobs/eniq/3pp/sybase/sybase_iq/v15_1/client/prod"/>
  <property name="3pp.junit.dir" value="/vobs/eniq/3pp/junit/v4_5/prod"/>
  <property name="3pp.jmock.dir" value="/vobs/eniq/3pp/jmock-2.5.1"/>
  <property name="3pp.log4j.dir" value="/vobs/eniq/3pp/apache/log4j/v1_2_6/prod"/>
  <property name="3pp.commons_logging.dir" value="/vobs/eniq/3pp/apache/comm_logging/v1_0_2/prod"/>
  <property name="3pp.velocity.dir" value="/vobs/eniq/3pp/apache/jakarta_velocity/v1_7/prod"/>
  <property name="3pp.hsqldb.dir" value="/vobs/eniq/3pp/hsqldb/prod"/>
  <property name="3pp.xerces.dir" value="/vobs/eniq/3pp/apache/xerces_parser/v2_6_2/prod"/>

  <target name="precompile"/>
  
  <target name="compile">
    <mkdir dir="${pack.dir}/classes"/>
    <javac srcdir="${pack.dir}/src" destdir="${pack.dir}/classes"
           failonerror="true"
           debug="off"
           optimize="off" 
           deprecation="off">
<compilerarg value="-Xlint:all" />
      <classpath>
        <pathelement path="${classpath}"/>
		<fileset dir="${eniq.common.dir}">
	    	<include name="**/*.jar"/>
	    </fileset>
		<fileset dir="${eniq.repository.dir}">
                <include name="**/*.jar"/>
            </fileset>
		<fileset dir="${eniq.engine.dir}">
                <include name="**/*.jar"/>
            </fileset>
	<fileset dir="${3pp.ant.dir}">
	<include name="**/*.jar"/>
</fileset>
<fileset dir="${3pp.commons_codec.dir}">
	<include name="**/*.jar"/>
</fileset>
<fileset dir="${3pp.jersey.dir}">
	<include name="**/*.jar"/>
</fileset>
<fileset dir="${3pp.httpclient.dir}">
	<include name="**/*.jar"/>
</fileset>
<fileset dir="${3pp.httpcore.dir}">
	<include name="**/*.jar"/>
</fileset>
<fileset dir="${3pp.httpclient1.dir}">
	<include name="**/*.jar"/>
</fileset>
<fileset dir="${3pp.logging.dir}">
	<include name="**/*.jar"/>
</fileset>
<fileset dir="${3pp.jconn.dir}">
	<include name="**/*.jar"/>
</fileset>
<fileset dir="${3pp.junit.dir}">
	<include name="**/*.jar"/>
</fileset>
<fileset dir="${3pp.jmock.dir}">
	<include name="**/*.jar"/>
</fileset>
<fileset dir="${3pp.log4j.dir}">
	<include name="**/*.jar"/>
</fileset>
<fileset dir="${3pp.commons_logging.dir}">
	<include name="**/*.jar"/>
</fileset>
<fileset dir="${3pp.velocity.dir}">
	<include name="**/*.jar"/>
</fileset>
<fileset dir="${3pp.hsqldb.dir}">
	<include name="**/*.jar"/>
</fileset>
		<fileset dir="${3pp.xerces.dir}">
	    	<include name="**/*.jar"/>
	    </fileset>
      </classpath>
    </javac>
  </target>

  <target name="postcompile"/>

    <!-- ========= Define the main properties of this project ========= -->
    <property name="src.dir" value="src" />
    <property name="build.dir" value="target" />
    <property name="classes.dir" value="${build.dir}/classes" />

    <!-- Define the SonarQube global properties (the most usual way is to pass these properties via the command line) -->
    <property name="sonar.host.url" value="https://sonarqube.lmera.ericsson.se" />

    <!-- Define the Sonar properties -->
    <property name="sonar.projectKey" value="sonarqube-scanner-symboliclinkcreator" />
    <property name="sonar.projectName" value="Eniq Symboliclinkcreator" />
    <property name="sonar.projectVersion" value="1.0" />
    <property name="sonar.sources" value="/vobs/eniq/design/plat/etl_controller/dev/symboliclinkcreator/src" />
    <property name="sonar.java.binaries" value="/vobs/eniq/design/plat/etl_controller/dev/symboliclinkcreator" />
    <property name="sonar.sourceEncoding" value="UTF-8" />
    <property name="sonar.login" value="c0155596d4750df78cf56c80edb6797d13ac47b4" />
    <property name="sonar.projectBaseDir" value="/vobs/eniq/design/plat/etl_controller/dev/symboliclinkcreator" />


     <target name="compile_sonar">
         <javac srcdir="${pack.dir}/src" destdir="${pack.dir}/classes" fork="true" debug="true" includeAntRuntime="false" />
     </target>

     <!-- ========= Define SonarQube Scanner for Ant Target ========= -->
     <target name="sonar" depends="compile_sonar">
         <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
             <!-- Update the following line, or put the "sonar-ant-task-*.jar" file in your "$HOME/.ant/lib" folder -->
             <classpath path="/proj/esjkadm100/Sonar/sonarqube-ant-task-2.7.0.1612.jar" />
         </taskdef>

         <!-- Execute SonarQube Scanner for Ant Analysis -->
         <sonar:sonar />
     </target>
    <target name="clean">
        <delete dir="${pack.dir}/classes"/>
    </target>


     <!-- ========= The main target "all" ========= -->
     <target name="all_sonar" depends="compile_sonar,sonar,clean" />



<target name="sonarQualityCheck" description="SonarQube Quality Gate check"> 
	 <exec executable="/bin/sh" outputproperty="qualitySleep"> 
		 <arg value="-c" /> 
		 <arg value="sleep 60" /> 
	 </exec>
	<exec executable="curl" outputproperty="sonarreturnCode">
		<arg value="-o" />
		<arg value="/proj/esjkadm100/Sonar/sonarOut.txt" />
		<arg value="-k" />
        <arg value="-u" />
        <arg value="${sonar.login}:" />
        <arg value="https://sonarqube.lmera.ericsson.se/api/qualitygates/project_status?projectKey=${sonar.projectKey}" />
    </exec>
    <exec executable="/bin/sh" outputproperty="sonarCode">
        <arg value="-c" />
        <arg value="/vobs/eniq/tools/design_build/sonarQualityGateCheck.sh" />
    </exec>
    <echo message="Quality report returned ${sonarCode}"/>
    <condition property="qualityMatch">
        
            <equals arg1="${sonarCode}" arg2="ERROR"/>
        
    </condition>
    <fail if="qualityMatch" message="Quality check did not pass, hence marking build as failed!!!."/>
</target>

</project>
