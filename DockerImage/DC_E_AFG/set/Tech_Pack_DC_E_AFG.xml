<dataset>
  <META_COLLECTION_SETS COLLECTION_SET_ID="15" COLLECTION_SET_NAME="DC_E_AFG" DESCRIPTION="TechPack DC_E_AFG:((13)) by TPC-R1A38" ENABLED_FLAG="Y" TYPE="Techpack" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="3" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="95" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="DWHM_Partition_DC_E_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Partition" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="3" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="96" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="DWHM_StorageTimeUpdate_DC_E_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Support" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="3" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="97" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="DWHM_Install_DC_E_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Install" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="98" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Loader_DC_E_AFG_AGG_PROXY" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Loader" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="99" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Loader_DC_E_AFG_BOOTSTRAP_FUNC" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Loader" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="100" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Loader_DC_E_AFG_DIAMETER" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Loader" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="101" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Loader_DC_E_AFG_OPENID_CONN" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Loader" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="102" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Loader_DC_E_AFG_TRUSTEDPROXY" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Loader" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="103" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Loader_DC_E_AFG_VIRTUAL_GATEWAY" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Loader" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="104" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Loader_DC_E_AFG_SYSTEM" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Loader" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="105" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AGG_PROXY_DAY" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="106" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AGG_PROXY_DAYBH_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="107" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AGG_PROXY_WEEKBH_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="108" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AGG_PROXY_MONTHBH_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="109" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_BOOTSTRAP_FUNC_DAY" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="110" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_BOOTSTRAP_FUNC_DAYBH_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="111" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_BOOTSTRAP_FUNC_WEEKBH_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="112" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_BOOTSTRAP_FUNC_MONTHBH_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="113" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_DIAMETER_DAY" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="114" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_DIAMETER_DAYBH_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="115" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_DIAMETER_WEEKBH_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="116" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_DIAMETER_MONTHBH_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="117" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_OPENID_CONN_DAY" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="118" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_OPENID_CONN_DAYBH_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="119" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_OPENID_CONN_WEEKBH_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="120" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_OPENID_CONN_MONTHBH_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="121" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_TRUSTEDPROXY_DAY" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="122" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_TRUSTEDPROXY_DAYBH_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="123" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_TRUSTEDPROXY_WEEKBH_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="124" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_TRUSTEDPROXY_MONTHBH_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="125" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_VIRTUAL_GATEWAY_DAY" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="126" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_VIRTUAL_GATEWAY_DAYBH_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="127" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_VIRTUAL_GATEWAY_WEEKBH_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="128" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_VIRTUAL_GATEWAY_MONTHBH_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="129" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_SYSTEM_DAY" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="130" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_SYSTEM_DAYBH_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="131" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_SYSTEM_WEEKBH_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="132" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_SYSTEM_MONTHBH_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="133" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_CP0" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="134" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_CP0" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="135" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_CP0" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="136" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_CP1" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="137" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_CP1" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="138" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_CP1" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="139" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_CP2" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="140" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_CP2" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="141" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_CP2" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="142" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_CP3" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="143" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_CP3" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="144" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_CP3" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="145" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_CP4" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="146" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_CP4" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="147" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_CP4" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="148" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_PP0" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="149" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_PP0" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="150" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_PP0" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="151" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_PP1" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="152" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_PP1" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="153" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_PP1" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="154" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_PP2" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="155" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_PP2" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="156" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_PP2" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="157" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_PP3" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="158" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_PP3" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="159" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_PP3" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="160" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_PP4" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="161" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_PP4" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="162" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_PP4" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Aggregator" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="0" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="163" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Directory_Checker_DC_E_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Install" VERSION_NUMBER="((13))"/>
  <META_COLLECTIONS MAX_ERRORS="0" MAX_FK_ERRORS="0" MAX_COL_LIMIT_ERRORS="0" PRIORITY="3" QUEUE_TIME_LIMIT="30" COLLECTION_SET_ID="15" COLLECTION_ID="164" CHECK_FK_ERROR_FLAG="N" CHECK_COL_LIMITS_FLAG="N" COLLECTION_NAME="Diskmanager_DC_E_AFG" HOLD_FLAG="N" ENABLED_FLAG="Y" FOLDABLE_FLAG="Y" SETTYPE="Service" VERSION_NUMBER="((13))"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="369" COLLECTION_ID="95" COLLECTION_SET_ID="15" ACTION_TYPE="PartitionAction" TRANSFER_ACTION_NAME="PartitionAction_DC_E_AFG" ORDER_BY_NO="0" WHERE_CLAUSE="" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DWHM&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="370" COLLECTION_ID="96" COLLECTION_SET_ID="15" ACTION_TYPE="StorageTimeAction" TRANSFER_ACTION_NAME="StorageTimeAction_DC_E_AFG" ORDER_BY_NO="0" WHERE_CLAUSE="" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DWHM&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="371" COLLECTION_ID="96" COLLECTION_SET_ID="15" ACTION_TYPE="PartitionAction" TRANSFER_ACTION_NAME="PartitionAction_DC_E_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DWHM&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="372" COLLECTION_ID="97" COLLECTION_SET_ID="15" ACTION_TYPE="VersionUpdate" TRANSFER_ACTION_NAME="VersionUpdate_DC_E_AFG" ORDER_BY_NO="0" WHERE_CLAUSE="" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DWHM&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="373" COLLECTION_ID="97" COLLECTION_SET_ID="15" ACTION_TYPE="StorageTimeAction" TRANSFER_ACTION_NAME="StorageTimeAction_DC_E_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DWHM&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="374" COLLECTION_ID="97" COLLECTION_SET_ID="15" ACTION_TYPE="PartitionAction" TRANSFER_ACTION_NAME="PartitionAction_DC_E_AFG" ORDER_BY_NO="2" WHERE_CLAUSE="" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DWHM&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="375" COLLECTION_ID="98" COLLECTION_SET_ID="15" ACTION_TYPE="SQL Execute" TRANSFER_ACTION_NAME="SQL_Execute_DC_E_AFG_AGG_PROXY" ORDER_BY_NO="0" WHERE_CLAUSE="" ACTION_CONTENTS="set temporary option ESCAPE_CHARACTER=&apos;ON&apos;;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="376" COLLECTION_ID="98" COLLECTION_SET_ID="15" ACTION_TYPE="Loader" TRANSFER_ACTION_NAME="Loader_DC_E_AFG_AGG_PROXY" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;dateformat=yyyy-MM-dd&#xD;&#xA;taildir=raw&#xD;&#xA;techpack=DC_E_AFG&#xD;&#xA;tablename=DC_E_AFG_AGG_PROXY&#xD;&#xA;" ACTION_CONTENTS="LOAD TABLE $TABLE  (&#xA;OSS_ID   , NODE_NAME   , DATE_ID   , YEAR_ID   , MONTH_ID   , DAY_ID   , HOUR_ID   , DATETIME_ID   , MIN_ID   , TIMELEVEL   , SESSION_ID   , BATCH_ID   , PERIOD_DURATION   , ROWSTATUS   , DC_RELEASE   , DC_SOURCE   , DC_TIMEZONE   , DC_SUSPECTFLAG   , UTC_DATETIME_ID   , apSubCntSsoVpActSubCount_actual   , apSubCntSsoVpActSubCount_min   , apSubCntSsoVpActSubCount_max   , apSubCntSsoVpMaxSubCount_actual   , apSubCntSsoVpMaxSubCount_delta   , cnpCntInboundReq_actual   , cnpCntInboundReq_delta   , cnpCntInboundReqFailed403_actual   , cnpCntInboundReqFailed403_delta   , cnpCntInboundReqFailed404_actual   , cnpCntInboundReqFailed404_delta   , cnpCntInboundReqFailedOthers_actual   , cnpCntInboundReqFailedOthers_delta   , cnpCntOutboundReq_actual   , cnpCntOutboundReq_delta   , cnpCntOutboundReqFailed404_actual   , cnpCntOutboundReqFailed404_delta   , cnpCntOutboundReqFailedOthers_actual   , cnpCntOutboundReqFailedOthers_delta   , mediaCntAuthFailed_actual   , mediaCntAuthFailed_delta   , mediaCntAuthGbaMeReq_actual   , mediaCntAuthGbaMeReq_delta   , mediaCntAuthGbaReq_actual   , mediaCntAuthGbaReq_delta   , mediaCntAuthReq_actual   , mediaCntAuthReq_delta   , mediaCntAuthReqFailed403_actual   , mediaCntAuthReqFailed403_delta   , mediaCntAuthResp_actual   , mediaCntAuthResp_delta   , mediaCntReq_actual   , mediaCntReq_delta   , mediaCntUnsuccessfulReq_actual   , mediaCntUnsuccessfulReq_delta   , mediaCntZnReq_actual   , mediaCntZnReq_delta   , xRpCntAuthFailed_actual   , xRpCntAuthFailed_delta   , xRpCntAuthFailed403_actual   , xRpCntAuthFailed403_delta   , xRpCntAuthResp_actual   , xRpCntAuthResp_delta   , xRpCntTrustGwFailed_actual   , xRpCntTrustGwFailed_delta   , xRpCntTrustGwResp_actual   , xRpCntTrustGwResp_delta   , xRqCntAuthDigestReq_actual   , xRqCntAuthDigestReq_delta   , xRqCntAuthGbaDigestReq_actual   , xRqCntAuthGbaDigestReq_delta   , xRqCntAuthGbaMeReq_actual   , xRqCntAuthGbaMeReq_delta   , xRqCntAuthGbaReq_actual   , xRqCntAuthGbaReq_delta   , xRqCntAuthGibaReq_actual   , xRqCntAuthGibaReq_delta   , xRqCntAuthReq_actual   , xRqCntAuthReq_delta   , xRqCntAuthSsoReq_actual   , xRqCntAuthSsoReq_delta   , xRqCntTrustGwReq_actual   , xRqCntTrustGwReq_delta   , xRqCntXcapCapReq_actual   , xRqCntXcapCapReq_delta   , xRqCntXcapDelReq_actual   , xRqCntXcapDelReq_delta   , xRqCntXcapDirReq_actual   , xRqCntXcapDirReq_delta   , xRqCntXcapGetReq_actual   , xRqCntXcapGetReq_delta   , xRqCntXcapPutReq_actual   , xRqCntXcapPutReq_delta   , xRqCntXcapReqUnsuccessful_actual   , xRqCntXcapReqUnsuccessful_delta   , xRqCntZnReq_actual   , xRqCntZnReq_delta   ) &#xA;FROM $FILENAMES &#xA;$LOADERPARAMETERS&#xA;;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="377" COLLECTION_ID="98" COLLECTION_SET_ID="15" ACTION_TYPE="DuplicateCheck" TRANSFER_ACTION_NAME="DuplicateCheck_DC_E_AFG_AGG_PROXY" ORDER_BY_NO="2" WHERE_CLAUSE="" ACTION_CONTENTS="" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="378" COLLECTION_ID="98" COLLECTION_SET_ID="15" ACTION_TYPE="UpdateDimSession" TRANSFER_ACTION_NAME="UpdateDimSession_DC_E_AFG_AGG_PROXY" ORDER_BY_NO="3" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;useRAWSTATUS=true&#xD;&#xA;element=NODE_NAME&#xD;&#xA;" ACTION_CONTENTS="" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="379" COLLECTION_ID="99" COLLECTION_SET_ID="15" ACTION_TYPE="SQL Execute" TRANSFER_ACTION_NAME="SQL_Execute_DC_E_AFG_BOOTSTRAP_FUNC" ORDER_BY_NO="0" WHERE_CLAUSE="" ACTION_CONTENTS="set temporary option ESCAPE_CHARACTER=&apos;ON&apos;;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="380" COLLECTION_ID="99" COLLECTION_SET_ID="15" ACTION_TYPE="Loader" TRANSFER_ACTION_NAME="Loader_DC_E_AFG_BOOTSTRAP_FUNC" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;dateformat=yyyy-MM-dd&#xD;&#xA;taildir=raw&#xD;&#xA;techpack=DC_E_AFG&#xD;&#xA;tablename=DC_E_AFG_BOOTSTRAP_FUNC&#xD;&#xA;" ACTION_CONTENTS="LOAD TABLE $TABLE  (&#xA;OSS_ID   , NODE_NAME   , DATE_ID   , YEAR_ID   , MONTH_ID   , DAY_ID   , HOUR_ID   , DATETIME_ID   , MIN_ID   , TIMELEVEL   , SESSION_ID   , BATCH_ID   , PERIOD_DURATION   , ROWSTATUS   , DC_RELEASE   , DC_SOURCE   , DC_TIMEZONE   , DC_SUSPECTFLAG   , UTC_DATETIME_ID   , bootAuthFail_actual   , bootAuthFail_delta   , bootAuthGBADIGESTFail_actual   , bootAuthGBADIGESTFail_delta   , bootAuthGBADIGESTSucc_actual   , bootAuthGBADIGESTSucc_delta   , bootAuthGBAMEFail_actual   , bootAuthGBAMEFail_delta   , bootAuthGBAMESucc_actual   , bootAuthGBAMESucc_delta   , bootAuthGBAUFail_actual   , bootAuthGBAUFail_delta   , bootAuthGBAUSucc_actual   , bootAuthGBAUSucc_delta   , bootAuthReqTot_actual   , bootAuthReqTot_delta   , bootAuthSucc_actual   , bootAuthSucc_delta   , bootUseFailReq_actual   , bootUseFailReq_delta   , bootUseSucReq_actual   , bootUseSucReq_delta   , bootUseTotReq_actual   , bootUseTotReq_delta   , bsfGbaAkaSubCntActSubCount_actual   , bsfGbaAkaSubCntActSubCount_min   , bsfGbaAkaSubCntActSubCount_max   , bsfGbaAkaSubCntMaxNafCount_actual   , bsfGbaAkaSubCntMaxNafCount_delta   , bsfGbaAkaSubCntMaxSubCount_actual   , bsfGbaAkaSubCntMaxSubCount_delta   ) &#xA;FROM $FILENAMES &#xA;$LOADERPARAMETERS&#xA;;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="381" COLLECTION_ID="99" COLLECTION_SET_ID="15" ACTION_TYPE="DuplicateCheck" TRANSFER_ACTION_NAME="DuplicateCheck_DC_E_AFG_BOOTSTRAP_FUNC" ORDER_BY_NO="2" WHERE_CLAUSE="" ACTION_CONTENTS="" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="382" COLLECTION_ID="99" COLLECTION_SET_ID="15" ACTION_TYPE="UpdateDimSession" TRANSFER_ACTION_NAME="UpdateDimSession_DC_E_AFG_BOOTSTRAP_FUNC" ORDER_BY_NO="3" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;useRAWSTATUS=true&#xD;&#xA;element=NODE_NAME&#xD;&#xA;" ACTION_CONTENTS="" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="383" COLLECTION_ID="100" COLLECTION_SET_ID="15" ACTION_TYPE="SQL Execute" TRANSFER_ACTION_NAME="SQL_Execute_DC_E_AFG_DIAMETER" ORDER_BY_NO="0" WHERE_CLAUSE="" ACTION_CONTENTS="set temporary option ESCAPE_CHARACTER=&apos;ON&apos;;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="384" COLLECTION_ID="100" COLLECTION_SET_ID="15" ACTION_TYPE="Loader" TRANSFER_ACTION_NAME="Loader_DC_E_AFG_DIAMETER" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;dateformat=yyyy-MM-dd&#xD;&#xA;taildir=raw&#xD;&#xA;techpack=DC_E_AFG&#xD;&#xA;tablename=DC_E_AFG_DIAMETER&#xD;&#xA;" ACTION_CONTENTS="LOAD TABLE $TABLE  (&#xA;OSS_ID   , NODE_NAME   , DATE_ID   , YEAR_ID   , MONTH_ID   , DAY_ID   , HOUR_ID   , DATETIME_ID   , MIN_ID   , TIMELEVEL   , SESSION_ID   , BATCH_ID   , PERIOD_DURATION   , ROWSTATUS   , DC_RELEASE   , DC_SOURCE   , DC_TIMEZONE   , DC_SUSPECTFLAG   , UTC_DATETIME_ID   , dZhCntAuthAvgTime_actual   , dZhCntAuthAvgTime_min   , dZhCntAuthAvgTime_max   , dZhCntAuthFailed_actual   , dZhCntAuthFailed_delta   , dZhCntAuthMaxTime_actual   , dZhCntAuthMaxTime_min   , dZhCntAuthMaxTime_max   , dZhCntAuthSuccessful_actual   , dZhCntAuthSuccessful_delta   , dZhCntAuthTotal_actual   , dZhCntAuthTotal_delta   ) &#xA;FROM $FILENAMES &#xA;$LOADERPARAMETERS&#xA;;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="385" COLLECTION_ID="100" COLLECTION_SET_ID="15" ACTION_TYPE="DuplicateCheck" TRANSFER_ACTION_NAME="DuplicateCheck_DC_E_AFG_DIAMETER" ORDER_BY_NO="2" WHERE_CLAUSE="" ACTION_CONTENTS="" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="386" COLLECTION_ID="100" COLLECTION_SET_ID="15" ACTION_TYPE="UpdateDimSession" TRANSFER_ACTION_NAME="UpdateDimSession_DC_E_AFG_DIAMETER" ORDER_BY_NO="3" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;useRAWSTATUS=true&#xD;&#xA;element=NODE_NAME&#xD;&#xA;" ACTION_CONTENTS="" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="387" COLLECTION_ID="101" COLLECTION_SET_ID="15" ACTION_TYPE="SQL Execute" TRANSFER_ACTION_NAME="SQL_Execute_DC_E_AFG_OPENID_CONN" ORDER_BY_NO="0" WHERE_CLAUSE="" ACTION_CONTENTS="set temporary option ESCAPE_CHARACTER=&apos;ON&apos;;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="388" COLLECTION_ID="101" COLLECTION_SET_ID="15" ACTION_TYPE="Loader" TRANSFER_ACTION_NAME="Loader_DC_E_AFG_OPENID_CONN" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;dateformat=yyyy-MM-dd&#xD;&#xA;taildir=raw&#xD;&#xA;techpack=DC_E_AFG&#xD;&#xA;tablename=DC_E_AFG_OPENID_CONN&#xD;&#xA;" ACTION_CONTENTS="LOAD TABLE $TABLE  (&#xA;OSS_ID   , NODE_NAME   , DATE_ID   , YEAR_ID   , MONTH_ID   , DAY_ID   , HOUR_ID   , DATETIME_ID   , MIN_ID   , TIMELEVEL   , SESSION_ID   , BATCH_ID   , PERIOD_DURATION   , ROWSTATUS   , DC_RELEASE   , DC_SOURCE   , DC_TIMEZONE   , DC_SUSPECTFLAG   , UTC_DATETIME_ID   , oidcAuthFail_actual   , oidcAuthFail_delta   , oidcAuthFail401_actual   , oidcAuthFail401_delta   , oidcAuthReq_actual   , oidcAuthReq_delta   , oidcAuthSucc_actual   , oidcAuthSucc_delta   ) &#xA;FROM $FILENAMES &#xA;$LOADERPARAMETERS&#xA;;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="389" COLLECTION_ID="101" COLLECTION_SET_ID="15" ACTION_TYPE="DuplicateCheck" TRANSFER_ACTION_NAME="DuplicateCheck_DC_E_AFG_OPENID_CONN" ORDER_BY_NO="2" WHERE_CLAUSE="" ACTION_CONTENTS="" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="390" COLLECTION_ID="101" COLLECTION_SET_ID="15" ACTION_TYPE="UpdateDimSession" TRANSFER_ACTION_NAME="UpdateDimSession_DC_E_AFG_OPENID_CONN" ORDER_BY_NO="3" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;useRAWSTATUS=true&#xD;&#xA;element=NODE_NAME&#xD;&#xA;" ACTION_CONTENTS="" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="391" COLLECTION_ID="102" COLLECTION_SET_ID="15" ACTION_TYPE="SQL Execute" TRANSFER_ACTION_NAME="SQL_Execute_DC_E_AFG_TRUSTEDPROXY" ORDER_BY_NO="0" WHERE_CLAUSE="" ACTION_CONTENTS="set temporary option ESCAPE_CHARACTER=&apos;ON&apos;;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="392" COLLECTION_ID="102" COLLECTION_SET_ID="15" ACTION_TYPE="Loader" TRANSFER_ACTION_NAME="Loader_DC_E_AFG_TRUSTEDPROXY" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;dateformat=yyyy-MM-dd&#xD;&#xA;taildir=raw&#xD;&#xA;techpack=DC_E_AFG&#xD;&#xA;tablename=DC_E_AFG_TRUSTEDPROXY&#xD;&#xA;" ACTION_CONTENTS="LOAD TABLE $TABLE  (&#xA;OSS_ID   , NODE_NAME   , DATE_ID   , YEAR_ID   , MONTH_ID   , DAY_ID   , HOUR_ID   , DATETIME_ID   , MIN_ID   , TIMELEVEL   , SESSION_ID   , BATCH_ID   , PERIOD_DURATION   , ROWSTATUS   , DC_RELEASE   , DC_SOURCE   , DC_TIMEZONE   , DC_SUSPECTFLAG   , UTC_DATETIME_ID   , tpAuthCntAuthFailed_actual   , tpAuthCntAuthFailed_delta   , tpAuthCntAuthFailed403_actual   , tpAuthCntAuthFailed403_delta   , tpAuthCntAuthGbaDigestReq_actual   , tpAuthCntAuthGbaDigestReq_delta   , tpAuthCntAuthGbaMeBasedReq_actual   , tpAuthCntAuthGbaMeBasedReq_delta   , tpAuthCntAuthGbaReq_actual   , tpAuthCntAuthGbaReq_delta   , tpAuthCntAuthGibaReq_actual   , tpAuthCntAuthGibaReq_delta   , tpAuthCntAuthReq_actual   , tpAuthCntAuthReq_delta   , tpAuthCntAuthResp_actual   , tpAuthCntAuthResp_delta   , tpAuthCntAuthZxDigestReq_actual   , tpAuthCntAuthZxDigestReq_delta   , tpAuthCntAuthZxSsoReq_actual   , tpAuthCntAuthZxSsoReq_delta   , tpAuthCntZnReq_actual   , tpAuthCntZnReq_delta   , tpCntHttpDeleteReq_actual   , tpCntHttpDeleteReq_delta   , tpCntHttpDsFailedResp_actual   , tpCntHttpDsFailedResp_delta   , tpCntHttpFailedResp_actual   , tpCntHttpFailedResp_delta   , tpCntHttpFwdReq_actual   , tpCntHttpFwdReq_delta   , tpCntHttpGetReq_actual   , tpCntHttpGetReq_delta   , tpCntHttpOtherReq_actual   , tpCntHttpOtherReq_delta   , tpCntHttpPostReq_actual   , tpCntHttpPostReq_delta   , tpCntHttpPutReq_actual   , tpCntHttpPutReq_delta   , tpCntHttpTotalReq_actual   , tpCntHttpTotalReq_delta   , tpSubCntImpiVpActSubCount_actual   , tpSubCntImpiVpActSubCount_min   , tpSubCntImpiVpActSubCount_max   , tpSubCntImpiVpMaxSubCount_actual   , tpSubCntImpiVpMaxSubCount_delta   , tpSubCntImpuVpActSubCount_actual   , tpSubCntImpuVpActSubCount_min   , tpSubCntImpuVpActSubCount_max   , tpSubCntImpuVpMaxSubCount_actual   , tpSubCntImpuVpMaxSubCount_delta   ) &#xA;FROM $FILENAMES &#xA;$LOADERPARAMETERS&#xA;;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="393" COLLECTION_ID="102" COLLECTION_SET_ID="15" ACTION_TYPE="DuplicateCheck" TRANSFER_ACTION_NAME="DuplicateCheck_DC_E_AFG_TRUSTEDPROXY" ORDER_BY_NO="2" WHERE_CLAUSE="" ACTION_CONTENTS="" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="394" COLLECTION_ID="102" COLLECTION_SET_ID="15" ACTION_TYPE="UpdateDimSession" TRANSFER_ACTION_NAME="UpdateDimSession_DC_E_AFG_TRUSTEDPROXY" ORDER_BY_NO="3" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;useRAWSTATUS=true&#xD;&#xA;element=NODE_NAME&#xD;&#xA;" ACTION_CONTENTS="" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="395" COLLECTION_ID="103" COLLECTION_SET_ID="15" ACTION_TYPE="SQL Execute" TRANSFER_ACTION_NAME="SQL_Execute_DC_E_AFG_VIRTUAL_GATEWAY" ORDER_BY_NO="0" WHERE_CLAUSE="" ACTION_CONTENTS="set temporary option ESCAPE_CHARACTER=&apos;ON&apos;;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="396" COLLECTION_ID="103" COLLECTION_SET_ID="15" ACTION_TYPE="Loader" TRANSFER_ACTION_NAME="Loader_DC_E_AFG_VIRTUAL_GATEWAY" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;dateformat=yyyy-MM-dd&#xD;&#xA;taildir=raw&#xD;&#xA;techpack=DC_E_AFG&#xD;&#xA;tablename=DC_E_AFG_VIRTUAL_GATEWAY&#xD;&#xA;" ACTION_CONTENTS="LOAD TABLE $TABLE  (&#xA;OSS_ID   , NODE_NAME   , VIRTUAL_GATEWAY   , DATE_ID   , YEAR_ID   , MONTH_ID   , DAY_ID   , HOUR_ID   , DATETIME_ID   , MIN_ID   , TIMELEVEL   , SESSION_ID   , BATCH_ID   , PERIOD_DURATION   , ROWSTATUS   , DC_RELEASE   , DC_SOURCE   , DC_TIMEZONE   , DC_SUSPECTFLAG   , UTC_DATETIME_ID   , vgAcceptedReq_actual   , vgAcceptedReq_delta   , vgPeakTransTimeIntervalLength_actual   , vgPeakTransTimeIntervalLength_min   , vgPeakTransTimeIntervalLength_max   , vgPeakTransTransPerTimeInterval_actual   , vgPeakTransTransPerTimeInterval_min   , vgPeakTransTransPerTimeInterval_max   , vgRejectedReq_actual   , vgRejectedReq_delta   ) &#xA;FROM $FILENAMES &#xA;$LOADERPARAMETERS&#xA;;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="397" COLLECTION_ID="103" COLLECTION_SET_ID="15" ACTION_TYPE="DuplicateCheck" TRANSFER_ACTION_NAME="DuplicateCheck_DC_E_AFG_VIRTUAL_GATEWAY" ORDER_BY_NO="2" WHERE_CLAUSE="" ACTION_CONTENTS="" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="398" COLLECTION_ID="103" COLLECTION_SET_ID="15" ACTION_TYPE="UpdateDimSession" TRANSFER_ACTION_NAME="UpdateDimSession_DC_E_AFG_VIRTUAL_GATEWAY" ORDER_BY_NO="3" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;useRAWSTATUS=true&#xD;&#xA;element=NODE_NAME&#xD;&#xA;" ACTION_CONTENTS="" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="399" COLLECTION_ID="104" COLLECTION_SET_ID="15" ACTION_TYPE="SQL Execute" TRANSFER_ACTION_NAME="SQL_Execute_DC_E_AFG_SYSTEM" ORDER_BY_NO="0" WHERE_CLAUSE="" ACTION_CONTENTS="set temporary option ESCAPE_CHARACTER=&apos;ON&apos;;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="400" COLLECTION_ID="104" COLLECTION_SET_ID="15" ACTION_TYPE="Loader" TRANSFER_ACTION_NAME="Loader_DC_E_AFG_SYSTEM" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;dateformat=yyyy-MM-dd&#xD;&#xA;taildir=raw&#xD;&#xA;techpack=DC_E_AFG&#xD;&#xA;tablename=DC_E_AFG_SYSTEM&#xD;&#xA;" ACTION_CONTENTS="LOAD TABLE $TABLE  (&#xA;OSS_ID   , NODE_NAME   , DATE_ID   , YEAR_ID   , MONTH_ID   , DAY_ID   , HOUR_ID   , DATETIME_ID   , MIN_ID   , TIMELEVEL   , SESSION_ID   , BATCH_ID   , PERIOD_DURATION   , ROWSTATUS   , DC_RELEASE   , DC_SOURCE   , DC_TIMEZONE   , DC_SUSPECTFLAG   , UTC_DATETIME_ID   , cpuUsage_actual   , cpuUsage_min   , cpuUsage_max   , rootPath_actual   , rootPath_min   , rootPath_max   , memUsage_actual   , memUsage_min   , memUsage_max   ) &#xA;FROM $FILENAMES &#xA;$LOADERPARAMETERS&#xA;;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="401" COLLECTION_ID="104" COLLECTION_SET_ID="15" ACTION_TYPE="DuplicateCheck" TRANSFER_ACTION_NAME="DuplicateCheck_DC_E_AFG_SYSTEM" ORDER_BY_NO="2" WHERE_CLAUSE="" ACTION_CONTENTS="" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="402" COLLECTION_ID="104" COLLECTION_SET_ID="15" ACTION_TYPE="UpdateDimSession" TRANSFER_ACTION_NAME="UpdateDimSession_DC_E_AFG_SYSTEM" ORDER_BY_NO="3" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;useRAWSTATUS=true&#xD;&#xA;element=NODE_NAME&#xD;&#xA;" ACTION_CONTENTS="" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="403" COLLECTION_ID="105" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AGG_PROXY_DAY&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AGG_PROXY&apos; AND TIMELEVEL = &apos;DAY&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AGG_PROXY_RAW WHERE DATE_ID = $date &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="404" COLLECTION_ID="105" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AGG_PROXY_DAY" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AGG_PROXY_DAY&#xD;&#xA;" ACTION_CONTENTS="DELETE $targetDerivedTable.get(&quot;TOTAL&quot;)&#xA;WHERE DATE_ID=$dateid&#xA;&#xA;Insert into $targetDerivedTable.get(&quot;TOTAL&quot;)&#xA;(&#xA; NODE_NAME &#xA;,OSS_ID&#xA;,DC_RELEASE&#xA;,DATE_ID&#xA;,YEAR_ID&#xA;,MONTH_ID&#xA;,DAY_ID&#xA;,WEEK_ID&#xA;,DATACOVERAGE&#xA;,AGG_COUNT&#xA;,SESSION_ID&#xA;,BATCH_ID&#xA;,TIMELEVEL&#xA;,PERIOD_DURATION&#xA;,DC_SOURCE&#xA;,DC_TIMEZONE&#xA;,ROWSTATUS&#xA;,apSubCntSsoVpActSubCount_actual&#xA;,apSubCntSsoVpActSubCount_max&#xA;,apSubCntSsoVpActSubCount_min&#xA;,apSubCntSsoVpMaxSubCount_actual&#xA;,apSubCntSsoVpMaxSubCount_delta&#xA;,cnpCntInboundReqFailed403_actual&#xA;,cnpCntInboundReqFailed403_delta&#xA;,cnpCntInboundReqFailed404_actual&#xA;,cnpCntInboundReqFailed404_delta&#xA;,cnpCntInboundReqFailedOthers_actual&#xA;,cnpCntInboundReqFailedOthers_delta&#xA;,cnpCntInboundReq_actual&#xA;,cnpCntInboundReq_delta&#xA;,cnpCntOutboundReqFailed404_actual&#xA;,cnpCntOutboundReqFailed404_delta&#xA;,cnpCntOutboundReqFailedOthers_actual&#xA;,cnpCntOutboundReqFailedOthers_delta&#xA;,cnpCntOutboundReq_actual&#xA;,cnpCntOutboundReq_delta&#xA;,mediaCntAuthFailed_actual&#xA;,mediaCntAuthFailed_delta&#xA;,mediaCntAuthGbaMeReq_actual&#xA;,mediaCntAuthGbaMeReq_delta&#xA;,mediaCntAuthGbaReq_actual&#xA;,mediaCntAuthGbaReq_delta&#xA;,mediaCntAuthReqFailed403_actual&#xA;,mediaCntAuthReqFailed403_delta&#xA;,mediaCntAuthReq_actual&#xA;,mediaCntAuthReq_delta&#xA;,mediaCntAuthResp_actual&#xA;,mediaCntAuthResp_delta&#xA;,mediaCntReq_actual&#xA;,mediaCntReq_delta&#xA;,mediaCntUnsuccessfulReq_actual&#xA;,mediaCntUnsuccessfulReq_delta&#xA;,mediaCntZnReq_actual&#xA;,mediaCntZnReq_delta&#xA;,xRpCntAuthFailed403_actual&#xA;,xRpCntAuthFailed403_delta&#xA;,xRpCntAuthFailed_actual&#xA;,xRpCntAuthFailed_delta&#xA;,xRpCntAuthResp_actual&#xA;,xRpCntAuthResp_delta&#xA;,xRpCntTrustGwFailed_actual&#xA;,xRpCntTrustGwFailed_delta&#xA;,xRpCntTrustGwResp_actual&#xA;,xRpCntTrustGwResp_delta&#xA;,xRqCntAuthDigestReq_actual&#xA;,xRqCntAuthDigestReq_delta&#xA;,xRqCntAuthGbaDigestReq_actual&#xA;,xRqCntAuthGbaDigestReq_delta&#xA;,xRqCntAuthGbaMeReq_actual&#xA;,xRqCntAuthGbaMeReq_delta&#xA;,xRqCntAuthGbaReq_actual&#xA;,xRqCntAuthGbaReq_delta&#xA;,xRqCntAuthGibaReq_actual&#xA;,xRqCntAuthGibaReq_delta&#xA;,xRqCntAuthReq_actual&#xA;,xRqCntAuthReq_delta&#xA;,xRqCntAuthSsoReq_actual&#xA;,xRqCntAuthSsoReq_delta&#xA;,xRqCntTrustGwReq_actual&#xA;,xRqCntTrustGwReq_delta&#xA;,xRqCntXcapCapReq_actual&#xA;,xRqCntXcapCapReq_delta&#xA;,xRqCntXcapDelReq_actual&#xA;,xRqCntXcapDelReq_delta&#xA;,xRqCntXcapDirReq_actual&#xA;,xRqCntXcapDirReq_delta&#xA;,xRqCntXcapGetReq_actual&#xA;,xRqCntXcapGetReq_delta&#xA;,xRqCntXcapPutReq_actual&#xA;,xRqCntXcapPutReq_delta&#xA;,xRqCntXcapReqUnsuccessful_actual&#xA;,xRqCntXcapReqUnsuccessful_delta&#xA;,xRqCntZnReq_actual&#xA;,xRqCntZnReq_delta&#xA;)&#xA;Select&#xA; NODE_NAME&#xA;,OSS_ID&#xA;,DC_RELEASE&#xA;,DATE_ID&#xA;,MIN(YEAR_ID)&#xA;,MIN(MONTH_ID)&#xA;,MIN(DAY_ID)&#xA;,MIN(DATEPART(cwk, $dateid))&#xA;,SUM(PERIOD_DURATION)&#xA;,COUNT(*)&#xA;,$sessionid&#xA;,$batchid&#xA;,&apos;DAY&apos;&#xA;,1440&#xA;,MIN(DC_SOURCE)&#xA;,MIN(DC_TIMEZONE)&#xA;,&apos;AGGREGATED&apos;&#xA;,AVG(apSubCntSsoVpActSubCount_actual)&#xA;,MAX(apSubCntSsoVpActSubCount_max)&#xA;,MIN(apSubCntSsoVpActSubCount_min)&#xA;,SUM(apSubCntSsoVpMaxSubCount_actual)&#xA;,SUM(apSubCntSsoVpMaxSubCount_delta)&#xA;,SUM(cnpCntInboundReqFailed403_actual)&#xA;,SUM(cnpCntInboundReqFailed403_delta)&#xA;,SUM(cnpCntInboundReqFailed404_actual)&#xA;,SUM(cnpCntInboundReqFailed404_delta)&#xA;,SUM(cnpCntInboundReqFailedOthers_actual)&#xA;,SUM(cnpCntInboundReqFailedOthers_delta)&#xA;,SUM(cnpCntInboundReq_actual)&#xA;,SUM(cnpCntInboundReq_delta)&#xA;,SUM(cnpCntOutboundReqFailed404_actual)&#xA;,SUM(cnpCntOutboundReqFailed404_delta)&#xA;,SUM(cnpCntOutboundReqFailedOthers_actual)&#xA;,SUM(cnpCntOutboundReqFailedOthers_delta)&#xA;,SUM(cnpCntOutboundReq_actual)&#xA;,SUM(cnpCntOutboundReq_delta)&#xA;,SUM(mediaCntAuthFailed_actual)&#xA;,SUM(mediaCntAuthFailed_delta)&#xA;,SUM(mediaCntAuthGbaMeReq_actual)&#xA;,SUM(mediaCntAuthGbaMeReq_delta)&#xA;,SUM(mediaCntAuthGbaReq_actual)&#xA;,SUM(mediaCntAuthGbaReq_delta)&#xA;,SUM(mediaCntAuthReqFailed403_actual)&#xA;,SUM(mediaCntAuthReqFailed403_delta)&#xA;,SUM(mediaCntAuthReq_actual)&#xA;,SUM(mediaCntAuthReq_delta)&#xA;,SUM(mediaCntAuthResp_actual)&#xA;,SUM(mediaCntAuthResp_delta)&#xA;,SUM(mediaCntReq_actual)&#xA;,SUM(mediaCntReq_delta)&#xA;,SUM(mediaCntUnsuccessfulReq_actual)&#xA;,SUM(mediaCntUnsuccessfulReq_delta)&#xA;,SUM(mediaCntZnReq_actual)&#xA;,SUM(mediaCntZnReq_delta)&#xA;,SUM(xRpCntAuthFailed403_actual)&#xA;,SUM(xRpCntAuthFailed403_delta)&#xA;,SUM(xRpCntAuthFailed_actual)&#xA;,SUM(xRpCntAuthFailed_delta)&#xA;,SUM(xRpCntAuthResp_actual)&#xA;,SUM(xRpCntAuthResp_delta)&#xA;,SUM(xRpCntTrustGwFailed_actual)&#xA;,SUM(xRpCntTrustGwFailed_delta)&#xA;,SUM(xRpCntTrustGwResp_actual)&#xA;,SUM(xRpCntTrustGwResp_delta)&#xA;,SUM(xRqCntAuthDigestReq_actual)&#xA;,SUM(xRqCntAuthDigestReq_delta)&#xA;,SUM(xRqCntAuthGbaDigestReq_actual)&#xA;,SUM(xRqCntAuthGbaDigestReq_delta)&#xA;,SUM(xRqCntAuthGbaMeReq_actual)&#xA;,SUM(xRqCntAuthGbaMeReq_delta)&#xA;,SUM(xRqCntAuthGbaReq_actual)&#xA;,SUM(xRqCntAuthGbaReq_delta)&#xA;,SUM(xRqCntAuthGibaReq_actual)&#xA;,SUM(xRqCntAuthGibaReq_delta)&#xA;,SUM(xRqCntAuthReq_actual)&#xA;,SUM(xRqCntAuthReq_delta)&#xA;,SUM(xRqCntAuthSsoReq_actual)&#xA;,SUM(xRqCntAuthSsoReq_delta)&#xA;,SUM(xRqCntTrustGwReq_actual)&#xA;,SUM(xRqCntTrustGwReq_delta)&#xA;,SUM(xRqCntXcapCapReq_actual)&#xA;,SUM(xRqCntXcapCapReq_delta)&#xA;,SUM(xRqCntXcapDelReq_actual)&#xA;,SUM(xRqCntXcapDelReq_delta)&#xA;,SUM(xRqCntXcapDirReq_actual)&#xA;,SUM(xRqCntXcapDirReq_delta)&#xA;,SUM(xRqCntXcapGetReq_actual)&#xA;,SUM(xRqCntXcapGetReq_delta)&#xA;,SUM(xRqCntXcapPutReq_actual)&#xA;,SUM(xRqCntXcapPutReq_delta)&#xA;,SUM(xRqCntXcapReqUnsuccessful_actual)&#xA;,SUM(xRqCntXcapReqUnsuccessful_delta)&#xA;,SUM(xRqCntZnReq_actual)&#xA;,SUM(xRqCntZnReq_delta)&#xA;from  $sourceDerivedTable.get(&quot;TOTAL&quot;)  AS src &#xA;where src.DATE_ID=$dateid&#xA;and src.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;group by&#xA; NODE_NAME&#xA;,OSS_ID&#xA;,DC_RELEASE&#xA;,DATE_ID&#xA;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="405" COLLECTION_ID="106" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AGG_PROXY_DAYBH_AFG&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AGG_PROXY&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AGG_PROXY_RAW WHERE DATE_ID = $date &#xA;UNION ALL&#xA;select count(*) from (SELECT count(distinct aggregation) c  FROM LOG_AGGREGATIONSTATUS   WHERE typename = &apos;DC_E_AFG_AFGBH&apos; AND timelevel = &apos;RANKBH&apos; AND DATADATE = $date and AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS IN (&apos;AGGREGATED&apos;) ) as a ,(select  count(distinct aggregation) c  from LOG_AggregationRules where target_type = &apos;DC_E_AFG_AFGBH&apos; AND target_level = &apos;RANKBH&apos;  and aggregationscope = &apos;DAY&apos;) as b where a.c&gt;=b.c and b.c &lt;&gt; 0 &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="406" COLLECTION_ID="106" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AGG_PROXY_DAYBH_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AGG_PROXY_DAYBH&#xD;&#xA;" ACTION_CONTENTS="&#xD;&#xA;DELETE $targetDerivedTable.get(&quot;RANKSRC&quot;)&#xD;&#xA;WHERE DATE_ID=$dateid&#xD;&#xA;AND BHTYPE in (select distinct BHTYPE from $sourceDerivedTable.get(&quot;RANKSRC&quot;))&#xD;&#xA;&#xD;&#xA;Insert into $targetDerivedTable.get(&quot;RANKSRC&quot;)&#xD;&#xA;(&#xD;&#xA; NODE_NAME&#xD;&#xA;,OSS_ID&#xD;&#xA;,DATE_ID&#xD;&#xA;,YEAR_ID&#xD;&#xA;,MONTH_ID&#xD;&#xA;,DAY_ID&#xD;&#xA;,MIN_ID&#xD;&#xA;,BHTYPE&#xD;&#xA;,BUSYHOUR&#xD;&#xA;,BHCLASS&#xD;&#xA;,TIMELEVEL&#xD;&#xA;,SESSION_ID&#xD;&#xA;,BATCH_ID&#xD;&#xA;,PERIOD_DURATION&#xD;&#xA;,ROWSTATUS&#xD;&#xA;,DC_RELEASE&#xD;&#xA;,DC_SOURCE&#xD;&#xA;,DC_TIMEZONE&#xD;&#xA;,BH_ID&#xD;&#xA;,OFFSET&#xD;&#xA;,apSubCntSsoVpActSubCount_actual&#xD;&#xA;,apSubCntSsoVpActSubCount_max&#xD;&#xA;,apSubCntSsoVpActSubCount_min&#xD;&#xA;,apSubCntSsoVpMaxSubCount_actual&#xD;&#xA;,apSubCntSsoVpMaxSubCount_delta&#xD;&#xA;,cnpCntInboundReqFailed403_actual&#xD;&#xA;,cnpCntInboundReqFailed403_delta&#xD;&#xA;,cnpCntInboundReqFailed404_actual&#xD;&#xA;,cnpCntInboundReqFailed404_delta&#xD;&#xA;,cnpCntInboundReqFailedOthers_actual&#xD;&#xA;,cnpCntInboundReqFailedOthers_delta&#xD;&#xA;,cnpCntInboundReq_actual&#xD;&#xA;,cnpCntInboundReq_delta&#xD;&#xA;,cnpCntOutboundReqFailed404_actual&#xD;&#xA;,cnpCntOutboundReqFailed404_delta&#xD;&#xA;,cnpCntOutboundReqFailedOthers_actual&#xD;&#xA;,cnpCntOutboundReqFailedOthers_delta&#xD;&#xA;,cnpCntOutboundReq_actual&#xD;&#xA;,cnpCntOutboundReq_delta&#xD;&#xA;,mediaCntAuthFailed_actual&#xD;&#xA;,mediaCntAuthFailed_delta&#xD;&#xA;,mediaCntAuthGbaMeReq_actual&#xD;&#xA;,mediaCntAuthGbaMeReq_delta&#xD;&#xA;,mediaCntAuthGbaReq_actual&#xD;&#xA;,mediaCntAuthGbaReq_delta&#xD;&#xA;,mediaCntAuthReqFailed403_actual&#xD;&#xA;,mediaCntAuthReqFailed403_delta&#xD;&#xA;,mediaCntAuthReq_actual&#xD;&#xA;,mediaCntAuthReq_delta&#xD;&#xA;,mediaCntAuthResp_actual&#xD;&#xA;,mediaCntAuthResp_delta&#xD;&#xA;,mediaCntReq_actual&#xD;&#xA;,mediaCntReq_delta&#xD;&#xA;,mediaCntUnsuccessfulReq_actual&#xD;&#xA;,mediaCntUnsuccessfulReq_delta&#xD;&#xA;,mediaCntZnReq_actual&#xD;&#xA;,mediaCntZnReq_delta&#xD;&#xA;,xRpCntAuthFailed403_actual&#xD;&#xA;,xRpCntAuthFailed403_delta&#xD;&#xA;,xRpCntAuthFailed_actual&#xD;&#xA;,xRpCntAuthFailed_delta&#xD;&#xA;,xRpCntAuthResp_actual&#xD;&#xA;,xRpCntAuthResp_delta&#xD;&#xA;,xRpCntTrustGwFailed_actual&#xD;&#xA;,xRpCntTrustGwFailed_delta&#xD;&#xA;,xRpCntTrustGwResp_actual&#xD;&#xA;,xRpCntTrustGwResp_delta&#xD;&#xA;,xRqCntAuthDigestReq_actual&#xD;&#xA;,xRqCntAuthDigestReq_delta&#xD;&#xA;,xRqCntAuthGbaDigestReq_actual&#xD;&#xA;,xRqCntAuthGbaDigestReq_delta&#xD;&#xA;,xRqCntAuthGbaMeReq_actual&#xD;&#xA;,xRqCntAuthGbaMeReq_delta&#xD;&#xA;,xRqCntAuthGbaReq_actual&#xD;&#xA;,xRqCntAuthGbaReq_delta&#xD;&#xA;,xRqCntAuthGibaReq_actual&#xD;&#xA;,xRqCntAuthGibaReq_delta&#xD;&#xA;,xRqCntAuthReq_actual&#xD;&#xA;,xRqCntAuthReq_delta&#xD;&#xA;,xRqCntAuthSsoReq_actual&#xD;&#xA;,xRqCntAuthSsoReq_delta&#xD;&#xA;,xRqCntTrustGwReq_actual&#xD;&#xA;,xRqCntTrustGwReq_delta&#xD;&#xA;,xRqCntXcapCapReq_actual&#xD;&#xA;,xRqCntXcapCapReq_delta&#xD;&#xA;,xRqCntXcapDelReq_actual&#xD;&#xA;,xRqCntXcapDelReq_delta&#xD;&#xA;,xRqCntXcapDirReq_actual&#xD;&#xA;,xRqCntXcapDirReq_delta&#xD;&#xA;,xRqCntXcapGetReq_actual&#xD;&#xA;,xRqCntXcapGetReq_delta&#xD;&#xA;,xRqCntXcapPutReq_actual&#xD;&#xA;,xRqCntXcapPutReq_delta&#xD;&#xA;,xRqCntXcapReqUnsuccessful_actual&#xD;&#xA;,xRqCntXcapReqUnsuccessful_delta&#xD;&#xA;,xRqCntZnReq_actual&#xD;&#xA;,xRqCntZnReq_delta&#xD;&#xA;)&#xD;&#xA;select&#xD;&#xA; raw.NODE_NAME&#xD;&#xA;,raw.OSS_ID&#xD;&#xA;,raw.DATE_ID&#xD;&#xA;,raw.YEAR_ID&#xD;&#xA;,raw.MONTH_ID&#xD;&#xA;,raw.DAY_ID&#xD;&#xA;,raw.MIN_ID&#xD;&#xA;,rankbh.BHTYPE&#xD;&#xA;,raw.HOUR_ID&#xD;&#xA;,rankbh.BHCLASS&#xD;&#xA;,&apos;DAYBH&apos;&#xD;&#xA;,$sessionid&#xD;&#xA;,$batchid&#xD;&#xA;,raw.PERIOD_DURATION&#xD;&#xA;,&apos;AGGREGATED&apos;&#xD;&#xA;,raw.DC_RELEASE&#xD;&#xA;,raw.DC_SOURCE&#xD;&#xA;,raw.DC_TIMEZONE&#xD;&#xA;,rankbh.BH_ID&#xD;&#xA;,rankbh.OFFSET&#xD;&#xA;,raw.apSubCntSsoVpActSubCount_actual&#xD;&#xA;,raw.apSubCntSsoVpActSubCount_max&#xD;&#xA;,raw.apSubCntSsoVpActSubCount_min&#xD;&#xA;,raw.apSubCntSsoVpMaxSubCount_actual&#xD;&#xA;,raw.apSubCntSsoVpMaxSubCount_delta&#xD;&#xA;,raw.cnpCntInboundReqFailed403_actual&#xD;&#xA;,raw.cnpCntInboundReqFailed403_delta&#xD;&#xA;,raw.cnpCntInboundReqFailed404_actual&#xD;&#xA;,raw.cnpCntInboundReqFailed404_delta&#xD;&#xA;,raw.cnpCntInboundReqFailedOthers_actual&#xD;&#xA;,raw.cnpCntInboundReqFailedOthers_delta&#xD;&#xA;,raw.cnpCntInboundReq_actual&#xD;&#xA;,raw.cnpCntInboundReq_delta&#xD;&#xA;,raw.cnpCntOutboundReqFailed404_actual&#xD;&#xA;,raw.cnpCntOutboundReqFailed404_delta&#xD;&#xA;,raw.cnpCntOutboundReqFailedOthers_actual&#xD;&#xA;,raw.cnpCntOutboundReqFailedOthers_delta&#xD;&#xA;,raw.cnpCntOutboundReq_actual&#xD;&#xA;,raw.cnpCntOutboundReq_delta&#xD;&#xA;,raw.mediaCntAuthFailed_actual&#xD;&#xA;,raw.mediaCntAuthFailed_delta&#xD;&#xA;,raw.mediaCntAuthGbaMeReq_actual&#xD;&#xA;,raw.mediaCntAuthGbaMeReq_delta&#xD;&#xA;,raw.mediaCntAuthGbaReq_actual&#xD;&#xA;,raw.mediaCntAuthGbaReq_delta&#xD;&#xA;,raw.mediaCntAuthReqFailed403_actual&#xD;&#xA;,raw.mediaCntAuthReqFailed403_delta&#xD;&#xA;,raw.mediaCntAuthReq_actual&#xD;&#xA;,raw.mediaCntAuthReq_delta&#xD;&#xA;,raw.mediaCntAuthResp_actual&#xD;&#xA;,raw.mediaCntAuthResp_delta&#xD;&#xA;,raw.mediaCntReq_actual&#xD;&#xA;,raw.mediaCntReq_delta&#xD;&#xA;,raw.mediaCntUnsuccessfulReq_actual&#xD;&#xA;,raw.mediaCntUnsuccessfulReq_delta&#xD;&#xA;,raw.mediaCntZnReq_actual&#xD;&#xA;,raw.mediaCntZnReq_delta&#xD;&#xA;,raw.xRpCntAuthFailed403_actual&#xD;&#xA;,raw.xRpCntAuthFailed403_delta&#xD;&#xA;,raw.xRpCntAuthFailed_actual&#xD;&#xA;,raw.xRpCntAuthFailed_delta&#xD;&#xA;,raw.xRpCntAuthResp_actual&#xD;&#xA;,raw.xRpCntAuthResp_delta&#xD;&#xA;,raw.xRpCntTrustGwFailed_actual&#xD;&#xA;,raw.xRpCntTrustGwFailed_delta&#xD;&#xA;,raw.xRpCntTrustGwResp_actual&#xD;&#xA;,raw.xRpCntTrustGwResp_delta&#xD;&#xA;,raw.xRqCntAuthDigestReq_actual&#xD;&#xA;,raw.xRqCntAuthDigestReq_delta&#xD;&#xA;,raw.xRqCntAuthGbaDigestReq_actual&#xD;&#xA;,raw.xRqCntAuthGbaDigestReq_delta&#xD;&#xA;,raw.xRqCntAuthGbaMeReq_actual&#xD;&#xA;,raw.xRqCntAuthGbaMeReq_delta&#xD;&#xA;,raw.xRqCntAuthGbaReq_actual&#xD;&#xA;,raw.xRqCntAuthGbaReq_delta&#xD;&#xA;,raw.xRqCntAuthGibaReq_actual&#xD;&#xA;,raw.xRqCntAuthGibaReq_delta&#xD;&#xA;,raw.xRqCntAuthReq_actual&#xD;&#xA;,raw.xRqCntAuthReq_delta&#xD;&#xA;,raw.xRqCntAuthSsoReq_actual&#xD;&#xA;,raw.xRqCntAuthSsoReq_delta&#xD;&#xA;,raw.xRqCntTrustGwReq_actual&#xD;&#xA;,raw.xRqCntTrustGwReq_delta&#xD;&#xA;,raw.xRqCntXcapCapReq_actual&#xD;&#xA;,raw.xRqCntXcapCapReq_delta&#xD;&#xA;,raw.xRqCntXcapDelReq_actual&#xD;&#xA;,raw.xRqCntXcapDelReq_delta&#xD;&#xA;,raw.xRqCntXcapDirReq_actual&#xD;&#xA;,raw.xRqCntXcapDirReq_delta&#xD;&#xA;,raw.xRqCntXcapGetReq_actual&#xD;&#xA;,raw.xRqCntXcapGetReq_delta&#xD;&#xA;,raw.xRqCntXcapPutReq_actual&#xD;&#xA;,raw.xRqCntXcapPutReq_delta&#xD;&#xA;,raw.xRqCntXcapReqUnsuccessful_actual&#xD;&#xA;,raw.xRqCntXcapReqUnsuccessful_delta&#xD;&#xA;,raw.xRqCntZnReq_actual&#xD;&#xA;,raw.xRqCntZnReq_delta&#xD;&#xA;from &#xD;&#xA;(SELECT &#xD;&#xA;DATE_ID,&#xD;&#xA;BHTYPE,&#xD;&#xA;BUSYHOUR,&#xD;&#xA;BHCLASS,&#xD;&#xA;BH_ID,&#xD;&#xA;OFFSET,&#xD;&#xA;NODE_NAME,&#xD;&#xA;OSS_ID,&#xD;&#xA;CAST(rankbh.DATE_ID || &apos; &apos; || rankbh.BUSYHOUR || &apos;:&apos; || rankbh.OFFSET AS TIMESTAMP) AS start_timestamp, DATEADD(MINUTE, rankbh.WINDOWSIZE, rankbh.DATE_ID || &apos; &apos; || rankbh.BUSYHOUR || &apos;:&apos; || rankbh.OFFSET) AS end_timestamp FROM $sourceDerivedTable.get(&quot;RANKSRC&quot;) AS rankbh where rankbh.DATE_ID = $dateid and rankbh.BUSYHOUR is not null) AS rankbh, &#xD;&#xA;$sourceDerivedTable.get(&quot;BHSRC&quot;) as raw, LOG_BUSYHOURMAPPING as map&#xD;&#xA;where &#xD;&#xA;raw.datetime_id &gt;= rankbh.start_timestamp&#xD;&#xA;and&#xD;&#xA;raw.datetime_id &lt; rankbh.end_timestamp &#xD;&#xA;and raw.date_id between $dateid and dateadd (dd,+1,$dateid)&#xD;&#xA;and map.BHTARGETLEVEL = rankbh.BHTYPE&#xD;&#xA;and map.BHTARGETTYPE = &apos;$sourceType.get(&quot;BHSRC&quot;)&apos;&#xD;&#xA;and map.ENABLE = 1&#xD;&#xA;and raw.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xD;&#xA;and rankbh.NODE_NAME = raw.NODE_NAME&#xD;&#xA;and rankbh.OSS_ID = raw.OSS_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="407" COLLECTION_ID="107" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AGG_PROXY_WEEKBH_AFG&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AGG_PROXY&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;WEEK&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AGG_PROXY&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = dateadd(dd ,6, $date) AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="408" COLLECTION_ID="107" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AGG_PROXY_WEEKBH_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AGG_PROXY_DAYBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;#foreach($table in $targetTableList.get(&quot;DAYBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.bhclass = src.bhclass from $sourceDerivedTable.get(&quot;DAYBHCLASS&quot;) as src&#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.date_id = src.date_id&#xA;and dst.bhtype = src.bhtype and&#xA;dst.NODE_NAME= src.NODE_NAME&#xA;and dst.OSS_ID= src.OSS_ID&#xA;&#xA;#end&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="409" COLLECTION_ID="108" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AGG_PROXY_MONTHBH_AFG&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AGG_PROXY&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;MONTH&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AGG_PROXY&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = dateadd(dd ,6, $date) AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="410" COLLECTION_ID="108" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AGG_PROXY_MONTHBH_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AGG_PROXY_DAYBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;#foreach($table in $targetTableList.get(&quot;DAYBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.bhclass = src.bhclass FROM $sourceDerivedTable.get(&quot;DAYBHCLASS&quot;) as src&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.date_id = src.date_id&#xA;and dst.bhtype = src.bhtype and&#xA;dst.NODE_NAME= src.NODE_NAME&#xA;and dst.OSS_ID= src.OSS_ID&#xA;&#xA;#end&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="411" COLLECTION_ID="109" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_BOOTSTRAP_FUNC_DAY&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_BOOTSTRAP_FUNC&apos; AND TIMELEVEL = &apos;DAY&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_BOOTSTRAP_FUNC_RAW WHERE DATE_ID = $date &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="412" COLLECTION_ID="109" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_BOOTSTRAP_FUNC_DAY" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_BOOTSTRAP_FUNC_DAY&#xD;&#xA;" ACTION_CONTENTS="DELETE $targetDerivedTable.get(&quot;TOTAL&quot;)&#xA;WHERE DATE_ID=$dateid&#xA;&#xA;Insert into $targetDerivedTable.get(&quot;TOTAL&quot;)&#xA;(&#xA; NODE_NAME &#xA;,OSS_ID&#xA;,DC_RELEASE&#xA;,DATE_ID&#xA;,YEAR_ID&#xA;,MONTH_ID&#xA;,DAY_ID&#xA;,WEEK_ID&#xA;,DATACOVERAGE&#xA;,AGG_COUNT&#xA;,SESSION_ID&#xA;,BATCH_ID&#xA;,TIMELEVEL&#xA;,PERIOD_DURATION&#xA;,DC_SOURCE&#xA;,DC_TIMEZONE&#xA;,ROWSTATUS&#xA;,bootAuthFail_actual&#xA;,bootAuthFail_delta&#xA;,bootAuthGBADIGESTFail_actual&#xA;,bootAuthGBADIGESTFail_delta&#xA;,bootAuthGBADIGESTSucc_actual&#xA;,bootAuthGBADIGESTSucc_delta&#xA;,bootAuthGBAMEFail_actual&#xA;,bootAuthGBAMEFail_delta&#xA;,bootAuthGBAMESucc_actual&#xA;,bootAuthGBAMESucc_delta&#xA;,bootAuthGBAUFail_actual&#xA;,bootAuthGBAUFail_delta&#xA;,bootAuthGBAUSucc_actual&#xA;,bootAuthGBAUSucc_delta&#xA;,bootAuthReqTot_actual&#xA;,bootAuthReqTot_delta&#xA;,bootAuthSucc_actual&#xA;,bootAuthSucc_delta&#xA;,bootUseFailReq_actual&#xA;,bootUseFailReq_delta&#xA;,bootUseSucReq_actual&#xA;,bootUseSucReq_delta&#xA;,bootUseTotReq_actual&#xA;,bootUseTotReq_delta&#xA;,bsfGbaAkaSubCntActSubCount_actual&#xA;,bsfGbaAkaSubCntActSubCount_max&#xA;,bsfGbaAkaSubCntActSubCount_min&#xA;,bsfGbaAkaSubCntMaxNafCount_actual&#xA;,bsfGbaAkaSubCntMaxNafCount_delta&#xA;,bsfGbaAkaSubCntMaxSubCount_actual&#xA;,bsfGbaAkaSubCntMaxSubCount_delta&#xA;)&#xA;Select&#xA; NODE_NAME&#xA;,OSS_ID&#xA;,DC_RELEASE&#xA;,DATE_ID&#xA;,MIN(YEAR_ID)&#xA;,MIN(MONTH_ID)&#xA;,MIN(DAY_ID)&#xA;,MIN(DATEPART(cwk, $dateid))&#xA;,SUM(PERIOD_DURATION)&#xA;,COUNT(*)&#xA;,$sessionid&#xA;,$batchid&#xA;,&apos;DAY&apos;&#xA;,1440&#xA;,MIN(DC_SOURCE)&#xA;,MIN(DC_TIMEZONE)&#xA;,&apos;AGGREGATED&apos;&#xA;,SUM(bootAuthFail_actual)&#xA;,SUM(bootAuthFail_delta)&#xA;,SUM(bootAuthGBADIGESTFail_actual)&#xA;,SUM(bootAuthGBADIGESTFail_delta)&#xA;,SUM(bootAuthGBADIGESTSucc_actual)&#xA;,SUM(bootAuthGBADIGESTSucc_delta)&#xA;,SUM(bootAuthGBAMEFail_actual)&#xA;,SUM(bootAuthGBAMEFail_delta)&#xA;,SUM(bootAuthGBAMESucc_actual)&#xA;,SUM(bootAuthGBAMESucc_delta)&#xA;,SUM(bootAuthGBAUFail_actual)&#xA;,SUM(bootAuthGBAUFail_delta)&#xA;,SUM(bootAuthGBAUSucc_actual)&#xA;,SUM(bootAuthGBAUSucc_delta)&#xA;,SUM(bootAuthReqTot_actual)&#xA;,SUM(bootAuthReqTot_delta)&#xA;,SUM(bootAuthSucc_actual)&#xA;,SUM(bootAuthSucc_delta)&#xA;,SUM(bootUseFailReq_actual)&#xA;,SUM(bootUseFailReq_delta)&#xA;,SUM(bootUseSucReq_actual)&#xA;,SUM(bootUseSucReq_delta)&#xA;,SUM(bootUseTotReq_actual)&#xA;,SUM(bootUseTotReq_delta)&#xA;,AVG(bsfGbaAkaSubCntActSubCount_actual)&#xA;,MAX(bsfGbaAkaSubCntActSubCount_max)&#xA;,MIN(bsfGbaAkaSubCntActSubCount_min)&#xA;,SUM(bsfGbaAkaSubCntMaxNafCount_actual)&#xA;,SUM(bsfGbaAkaSubCntMaxNafCount_delta)&#xA;,SUM(bsfGbaAkaSubCntMaxSubCount_actual)&#xA;,SUM(bsfGbaAkaSubCntMaxSubCount_delta)&#xA;from  $sourceDerivedTable.get(&quot;TOTAL&quot;)  AS src &#xA;where src.DATE_ID=$dateid&#xA;and src.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;group by&#xA; NODE_NAME&#xA;,OSS_ID&#xA;,DC_RELEASE&#xA;,DATE_ID&#xA;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="413" COLLECTION_ID="110" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_BOOTSTRAP_FUNC_DAYBH_AFG&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_BOOTSTRAP_FUNC&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_BOOTSTRAP_FUNC_RAW WHERE DATE_ID = $date &#xA;UNION ALL&#xA;select count(*) from (SELECT count(distinct aggregation) c  FROM LOG_AGGREGATIONSTATUS   WHERE typename = &apos;DC_E_AFG_AFGBH&apos; AND timelevel = &apos;RANKBH&apos; AND DATADATE = $date and AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS IN (&apos;AGGREGATED&apos;) ) as a ,(select  count(distinct aggregation) c  from LOG_AggregationRules where target_type = &apos;DC_E_AFG_AFGBH&apos; AND target_level = &apos;RANKBH&apos;  and aggregationscope = &apos;DAY&apos;) as b where a.c&gt;=b.c and b.c &lt;&gt; 0 &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="414" COLLECTION_ID="110" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_BOOTSTRAP_FUNC_DAYBH_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_BOOTSTRAP_FUNC_DAYBH&#xD;&#xA;" ACTION_CONTENTS="&#xD;&#xA;DELETE $targetDerivedTable.get(&quot;RANKSRC&quot;)&#xD;&#xA;WHERE DATE_ID=$dateid&#xD;&#xA;AND BHTYPE in (select distinct BHTYPE from $sourceDerivedTable.get(&quot;RANKSRC&quot;))&#xD;&#xA;&#xD;&#xA;Insert into $targetDerivedTable.get(&quot;RANKSRC&quot;)&#xD;&#xA;(&#xD;&#xA; NODE_NAME&#xD;&#xA;,OSS_ID&#xD;&#xA;,DATE_ID&#xD;&#xA;,YEAR_ID&#xD;&#xA;,MONTH_ID&#xD;&#xA;,DAY_ID&#xD;&#xA;,MIN_ID&#xD;&#xA;,BHTYPE&#xD;&#xA;,BUSYHOUR&#xD;&#xA;,BHCLASS&#xD;&#xA;,TIMELEVEL&#xD;&#xA;,SESSION_ID&#xD;&#xA;,BATCH_ID&#xD;&#xA;,PERIOD_DURATION&#xD;&#xA;,ROWSTATUS&#xD;&#xA;,DC_RELEASE&#xD;&#xA;,DC_SOURCE&#xD;&#xA;,DC_TIMEZONE&#xD;&#xA;,BH_ID&#xD;&#xA;,OFFSET&#xD;&#xA;,bootAuthFail_actual&#xD;&#xA;,bootAuthFail_delta&#xD;&#xA;,bootAuthGBADIGESTFail_actual&#xD;&#xA;,bootAuthGBADIGESTFail_delta&#xD;&#xA;,bootAuthGBADIGESTSucc_actual&#xD;&#xA;,bootAuthGBADIGESTSucc_delta&#xD;&#xA;,bootAuthGBAMEFail_actual&#xD;&#xA;,bootAuthGBAMEFail_delta&#xD;&#xA;,bootAuthGBAMESucc_actual&#xD;&#xA;,bootAuthGBAMESucc_delta&#xD;&#xA;,bootAuthGBAUFail_actual&#xD;&#xA;,bootAuthGBAUFail_delta&#xD;&#xA;,bootAuthGBAUSucc_actual&#xD;&#xA;,bootAuthGBAUSucc_delta&#xD;&#xA;,bootAuthReqTot_actual&#xD;&#xA;,bootAuthReqTot_delta&#xD;&#xA;,bootAuthSucc_actual&#xD;&#xA;,bootAuthSucc_delta&#xD;&#xA;,bootUseFailReq_actual&#xD;&#xA;,bootUseFailReq_delta&#xD;&#xA;,bootUseSucReq_actual&#xD;&#xA;,bootUseSucReq_delta&#xD;&#xA;,bootUseTotReq_actual&#xD;&#xA;,bootUseTotReq_delta&#xD;&#xA;,bsfGbaAkaSubCntActSubCount_actual&#xD;&#xA;,bsfGbaAkaSubCntActSubCount_max&#xD;&#xA;,bsfGbaAkaSubCntActSubCount_min&#xD;&#xA;,bsfGbaAkaSubCntMaxNafCount_actual&#xD;&#xA;,bsfGbaAkaSubCntMaxNafCount_delta&#xD;&#xA;,bsfGbaAkaSubCntMaxSubCount_actual&#xD;&#xA;,bsfGbaAkaSubCntMaxSubCount_delta&#xD;&#xA;)&#xD;&#xA;select&#xD;&#xA; raw.NODE_NAME&#xD;&#xA;,raw.OSS_ID&#xD;&#xA;,raw.DATE_ID&#xD;&#xA;,raw.YEAR_ID&#xD;&#xA;,raw.MONTH_ID&#xD;&#xA;,raw.DAY_ID&#xD;&#xA;,raw.MIN_ID&#xD;&#xA;,rankbh.BHTYPE&#xD;&#xA;,raw.HOUR_ID&#xD;&#xA;,rankbh.BHCLASS&#xD;&#xA;,&apos;DAYBH&apos;&#xD;&#xA;,$sessionid&#xD;&#xA;,$batchid&#xD;&#xA;,raw.PERIOD_DURATION&#xD;&#xA;,&apos;AGGREGATED&apos;&#xD;&#xA;,raw.DC_RELEASE&#xD;&#xA;,raw.DC_SOURCE&#xD;&#xA;,raw.DC_TIMEZONE&#xD;&#xA;,rankbh.BH_ID&#xD;&#xA;,rankbh.OFFSET&#xD;&#xA;,raw.bootAuthFail_actual&#xD;&#xA;,raw.bootAuthFail_delta&#xD;&#xA;,raw.bootAuthGBADIGESTFail_actual&#xD;&#xA;,raw.bootAuthGBADIGESTFail_delta&#xD;&#xA;,raw.bootAuthGBADIGESTSucc_actual&#xD;&#xA;,raw.bootAuthGBADIGESTSucc_delta&#xD;&#xA;,raw.bootAuthGBAMEFail_actual&#xD;&#xA;,raw.bootAuthGBAMEFail_delta&#xD;&#xA;,raw.bootAuthGBAMESucc_actual&#xD;&#xA;,raw.bootAuthGBAMESucc_delta&#xD;&#xA;,raw.bootAuthGBAUFail_actual&#xD;&#xA;,raw.bootAuthGBAUFail_delta&#xD;&#xA;,raw.bootAuthGBAUSucc_actual&#xD;&#xA;,raw.bootAuthGBAUSucc_delta&#xD;&#xA;,raw.bootAuthReqTot_actual&#xD;&#xA;,raw.bootAuthReqTot_delta&#xD;&#xA;,raw.bootAuthSucc_actual&#xD;&#xA;,raw.bootAuthSucc_delta&#xD;&#xA;,raw.bootUseFailReq_actual&#xD;&#xA;,raw.bootUseFailReq_delta&#xD;&#xA;,raw.bootUseSucReq_actual&#xD;&#xA;,raw.bootUseSucReq_delta&#xD;&#xA;,raw.bootUseTotReq_actual&#xD;&#xA;,raw.bootUseTotReq_delta&#xD;&#xA;,raw.bsfGbaAkaSubCntActSubCount_actual&#xD;&#xA;,raw.bsfGbaAkaSubCntActSubCount_max&#xD;&#xA;,raw.bsfGbaAkaSubCntActSubCount_min&#xD;&#xA;,raw.bsfGbaAkaSubCntMaxNafCount_actual&#xD;&#xA;,raw.bsfGbaAkaSubCntMaxNafCount_delta&#xD;&#xA;,raw.bsfGbaAkaSubCntMaxSubCount_actual&#xD;&#xA;,raw.bsfGbaAkaSubCntMaxSubCount_delta&#xD;&#xA;from &#xD;&#xA;(SELECT &#xD;&#xA;DATE_ID,&#xD;&#xA;BHTYPE,&#xD;&#xA;BUSYHOUR,&#xD;&#xA;BHCLASS,&#xD;&#xA;BH_ID,&#xD;&#xA;OFFSET,&#xD;&#xA;NODE_NAME,&#xD;&#xA;OSS_ID,&#xD;&#xA;CAST(rankbh.DATE_ID || &apos; &apos; || rankbh.BUSYHOUR || &apos;:&apos; || rankbh.OFFSET AS TIMESTAMP) AS start_timestamp, DATEADD(MINUTE, rankbh.WINDOWSIZE, rankbh.DATE_ID || &apos; &apos; || rankbh.BUSYHOUR || &apos;:&apos; || rankbh.OFFSET) AS end_timestamp FROM $sourceDerivedTable.get(&quot;RANKSRC&quot;) AS rankbh where rankbh.DATE_ID = $dateid and rankbh.BUSYHOUR is not null) AS rankbh, &#xD;&#xA;$sourceDerivedTable.get(&quot;BHSRC&quot;) as raw, LOG_BUSYHOURMAPPING as map&#xD;&#xA;where &#xD;&#xA;raw.datetime_id &gt;= rankbh.start_timestamp&#xD;&#xA;and&#xD;&#xA;raw.datetime_id &lt; rankbh.end_timestamp &#xD;&#xA;and raw.date_id between $dateid and dateadd (dd,+1,$dateid)&#xD;&#xA;and map.BHTARGETLEVEL = rankbh.BHTYPE&#xD;&#xA;and map.BHTARGETTYPE = &apos;$sourceType.get(&quot;BHSRC&quot;)&apos;&#xD;&#xA;and map.ENABLE = 1&#xD;&#xA;and raw.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xD;&#xA;and rankbh.NODE_NAME = raw.NODE_NAME&#xD;&#xA;and rankbh.OSS_ID = raw.OSS_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="415" COLLECTION_ID="111" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_BOOTSTRAP_FUNC_WEEKBH_AFG&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_BOOTSTRAP_FUNC&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;WEEK&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_BOOTSTRAP_FUNC&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = dateadd(dd ,6, $date) AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="416" COLLECTION_ID="111" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_BOOTSTRAP_FUNC_WEEKBH_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_BOOTSTRAP_FUNC_DAYBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;#foreach($table in $targetTableList.get(&quot;DAYBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.bhclass = src.bhclass from $sourceDerivedTable.get(&quot;DAYBHCLASS&quot;) as src&#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.date_id = src.date_id&#xA;and dst.bhtype = src.bhtype and&#xA;dst.NODE_NAME= src.NODE_NAME&#xA;and dst.OSS_ID= src.OSS_ID&#xA;&#xA;#end&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="417" COLLECTION_ID="112" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_BOOTSTRAP_FUNC_MONTHBH_AFG&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_BOOTSTRAP_FUNC&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;MONTH&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_BOOTSTRAP_FUNC&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = dateadd(dd ,6, $date) AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="418" COLLECTION_ID="112" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_BOOTSTRAP_FUNC_MONTHBH_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_BOOTSTRAP_FUNC_DAYBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;#foreach($table in $targetTableList.get(&quot;DAYBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.bhclass = src.bhclass FROM $sourceDerivedTable.get(&quot;DAYBHCLASS&quot;) as src&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.date_id = src.date_id&#xA;and dst.bhtype = src.bhtype and&#xA;dst.NODE_NAME= src.NODE_NAME&#xA;and dst.OSS_ID= src.OSS_ID&#xA;&#xA;#end&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="419" COLLECTION_ID="113" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_DIAMETER_DAY&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_DIAMETER&apos; AND TIMELEVEL = &apos;DAY&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_DIAMETER_RAW WHERE DATE_ID = $date &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="420" COLLECTION_ID="113" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_DIAMETER_DAY" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_DIAMETER_DAY&#xD;&#xA;" ACTION_CONTENTS="DELETE $targetDerivedTable.get(&quot;TOTAL&quot;)&#xA;WHERE DATE_ID=$dateid&#xA;&#xA;Insert into $targetDerivedTable.get(&quot;TOTAL&quot;)&#xA;(&#xA; NODE_NAME &#xA;,OSS_ID&#xA;,DC_RELEASE&#xA;,DATE_ID&#xA;,YEAR_ID&#xA;,MONTH_ID&#xA;,DAY_ID&#xA;,WEEK_ID&#xA;,DATACOVERAGE&#xA;,AGG_COUNT&#xA;,SESSION_ID&#xA;,BATCH_ID&#xA;,TIMELEVEL&#xA;,PERIOD_DURATION&#xA;,DC_SOURCE&#xA;,DC_TIMEZONE&#xA;,ROWSTATUS&#xA;,dZhCntAuthAvgTime_actual&#xA;,dZhCntAuthAvgTime_max&#xA;,dZhCntAuthAvgTime_min&#xA;,dZhCntAuthFailed_actual&#xA;,dZhCntAuthFailed_delta&#xA;,dZhCntAuthMaxTime_actual&#xA;,dZhCntAuthMaxTime_max&#xA;,dZhCntAuthMaxTime_min&#xA;,dZhCntAuthSuccessful_actual&#xA;,dZhCntAuthSuccessful_delta&#xA;,dZhCntAuthTotal_actual&#xA;,dZhCntAuthTotal_delta&#xA;)&#xA;Select&#xA; NODE_NAME&#xA;,OSS_ID&#xA;,DC_RELEASE&#xA;,DATE_ID&#xA;,MIN(YEAR_ID)&#xA;,MIN(MONTH_ID)&#xA;,MIN(DAY_ID)&#xA;,MIN(DATEPART(cwk, $dateid))&#xA;,SUM(PERIOD_DURATION)&#xA;,COUNT(*)&#xA;,$sessionid&#xA;,$batchid&#xA;,&apos;DAY&apos;&#xA;,1440&#xA;,MIN(DC_SOURCE)&#xA;,MIN(DC_TIMEZONE)&#xA;,&apos;AGGREGATED&apos;&#xA;,AVG(dZhCntAuthAvgTime_actual)&#xA;,MAX(dZhCntAuthAvgTime_max)&#xA;,MIN(dZhCntAuthAvgTime_min)&#xA;,SUM(dZhCntAuthFailed_actual)&#xA;,SUM(dZhCntAuthFailed_delta)&#xA;,AVG(dZhCntAuthMaxTime_actual)&#xA;,MAX(dZhCntAuthMaxTime_max)&#xA;,MIN(dZhCntAuthMaxTime_min)&#xA;,SUM(dZhCntAuthSuccessful_actual)&#xA;,SUM(dZhCntAuthSuccessful_delta)&#xA;,SUM(dZhCntAuthTotal_actual)&#xA;,SUM(dZhCntAuthTotal_delta)&#xA;from  $sourceDerivedTable.get(&quot;TOTAL&quot;)  AS src &#xA;where src.DATE_ID=$dateid&#xA;and src.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;group by&#xA; NODE_NAME&#xA;,OSS_ID&#xA;,DC_RELEASE&#xA;,DATE_ID&#xA;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="421" COLLECTION_ID="114" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_DIAMETER_DAYBH_AFG&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_DIAMETER&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_DIAMETER_RAW WHERE DATE_ID = $date &#xA;UNION ALL&#xA;select count(*) from (SELECT count(distinct aggregation) c  FROM LOG_AGGREGATIONSTATUS   WHERE typename = &apos;DC_E_AFG_AFGBH&apos; AND timelevel = &apos;RANKBH&apos; AND DATADATE = $date and AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS IN (&apos;AGGREGATED&apos;) ) as a ,(select  count(distinct aggregation) c  from LOG_AggregationRules where target_type = &apos;DC_E_AFG_AFGBH&apos; AND target_level = &apos;RANKBH&apos;  and aggregationscope = &apos;DAY&apos;) as b where a.c&gt;=b.c and b.c &lt;&gt; 0 &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="422" COLLECTION_ID="114" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_DIAMETER_DAYBH_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_DIAMETER_DAYBH&#xD;&#xA;" ACTION_CONTENTS="&#xD;&#xA;DELETE $targetDerivedTable.get(&quot;RANKSRC&quot;)&#xD;&#xA;WHERE DATE_ID=$dateid&#xD;&#xA;AND BHTYPE in (select distinct BHTYPE from $sourceDerivedTable.get(&quot;RANKSRC&quot;))&#xD;&#xA;&#xD;&#xA;Insert into $targetDerivedTable.get(&quot;RANKSRC&quot;)&#xD;&#xA;(&#xD;&#xA; NODE_NAME&#xD;&#xA;,OSS_ID&#xD;&#xA;,DATE_ID&#xD;&#xA;,YEAR_ID&#xD;&#xA;,MONTH_ID&#xD;&#xA;,DAY_ID&#xD;&#xA;,MIN_ID&#xD;&#xA;,BHTYPE&#xD;&#xA;,BUSYHOUR&#xD;&#xA;,BHCLASS&#xD;&#xA;,TIMELEVEL&#xD;&#xA;,SESSION_ID&#xD;&#xA;,BATCH_ID&#xD;&#xA;,PERIOD_DURATION&#xD;&#xA;,ROWSTATUS&#xD;&#xA;,DC_RELEASE&#xD;&#xA;,DC_SOURCE&#xD;&#xA;,DC_TIMEZONE&#xD;&#xA;,BH_ID&#xD;&#xA;,OFFSET&#xD;&#xA;,dZhCntAuthAvgTime_actual&#xD;&#xA;,dZhCntAuthAvgTime_max&#xD;&#xA;,dZhCntAuthAvgTime_min&#xD;&#xA;,dZhCntAuthFailed_actual&#xD;&#xA;,dZhCntAuthFailed_delta&#xD;&#xA;,dZhCntAuthMaxTime_actual&#xD;&#xA;,dZhCntAuthMaxTime_max&#xD;&#xA;,dZhCntAuthMaxTime_min&#xD;&#xA;,dZhCntAuthSuccessful_actual&#xD;&#xA;,dZhCntAuthSuccessful_delta&#xD;&#xA;,dZhCntAuthTotal_actual&#xD;&#xA;,dZhCntAuthTotal_delta&#xD;&#xA;)&#xD;&#xA;select&#xD;&#xA; raw.NODE_NAME&#xD;&#xA;,raw.OSS_ID&#xD;&#xA;,raw.DATE_ID&#xD;&#xA;,raw.YEAR_ID&#xD;&#xA;,raw.MONTH_ID&#xD;&#xA;,raw.DAY_ID&#xD;&#xA;,raw.MIN_ID&#xD;&#xA;,rankbh.BHTYPE&#xD;&#xA;,raw.HOUR_ID&#xD;&#xA;,rankbh.BHCLASS&#xD;&#xA;,&apos;DAYBH&apos;&#xD;&#xA;,$sessionid&#xD;&#xA;,$batchid&#xD;&#xA;,raw.PERIOD_DURATION&#xD;&#xA;,&apos;AGGREGATED&apos;&#xD;&#xA;,raw.DC_RELEASE&#xD;&#xA;,raw.DC_SOURCE&#xD;&#xA;,raw.DC_TIMEZONE&#xD;&#xA;,rankbh.BH_ID&#xD;&#xA;,rankbh.OFFSET&#xD;&#xA;,raw.dZhCntAuthAvgTime_actual&#xD;&#xA;,raw.dZhCntAuthAvgTime_max&#xD;&#xA;,raw.dZhCntAuthAvgTime_min&#xD;&#xA;,raw.dZhCntAuthFailed_actual&#xD;&#xA;,raw.dZhCntAuthFailed_delta&#xD;&#xA;,raw.dZhCntAuthMaxTime_actual&#xD;&#xA;,raw.dZhCntAuthMaxTime_max&#xD;&#xA;,raw.dZhCntAuthMaxTime_min&#xD;&#xA;,raw.dZhCntAuthSuccessful_actual&#xD;&#xA;,raw.dZhCntAuthSuccessful_delta&#xD;&#xA;,raw.dZhCntAuthTotal_actual&#xD;&#xA;,raw.dZhCntAuthTotal_delta&#xD;&#xA;from &#xD;&#xA;(SELECT &#xD;&#xA;DATE_ID,&#xD;&#xA;BHTYPE,&#xD;&#xA;BUSYHOUR,&#xD;&#xA;BHCLASS,&#xD;&#xA;BH_ID,&#xD;&#xA;OFFSET,&#xD;&#xA;NODE_NAME,&#xD;&#xA;OSS_ID,&#xD;&#xA;CAST(rankbh.DATE_ID || &apos; &apos; || rankbh.BUSYHOUR || &apos;:&apos; || rankbh.OFFSET AS TIMESTAMP) AS start_timestamp, DATEADD(MINUTE, rankbh.WINDOWSIZE, rankbh.DATE_ID || &apos; &apos; || rankbh.BUSYHOUR || &apos;:&apos; || rankbh.OFFSET) AS end_timestamp FROM $sourceDerivedTable.get(&quot;RANKSRC&quot;) AS rankbh where rankbh.DATE_ID = $dateid and rankbh.BUSYHOUR is not null) AS rankbh, &#xD;&#xA;$sourceDerivedTable.get(&quot;BHSRC&quot;) as raw, LOG_BUSYHOURMAPPING as map&#xD;&#xA;where &#xD;&#xA;raw.datetime_id &gt;= rankbh.start_timestamp&#xD;&#xA;and&#xD;&#xA;raw.datetime_id &lt; rankbh.end_timestamp &#xD;&#xA;and raw.date_id between $dateid and dateadd (dd,+1,$dateid)&#xD;&#xA;and map.BHTARGETLEVEL = rankbh.BHTYPE&#xD;&#xA;and map.BHTARGETTYPE = &apos;$sourceType.get(&quot;BHSRC&quot;)&apos;&#xD;&#xA;and map.ENABLE = 1&#xD;&#xA;and raw.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xD;&#xA;and rankbh.NODE_NAME = raw.NODE_NAME&#xD;&#xA;and rankbh.OSS_ID = raw.OSS_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="423" COLLECTION_ID="115" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_DIAMETER_WEEKBH_AFG&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_DIAMETER&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;WEEK&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_DIAMETER&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = dateadd(dd ,6, $date) AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="424" COLLECTION_ID="115" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_DIAMETER_WEEKBH_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_DIAMETER_DAYBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;#foreach($table in $targetTableList.get(&quot;DAYBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.bhclass = src.bhclass from $sourceDerivedTable.get(&quot;DAYBHCLASS&quot;) as src&#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.date_id = src.date_id&#xA;and dst.bhtype = src.bhtype and&#xA;dst.NODE_NAME= src.NODE_NAME&#xA;and dst.OSS_ID= src.OSS_ID&#xA;&#xA;#end&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="425" COLLECTION_ID="116" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_DIAMETER_MONTHBH_AFG&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_DIAMETER&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;MONTH&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_DIAMETER&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = dateadd(dd ,6, $date) AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="426" COLLECTION_ID="116" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_DIAMETER_MONTHBH_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_DIAMETER_DAYBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;#foreach($table in $targetTableList.get(&quot;DAYBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.bhclass = src.bhclass FROM $sourceDerivedTable.get(&quot;DAYBHCLASS&quot;) as src&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.date_id = src.date_id&#xA;and dst.bhtype = src.bhtype and&#xA;dst.NODE_NAME= src.NODE_NAME&#xA;and dst.OSS_ID= src.OSS_ID&#xA;&#xA;#end&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="427" COLLECTION_ID="117" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_OPENID_CONN_DAY&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_OPENID_CONN&apos; AND TIMELEVEL = &apos;DAY&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_OPENID_CONN_RAW WHERE DATE_ID = $date &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="428" COLLECTION_ID="117" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_OPENID_CONN_DAY" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_OPENID_CONN_DAY&#xD;&#xA;" ACTION_CONTENTS="DELETE $targetDerivedTable.get(&quot;TOTAL&quot;)&#xA;WHERE DATE_ID=$dateid&#xA;&#xA;Insert into $targetDerivedTable.get(&quot;TOTAL&quot;)&#xA;(&#xA; NODE_NAME &#xA;,OSS_ID&#xA;,DC_RELEASE&#xA;,DATE_ID&#xA;,YEAR_ID&#xA;,MONTH_ID&#xA;,DAY_ID&#xA;,WEEK_ID&#xA;,DATACOVERAGE&#xA;,AGG_COUNT&#xA;,SESSION_ID&#xA;,BATCH_ID&#xA;,TIMELEVEL&#xA;,PERIOD_DURATION&#xA;,DC_SOURCE&#xA;,DC_TIMEZONE&#xA;,ROWSTATUS&#xA;,oidcAuthFail401_actual&#xA;,oidcAuthFail401_delta&#xA;,oidcAuthFail_actual&#xA;,oidcAuthFail_delta&#xA;,oidcAuthReq_actual&#xA;,oidcAuthReq_delta&#xA;,oidcAuthSucc_actual&#xA;,oidcAuthSucc_delta&#xA;)&#xA;Select&#xA; NODE_NAME&#xA;,OSS_ID&#xA;,DC_RELEASE&#xA;,DATE_ID&#xA;,MIN(YEAR_ID)&#xA;,MIN(MONTH_ID)&#xA;,MIN(DAY_ID)&#xA;,MIN(DATEPART(cwk, $dateid))&#xA;,SUM(PERIOD_DURATION)&#xA;,COUNT(*)&#xA;,$sessionid&#xA;,$batchid&#xA;,&apos;DAY&apos;&#xA;,1440&#xA;,MIN(DC_SOURCE)&#xA;,MIN(DC_TIMEZONE)&#xA;,&apos;AGGREGATED&apos;&#xA;,SUM(oidcAuthFail401_actual)&#xA;,SUM(oidcAuthFail401_delta)&#xA;,SUM(oidcAuthFail_actual)&#xA;,SUM(oidcAuthFail_delta)&#xA;,SUM(oidcAuthReq_actual)&#xA;,SUM(oidcAuthReq_delta)&#xA;,SUM(oidcAuthSucc_actual)&#xA;,SUM(oidcAuthSucc_delta)&#xA;from  $sourceDerivedTable.get(&quot;TOTAL&quot;)  AS src &#xA;where src.DATE_ID=$dateid&#xA;and src.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;group by&#xA; NODE_NAME&#xA;,OSS_ID&#xA;,DC_RELEASE&#xA;,DATE_ID&#xA;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="429" COLLECTION_ID="118" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_OPENID_CONN_DAYBH_AFG&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_OPENID_CONN&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_OPENID_CONN_RAW WHERE DATE_ID = $date &#xA;UNION ALL&#xA;select count(*) from (SELECT count(distinct aggregation) c  FROM LOG_AGGREGATIONSTATUS   WHERE typename = &apos;DC_E_AFG_AFGBH&apos; AND timelevel = &apos;RANKBH&apos; AND DATADATE = $date and AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS IN (&apos;AGGREGATED&apos;) ) as a ,(select  count(distinct aggregation) c  from LOG_AggregationRules where target_type = &apos;DC_E_AFG_AFGBH&apos; AND target_level = &apos;RANKBH&apos;  and aggregationscope = &apos;DAY&apos;) as b where a.c&gt;=b.c and b.c &lt;&gt; 0 &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="430" COLLECTION_ID="118" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_OPENID_CONN_DAYBH_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_OPENID_CONN_DAYBH&#xD;&#xA;" ACTION_CONTENTS="&#xD;&#xA;DELETE $targetDerivedTable.get(&quot;RANKSRC&quot;)&#xD;&#xA;WHERE DATE_ID=$dateid&#xD;&#xA;AND BHTYPE in (select distinct BHTYPE from $sourceDerivedTable.get(&quot;RANKSRC&quot;))&#xD;&#xA;&#xD;&#xA;Insert into $targetDerivedTable.get(&quot;RANKSRC&quot;)&#xD;&#xA;(&#xD;&#xA; NODE_NAME&#xD;&#xA;,OSS_ID&#xD;&#xA;,DATE_ID&#xD;&#xA;,YEAR_ID&#xD;&#xA;,MONTH_ID&#xD;&#xA;,DAY_ID&#xD;&#xA;,MIN_ID&#xD;&#xA;,BHTYPE&#xD;&#xA;,BUSYHOUR&#xD;&#xA;,BHCLASS&#xD;&#xA;,TIMELEVEL&#xD;&#xA;,SESSION_ID&#xD;&#xA;,BATCH_ID&#xD;&#xA;,PERIOD_DURATION&#xD;&#xA;,ROWSTATUS&#xD;&#xA;,DC_RELEASE&#xD;&#xA;,DC_SOURCE&#xD;&#xA;,DC_TIMEZONE&#xD;&#xA;,BH_ID&#xD;&#xA;,OFFSET&#xD;&#xA;,oidcAuthFail401_actual&#xD;&#xA;,oidcAuthFail401_delta&#xD;&#xA;,oidcAuthFail_actual&#xD;&#xA;,oidcAuthFail_delta&#xD;&#xA;,oidcAuthReq_actual&#xD;&#xA;,oidcAuthReq_delta&#xD;&#xA;,oidcAuthSucc_actual&#xD;&#xA;,oidcAuthSucc_delta&#xD;&#xA;)&#xD;&#xA;select&#xD;&#xA; raw.NODE_NAME&#xD;&#xA;,raw.OSS_ID&#xD;&#xA;,raw.DATE_ID&#xD;&#xA;,raw.YEAR_ID&#xD;&#xA;,raw.MONTH_ID&#xD;&#xA;,raw.DAY_ID&#xD;&#xA;,raw.MIN_ID&#xD;&#xA;,rankbh.BHTYPE&#xD;&#xA;,raw.HOUR_ID&#xD;&#xA;,rankbh.BHCLASS&#xD;&#xA;,&apos;DAYBH&apos;&#xD;&#xA;,$sessionid&#xD;&#xA;,$batchid&#xD;&#xA;,raw.PERIOD_DURATION&#xD;&#xA;,&apos;AGGREGATED&apos;&#xD;&#xA;,raw.DC_RELEASE&#xD;&#xA;,raw.DC_SOURCE&#xD;&#xA;,raw.DC_TIMEZONE&#xD;&#xA;,rankbh.BH_ID&#xD;&#xA;,rankbh.OFFSET&#xD;&#xA;,raw.oidcAuthFail401_actual&#xD;&#xA;,raw.oidcAuthFail401_delta&#xD;&#xA;,raw.oidcAuthFail_actual&#xD;&#xA;,raw.oidcAuthFail_delta&#xD;&#xA;,raw.oidcAuthReq_actual&#xD;&#xA;,raw.oidcAuthReq_delta&#xD;&#xA;,raw.oidcAuthSucc_actual&#xD;&#xA;,raw.oidcAuthSucc_delta&#xD;&#xA;from &#xD;&#xA;(SELECT &#xD;&#xA;DATE_ID,&#xD;&#xA;BHTYPE,&#xD;&#xA;BUSYHOUR,&#xD;&#xA;BHCLASS,&#xD;&#xA;BH_ID,&#xD;&#xA;OFFSET,&#xD;&#xA;NODE_NAME,&#xD;&#xA;OSS_ID,&#xD;&#xA;CAST(rankbh.DATE_ID || &apos; &apos; || rankbh.BUSYHOUR || &apos;:&apos; || rankbh.OFFSET AS TIMESTAMP) AS start_timestamp, DATEADD(MINUTE, rankbh.WINDOWSIZE, rankbh.DATE_ID || &apos; &apos; || rankbh.BUSYHOUR || &apos;:&apos; || rankbh.OFFSET) AS end_timestamp FROM $sourceDerivedTable.get(&quot;RANKSRC&quot;) AS rankbh where rankbh.DATE_ID = $dateid and rankbh.BUSYHOUR is not null) AS rankbh, &#xD;&#xA;$sourceDerivedTable.get(&quot;BHSRC&quot;) as raw, LOG_BUSYHOURMAPPING as map&#xD;&#xA;where &#xD;&#xA;raw.datetime_id &gt;= rankbh.start_timestamp&#xD;&#xA;and&#xD;&#xA;raw.datetime_id &lt; rankbh.end_timestamp &#xD;&#xA;and raw.date_id between $dateid and dateadd (dd,+1,$dateid)&#xD;&#xA;and map.BHTARGETLEVEL = rankbh.BHTYPE&#xD;&#xA;and map.BHTARGETTYPE = &apos;$sourceType.get(&quot;BHSRC&quot;)&apos;&#xD;&#xA;and map.ENABLE = 1&#xD;&#xA;and raw.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xD;&#xA;and rankbh.NODE_NAME = raw.NODE_NAME&#xD;&#xA;and rankbh.OSS_ID = raw.OSS_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="431" COLLECTION_ID="119" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_OPENID_CONN_WEEKBH_AFG&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_OPENID_CONN&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;WEEK&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_OPENID_CONN&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = dateadd(dd ,6, $date) AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="432" COLLECTION_ID="119" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_OPENID_CONN_WEEKBH_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_OPENID_CONN_DAYBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;#foreach($table in $targetTableList.get(&quot;DAYBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.bhclass = src.bhclass from $sourceDerivedTable.get(&quot;DAYBHCLASS&quot;) as src&#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.date_id = src.date_id&#xA;and dst.bhtype = src.bhtype and&#xA;dst.NODE_NAME= src.NODE_NAME&#xA;and dst.OSS_ID= src.OSS_ID&#xA;&#xA;#end&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="433" COLLECTION_ID="120" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_OPENID_CONN_MONTHBH_AFG&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_OPENID_CONN&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;MONTH&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_OPENID_CONN&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = dateadd(dd ,6, $date) AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="434" COLLECTION_ID="120" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_OPENID_CONN_MONTHBH_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_OPENID_CONN_DAYBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;#foreach($table in $targetTableList.get(&quot;DAYBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.bhclass = src.bhclass FROM $sourceDerivedTable.get(&quot;DAYBHCLASS&quot;) as src&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.date_id = src.date_id&#xA;and dst.bhtype = src.bhtype and&#xA;dst.NODE_NAME= src.NODE_NAME&#xA;and dst.OSS_ID= src.OSS_ID&#xA;&#xA;#end&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="435" COLLECTION_ID="121" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_TRUSTEDPROXY_DAY&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_TRUSTEDPROXY&apos; AND TIMELEVEL = &apos;DAY&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_TRUSTEDPROXY_RAW WHERE DATE_ID = $date &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="436" COLLECTION_ID="121" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_TRUSTEDPROXY_DAY" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_TRUSTEDPROXY_DAY&#xD;&#xA;" ACTION_CONTENTS="DELETE $targetDerivedTable.get(&quot;TOTAL&quot;)&#xA;WHERE DATE_ID=$dateid&#xA;&#xA;Insert into $targetDerivedTable.get(&quot;TOTAL&quot;)&#xA;(&#xA; NODE_NAME &#xA;,OSS_ID&#xA;,DC_RELEASE&#xA;,DATE_ID&#xA;,YEAR_ID&#xA;,MONTH_ID&#xA;,DAY_ID&#xA;,WEEK_ID&#xA;,DATACOVERAGE&#xA;,AGG_COUNT&#xA;,SESSION_ID&#xA;,BATCH_ID&#xA;,TIMELEVEL&#xA;,PERIOD_DURATION&#xA;,DC_SOURCE&#xA;,DC_TIMEZONE&#xA;,ROWSTATUS&#xA;,tpAuthCntAuthFailed403_actual&#xA;,tpAuthCntAuthFailed403_delta&#xA;,tpAuthCntAuthFailed_actual&#xA;,tpAuthCntAuthFailed_delta&#xA;,tpAuthCntAuthGbaDigestReq_actual&#xA;,tpAuthCntAuthGbaDigestReq_delta&#xA;,tpAuthCntAuthGbaMeBasedReq_actual&#xA;,tpAuthCntAuthGbaMeBasedReq_delta&#xA;,tpAuthCntAuthGbaReq_actual&#xA;,tpAuthCntAuthGbaReq_delta&#xA;,tpAuthCntAuthGibaReq_actual&#xA;,tpAuthCntAuthGibaReq_delta&#xA;,tpAuthCntAuthReq_actual&#xA;,tpAuthCntAuthReq_delta&#xA;,tpAuthCntAuthResp_actual&#xA;,tpAuthCntAuthResp_delta&#xA;,tpAuthCntAuthZxDigestReq_actual&#xA;,tpAuthCntAuthZxDigestReq_delta&#xA;,tpAuthCntAuthZxSsoReq_actual&#xA;,tpAuthCntAuthZxSsoReq_delta&#xA;,tpAuthCntZnReq_actual&#xA;,tpAuthCntZnReq_delta&#xA;,tpCntHttpDeleteReq_actual&#xA;,tpCntHttpDeleteReq_delta&#xA;,tpCntHttpDsFailedResp_actual&#xA;,tpCntHttpDsFailedResp_delta&#xA;,tpCntHttpFailedResp_actual&#xA;,tpCntHttpFailedResp_delta&#xA;,tpCntHttpFwdReq_actual&#xA;,tpCntHttpFwdReq_delta&#xA;,tpCntHttpGetReq_actual&#xA;,tpCntHttpGetReq_delta&#xA;,tpCntHttpOtherReq_actual&#xA;,tpCntHttpOtherReq_delta&#xA;,tpCntHttpPostReq_actual&#xA;,tpCntHttpPostReq_delta&#xA;,tpCntHttpPutReq_actual&#xA;,tpCntHttpPutReq_delta&#xA;,tpCntHttpTotalReq_actual&#xA;,tpCntHttpTotalReq_delta&#xA;,tpSubCntImpiVpActSubCount_actual&#xA;,tpSubCntImpiVpActSubCount_max&#xA;,tpSubCntImpiVpActSubCount_min&#xA;,tpSubCntImpiVpMaxSubCount_actual&#xA;,tpSubCntImpiVpMaxSubCount_delta&#xA;,tpSubCntImpuVpActSubCount_actual&#xA;,tpSubCntImpuVpActSubCount_max&#xA;,tpSubCntImpuVpActSubCount_min&#xA;,tpSubCntImpuVpMaxSubCount_actual&#xA;,tpSubCntImpuVpMaxSubCount_delta&#xA;)&#xA;Select&#xA; NODE_NAME&#xA;,OSS_ID&#xA;,DC_RELEASE&#xA;,DATE_ID&#xA;,MIN(YEAR_ID)&#xA;,MIN(MONTH_ID)&#xA;,MIN(DAY_ID)&#xA;,MIN(DATEPART(cwk, $dateid))&#xA;,SUM(PERIOD_DURATION)&#xA;,COUNT(*)&#xA;,$sessionid&#xA;,$batchid&#xA;,&apos;DAY&apos;&#xA;,1440&#xA;,MIN(DC_SOURCE)&#xA;,MIN(DC_TIMEZONE)&#xA;,&apos;AGGREGATED&apos;&#xA;,SUM(tpAuthCntAuthFailed403_actual)&#xA;,SUM(tpAuthCntAuthFailed403_delta)&#xA;,SUM(tpAuthCntAuthFailed_actual)&#xA;,SUM(tpAuthCntAuthFailed_delta)&#xA;,SUM(tpAuthCntAuthGbaDigestReq_actual)&#xA;,SUM(tpAuthCntAuthGbaDigestReq_delta)&#xA;,SUM(tpAuthCntAuthGbaMeBasedReq_actual)&#xA;,SUM(tpAuthCntAuthGbaMeBasedReq_delta)&#xA;,SUM(tpAuthCntAuthGbaReq_actual)&#xA;,SUM(tpAuthCntAuthGbaReq_delta)&#xA;,SUM(tpAuthCntAuthGibaReq_actual)&#xA;,SUM(tpAuthCntAuthGibaReq_delta)&#xA;,SUM(tpAuthCntAuthReq_actual)&#xA;,SUM(tpAuthCntAuthReq_delta)&#xA;,SUM(tpAuthCntAuthResp_actual)&#xA;,SUM(tpAuthCntAuthResp_delta)&#xA;,SUM(tpAuthCntAuthZxDigestReq_actual)&#xA;,SUM(tpAuthCntAuthZxDigestReq_delta)&#xA;,SUM(tpAuthCntAuthZxSsoReq_actual)&#xA;,SUM(tpAuthCntAuthZxSsoReq_delta)&#xA;,SUM(tpAuthCntZnReq_actual)&#xA;,SUM(tpAuthCntZnReq_delta)&#xA;,SUM(tpCntHttpDeleteReq_actual)&#xA;,SUM(tpCntHttpDeleteReq_delta)&#xA;,SUM(tpCntHttpDsFailedResp_actual)&#xA;,SUM(tpCntHttpDsFailedResp_delta)&#xA;,SUM(tpCntHttpFailedResp_actual)&#xA;,SUM(tpCntHttpFailedResp_delta)&#xA;,SUM(tpCntHttpFwdReq_actual)&#xA;,SUM(tpCntHttpFwdReq_delta)&#xA;,SUM(tpCntHttpGetReq_actual)&#xA;,SUM(tpCntHttpGetReq_delta)&#xA;,SUM(tpCntHttpOtherReq_actual)&#xA;,SUM(tpCntHttpOtherReq_delta)&#xA;,SUM(tpCntHttpPostReq_actual)&#xA;,SUM(tpCntHttpPostReq_delta)&#xA;,SUM(tpCntHttpPutReq_actual)&#xA;,SUM(tpCntHttpPutReq_delta)&#xA;,SUM(tpCntHttpTotalReq_actual)&#xA;,SUM(tpCntHttpTotalReq_delta)&#xA;,AVG(tpSubCntImpiVpActSubCount_actual)&#xA;,MAX(tpSubCntImpiVpActSubCount_max)&#xA;,MIN(tpSubCntImpiVpActSubCount_min)&#xA;,SUM(tpSubCntImpiVpMaxSubCount_actual)&#xA;,SUM(tpSubCntImpiVpMaxSubCount_delta)&#xA;,AVG(tpSubCntImpuVpActSubCount_actual)&#xA;,MAX(tpSubCntImpuVpActSubCount_max)&#xA;,MIN(tpSubCntImpuVpActSubCount_min)&#xA;,SUM(tpSubCntImpuVpMaxSubCount_actual)&#xA;,SUM(tpSubCntImpuVpMaxSubCount_delta)&#xA;from  $sourceDerivedTable.get(&quot;TOTAL&quot;)  AS src &#xA;where src.DATE_ID=$dateid&#xA;and src.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;group by&#xA; NODE_NAME&#xA;,OSS_ID&#xA;,DC_RELEASE&#xA;,DATE_ID&#xA;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="437" COLLECTION_ID="122" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_TRUSTEDPROXY_DAYBH_AFG&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_TRUSTEDPROXY&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_TRUSTEDPROXY_RAW WHERE DATE_ID = $date &#xA;UNION ALL&#xA;select count(*) from (SELECT count(distinct aggregation) c  FROM LOG_AGGREGATIONSTATUS   WHERE typename = &apos;DC_E_AFG_AFGBH&apos; AND timelevel = &apos;RANKBH&apos; AND DATADATE = $date and AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS IN (&apos;AGGREGATED&apos;) ) as a ,(select  count(distinct aggregation) c  from LOG_AggregationRules where target_type = &apos;DC_E_AFG_AFGBH&apos; AND target_level = &apos;RANKBH&apos;  and aggregationscope = &apos;DAY&apos;) as b where a.c&gt;=b.c and b.c &lt;&gt; 0 &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="438" COLLECTION_ID="122" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_TRUSTEDPROXY_DAYBH_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_TRUSTEDPROXY_DAYBH&#xD;&#xA;" ACTION_CONTENTS="&#xD;&#xA;DELETE $targetDerivedTable.get(&quot;RANKSRC&quot;)&#xD;&#xA;WHERE DATE_ID=$dateid&#xD;&#xA;AND BHTYPE in (select distinct BHTYPE from $sourceDerivedTable.get(&quot;RANKSRC&quot;))&#xD;&#xA;&#xD;&#xA;Insert into $targetDerivedTable.get(&quot;RANKSRC&quot;)&#xD;&#xA;(&#xD;&#xA; NODE_NAME&#xD;&#xA;,OSS_ID&#xD;&#xA;,DATE_ID&#xD;&#xA;,YEAR_ID&#xD;&#xA;,MONTH_ID&#xD;&#xA;,DAY_ID&#xD;&#xA;,MIN_ID&#xD;&#xA;,BHTYPE&#xD;&#xA;,BUSYHOUR&#xD;&#xA;,BHCLASS&#xD;&#xA;,TIMELEVEL&#xD;&#xA;,SESSION_ID&#xD;&#xA;,BATCH_ID&#xD;&#xA;,PERIOD_DURATION&#xD;&#xA;,ROWSTATUS&#xD;&#xA;,DC_RELEASE&#xD;&#xA;,DC_SOURCE&#xD;&#xA;,DC_TIMEZONE&#xD;&#xA;,BH_ID&#xD;&#xA;,OFFSET&#xD;&#xA;,tpAuthCntAuthFailed403_actual&#xD;&#xA;,tpAuthCntAuthFailed403_delta&#xD;&#xA;,tpAuthCntAuthFailed_actual&#xD;&#xA;,tpAuthCntAuthFailed_delta&#xD;&#xA;,tpAuthCntAuthGbaDigestReq_actual&#xD;&#xA;,tpAuthCntAuthGbaDigestReq_delta&#xD;&#xA;,tpAuthCntAuthGbaMeBasedReq_actual&#xD;&#xA;,tpAuthCntAuthGbaMeBasedReq_delta&#xD;&#xA;,tpAuthCntAuthGbaReq_actual&#xD;&#xA;,tpAuthCntAuthGbaReq_delta&#xD;&#xA;,tpAuthCntAuthGibaReq_actual&#xD;&#xA;,tpAuthCntAuthGibaReq_delta&#xD;&#xA;,tpAuthCntAuthReq_actual&#xD;&#xA;,tpAuthCntAuthReq_delta&#xD;&#xA;,tpAuthCntAuthResp_actual&#xD;&#xA;,tpAuthCntAuthResp_delta&#xD;&#xA;,tpAuthCntAuthZxDigestReq_actual&#xD;&#xA;,tpAuthCntAuthZxDigestReq_delta&#xD;&#xA;,tpAuthCntAuthZxSsoReq_actual&#xD;&#xA;,tpAuthCntAuthZxSsoReq_delta&#xD;&#xA;,tpAuthCntZnReq_actual&#xD;&#xA;,tpAuthCntZnReq_delta&#xD;&#xA;,tpCntHttpDeleteReq_actual&#xD;&#xA;,tpCntHttpDeleteReq_delta&#xD;&#xA;,tpCntHttpDsFailedResp_actual&#xD;&#xA;,tpCntHttpDsFailedResp_delta&#xD;&#xA;,tpCntHttpFailedResp_actual&#xD;&#xA;,tpCntHttpFailedResp_delta&#xD;&#xA;,tpCntHttpFwdReq_actual&#xD;&#xA;,tpCntHttpFwdReq_delta&#xD;&#xA;,tpCntHttpGetReq_actual&#xD;&#xA;,tpCntHttpGetReq_delta&#xD;&#xA;,tpCntHttpOtherReq_actual&#xD;&#xA;,tpCntHttpOtherReq_delta&#xD;&#xA;,tpCntHttpPostReq_actual&#xD;&#xA;,tpCntHttpPostReq_delta&#xD;&#xA;,tpCntHttpPutReq_actual&#xD;&#xA;,tpCntHttpPutReq_delta&#xD;&#xA;,tpCntHttpTotalReq_actual&#xD;&#xA;,tpCntHttpTotalReq_delta&#xD;&#xA;,tpSubCntImpiVpActSubCount_actual&#xD;&#xA;,tpSubCntImpiVpActSubCount_max&#xD;&#xA;,tpSubCntImpiVpActSubCount_min&#xD;&#xA;,tpSubCntImpiVpMaxSubCount_actual&#xD;&#xA;,tpSubCntImpiVpMaxSubCount_delta&#xD;&#xA;,tpSubCntImpuVpActSubCount_actual&#xD;&#xA;,tpSubCntImpuVpActSubCount_max&#xD;&#xA;,tpSubCntImpuVpActSubCount_min&#xD;&#xA;,tpSubCntImpuVpMaxSubCount_actual&#xD;&#xA;,tpSubCntImpuVpMaxSubCount_delta&#xD;&#xA;)&#xD;&#xA;select&#xD;&#xA; raw.NODE_NAME&#xD;&#xA;,raw.OSS_ID&#xD;&#xA;,raw.DATE_ID&#xD;&#xA;,raw.YEAR_ID&#xD;&#xA;,raw.MONTH_ID&#xD;&#xA;,raw.DAY_ID&#xD;&#xA;,raw.MIN_ID&#xD;&#xA;,rankbh.BHTYPE&#xD;&#xA;,raw.HOUR_ID&#xD;&#xA;,rankbh.BHCLASS&#xD;&#xA;,&apos;DAYBH&apos;&#xD;&#xA;,$sessionid&#xD;&#xA;,$batchid&#xD;&#xA;,raw.PERIOD_DURATION&#xD;&#xA;,&apos;AGGREGATED&apos;&#xD;&#xA;,raw.DC_RELEASE&#xD;&#xA;,raw.DC_SOURCE&#xD;&#xA;,raw.DC_TIMEZONE&#xD;&#xA;,rankbh.BH_ID&#xD;&#xA;,rankbh.OFFSET&#xD;&#xA;,raw.tpAuthCntAuthFailed403_actual&#xD;&#xA;,raw.tpAuthCntAuthFailed403_delta&#xD;&#xA;,raw.tpAuthCntAuthFailed_actual&#xD;&#xA;,raw.tpAuthCntAuthFailed_delta&#xD;&#xA;,raw.tpAuthCntAuthGbaDigestReq_actual&#xD;&#xA;,raw.tpAuthCntAuthGbaDigestReq_delta&#xD;&#xA;,raw.tpAuthCntAuthGbaMeBasedReq_actual&#xD;&#xA;,raw.tpAuthCntAuthGbaMeBasedReq_delta&#xD;&#xA;,raw.tpAuthCntAuthGbaReq_actual&#xD;&#xA;,raw.tpAuthCntAuthGbaReq_delta&#xD;&#xA;,raw.tpAuthCntAuthGibaReq_actual&#xD;&#xA;,raw.tpAuthCntAuthGibaReq_delta&#xD;&#xA;,raw.tpAuthCntAuthReq_actual&#xD;&#xA;,raw.tpAuthCntAuthReq_delta&#xD;&#xA;,raw.tpAuthCntAuthResp_actual&#xD;&#xA;,raw.tpAuthCntAuthResp_delta&#xD;&#xA;,raw.tpAuthCntAuthZxDigestReq_actual&#xD;&#xA;,raw.tpAuthCntAuthZxDigestReq_delta&#xD;&#xA;,raw.tpAuthCntAuthZxSsoReq_actual&#xD;&#xA;,raw.tpAuthCntAuthZxSsoReq_delta&#xD;&#xA;,raw.tpAuthCntZnReq_actual&#xD;&#xA;,raw.tpAuthCntZnReq_delta&#xD;&#xA;,raw.tpCntHttpDeleteReq_actual&#xD;&#xA;,raw.tpCntHttpDeleteReq_delta&#xD;&#xA;,raw.tpCntHttpDsFailedResp_actual&#xD;&#xA;,raw.tpCntHttpDsFailedResp_delta&#xD;&#xA;,raw.tpCntHttpFailedResp_actual&#xD;&#xA;,raw.tpCntHttpFailedResp_delta&#xD;&#xA;,raw.tpCntHttpFwdReq_actual&#xD;&#xA;,raw.tpCntHttpFwdReq_delta&#xD;&#xA;,raw.tpCntHttpGetReq_actual&#xD;&#xA;,raw.tpCntHttpGetReq_delta&#xD;&#xA;,raw.tpCntHttpOtherReq_actual&#xD;&#xA;,raw.tpCntHttpOtherReq_delta&#xD;&#xA;,raw.tpCntHttpPostReq_actual&#xD;&#xA;,raw.tpCntHttpPostReq_delta&#xD;&#xA;,raw.tpCntHttpPutReq_actual&#xD;&#xA;,raw.tpCntHttpPutReq_delta&#xD;&#xA;,raw.tpCntHttpTotalReq_actual&#xD;&#xA;,raw.tpCntHttpTotalReq_delta&#xD;&#xA;,raw.tpSubCntImpiVpActSubCount_actual&#xD;&#xA;,raw.tpSubCntImpiVpActSubCount_max&#xD;&#xA;,raw.tpSubCntImpiVpActSubCount_min&#xD;&#xA;,raw.tpSubCntImpiVpMaxSubCount_actual&#xD;&#xA;,raw.tpSubCntImpiVpMaxSubCount_delta&#xD;&#xA;,raw.tpSubCntImpuVpActSubCount_actual&#xD;&#xA;,raw.tpSubCntImpuVpActSubCount_max&#xD;&#xA;,raw.tpSubCntImpuVpActSubCount_min&#xD;&#xA;,raw.tpSubCntImpuVpMaxSubCount_actual&#xD;&#xA;,raw.tpSubCntImpuVpMaxSubCount_delta&#xD;&#xA;from &#xD;&#xA;(SELECT &#xD;&#xA;DATE_ID,&#xD;&#xA;BHTYPE,&#xD;&#xA;BUSYHOUR,&#xD;&#xA;BHCLASS,&#xD;&#xA;BH_ID,&#xD;&#xA;OFFSET,&#xD;&#xA;NODE_NAME,&#xD;&#xA;OSS_ID,&#xD;&#xA;CAST(rankbh.DATE_ID || &apos; &apos; || rankbh.BUSYHOUR || &apos;:&apos; || rankbh.OFFSET AS TIMESTAMP) AS start_timestamp, DATEADD(MINUTE, rankbh.WINDOWSIZE, rankbh.DATE_ID || &apos; &apos; || rankbh.BUSYHOUR || &apos;:&apos; || rankbh.OFFSET) AS end_timestamp FROM $sourceDerivedTable.get(&quot;RANKSRC&quot;) AS rankbh where rankbh.DATE_ID = $dateid and rankbh.BUSYHOUR is not null) AS rankbh, &#xD;&#xA;$sourceDerivedTable.get(&quot;BHSRC&quot;) as raw, LOG_BUSYHOURMAPPING as map&#xD;&#xA;where &#xD;&#xA;raw.datetime_id &gt;= rankbh.start_timestamp&#xD;&#xA;and&#xD;&#xA;raw.datetime_id &lt; rankbh.end_timestamp &#xD;&#xA;and raw.date_id between $dateid and dateadd (dd,+1,$dateid)&#xD;&#xA;and map.BHTARGETLEVEL = rankbh.BHTYPE&#xD;&#xA;and map.BHTARGETTYPE = &apos;$sourceType.get(&quot;BHSRC&quot;)&apos;&#xD;&#xA;and map.ENABLE = 1&#xD;&#xA;and raw.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xD;&#xA;and rankbh.NODE_NAME = raw.NODE_NAME&#xD;&#xA;and rankbh.OSS_ID = raw.OSS_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="439" COLLECTION_ID="123" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_TRUSTEDPROXY_WEEKBH_AFG&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_TRUSTEDPROXY&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;WEEK&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_TRUSTEDPROXY&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = dateadd(dd ,6, $date) AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="440" COLLECTION_ID="123" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_TRUSTEDPROXY_WEEKBH_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_TRUSTEDPROXY_DAYBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;#foreach($table in $targetTableList.get(&quot;DAYBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.bhclass = src.bhclass from $sourceDerivedTable.get(&quot;DAYBHCLASS&quot;) as src&#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.date_id = src.date_id&#xA;and dst.bhtype = src.bhtype and&#xA;dst.NODE_NAME= src.NODE_NAME&#xA;and dst.OSS_ID= src.OSS_ID&#xA;&#xA;#end&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="441" COLLECTION_ID="124" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_TRUSTEDPROXY_MONTHBH_AFG&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_TRUSTEDPROXY&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;MONTH&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_TRUSTEDPROXY&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = dateadd(dd ,6, $date) AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="442" COLLECTION_ID="124" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_TRUSTEDPROXY_MONTHBH_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_TRUSTEDPROXY_DAYBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;#foreach($table in $targetTableList.get(&quot;DAYBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.bhclass = src.bhclass FROM $sourceDerivedTable.get(&quot;DAYBHCLASS&quot;) as src&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.date_id = src.date_id&#xA;and dst.bhtype = src.bhtype and&#xA;dst.NODE_NAME= src.NODE_NAME&#xA;and dst.OSS_ID= src.OSS_ID&#xA;&#xA;#end&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="443" COLLECTION_ID="125" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_VIRTUAL_GATEWAY_DAY&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_VIRTUAL_GATEWAY&apos; AND TIMELEVEL = &apos;DAY&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_VIRTUAL_GATEWAY_RAW WHERE DATE_ID = $date &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="444" COLLECTION_ID="125" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_VIRTUAL_GATEWAY_DAY" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:19 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_VIRTUAL_GATEWAY_DAY&#xD;&#xA;" ACTION_CONTENTS="DELETE $targetDerivedTable.get(&quot;TOTAL&quot;)&#xA;WHERE DATE_ID=$dateid&#xA;&#xA;Insert into $targetDerivedTable.get(&quot;TOTAL&quot;)&#xA;(&#xA; NODE_NAME &#xA;,OSS_ID&#xA;,VIRTUAL_GATEWAY&#xA;,DC_RELEASE&#xA;,DATE_ID&#xA;,YEAR_ID&#xA;,MONTH_ID&#xA;,DAY_ID&#xA;,WEEK_ID&#xA;,DATACOVERAGE&#xA;,AGG_COUNT&#xA;,SESSION_ID&#xA;,BATCH_ID&#xA;,TIMELEVEL&#xA;,PERIOD_DURATION&#xA;,DC_SOURCE&#xA;,DC_TIMEZONE&#xA;,ROWSTATUS&#xA;,vgAcceptedReq_actual&#xA;,vgAcceptedReq_delta&#xA;,vgPeakTransTimeIntervalLength_actual&#xA;,vgPeakTransTimeIntervalLength_max&#xA;,vgPeakTransTimeIntervalLength_min&#xA;,vgPeakTransTransPerTimeInterval_actual&#xA;,vgPeakTransTransPerTimeInterval_max&#xA;,vgPeakTransTransPerTimeInterval_min&#xA;,vgRejectedReq_actual&#xA;,vgRejectedReq_delta&#xA;)&#xA;Select&#xA; NODE_NAME&#xA;,OSS_ID&#xA;,VIRTUAL_GATEWAY&#xA;,DC_RELEASE&#xA;,DATE_ID&#xA;,MIN(YEAR_ID)&#xA;,MIN(MONTH_ID)&#xA;,MIN(DAY_ID)&#xA;,MIN(DATEPART(cwk, $dateid))&#xA;,SUM(PERIOD_DURATION)&#xA;,COUNT(*)&#xA;,$sessionid&#xA;,$batchid&#xA;,&apos;DAY&apos;&#xA;,1440&#xA;,MIN(DC_SOURCE)&#xA;,MIN(DC_TIMEZONE)&#xA;,&apos;AGGREGATED&apos;&#xA;,SUM(vgAcceptedReq_actual)&#xA;,SUM(vgAcceptedReq_delta)&#xA;,AVG(vgPeakTransTimeIntervalLength_actual)&#xA;,MAX(vgPeakTransTimeIntervalLength_max)&#xA;,MIN(vgPeakTransTimeIntervalLength_min)&#xA;,AVG(vgPeakTransTransPerTimeInterval_actual)&#xA;,MAX(vgPeakTransTransPerTimeInterval_max)&#xA;,MIN(vgPeakTransTransPerTimeInterval_min)&#xA;,SUM(vgRejectedReq_actual)&#xA;,SUM(vgRejectedReq_delta)&#xA;from  $sourceDerivedTable.get(&quot;TOTAL&quot;)  AS src &#xA;where src.DATE_ID=$dateid&#xA;and src.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;group by&#xA; NODE_NAME&#xA;,OSS_ID&#xA;,VIRTUAL_GATEWAY&#xA;,DC_RELEASE&#xA;,DATE_ID&#xA;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="445" COLLECTION_ID="126" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_VIRTUAL_GATEWAY_DAYBH_AFG&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_VIRTUAL_GATEWAY&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_VIRTUAL_GATEWAY_RAW WHERE DATE_ID = $date &#xA;UNION ALL&#xA;select count(*) from (SELECT count(distinct aggregation) c  FROM LOG_AGGREGATIONSTATUS   WHERE typename = &apos;DC_E_AFG_AFGBH&apos; AND timelevel = &apos;RANKBH&apos; AND DATADATE = $date and AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS IN (&apos;AGGREGATED&apos;) ) as a ,(select  count(distinct aggregation) c  from LOG_AggregationRules where target_type = &apos;DC_E_AFG_AFGBH&apos; AND target_level = &apos;RANKBH&apos;  and aggregationscope = &apos;DAY&apos;) as b where a.c&gt;=b.c and b.c &lt;&gt; 0 &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="446" COLLECTION_ID="126" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_VIRTUAL_GATEWAY_DAYBH_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_VIRTUAL_GATEWAY_DAYBH&#xD;&#xA;" ACTION_CONTENTS="&#xD;&#xA;DELETE $targetDerivedTable.get(&quot;RANKSRC&quot;)&#xD;&#xA;WHERE DATE_ID=$dateid&#xD;&#xA;AND BHTYPE in (select distinct BHTYPE from $sourceDerivedTable.get(&quot;RANKSRC&quot;))&#xD;&#xA;&#xD;&#xA;Insert into $targetDerivedTable.get(&quot;RANKSRC&quot;)&#xD;&#xA;(&#xD;&#xA; NODE_NAME&#xD;&#xA;,OSS_ID&#xD;&#xA;,VIRTUAL_GATEWAY&#xD;&#xA;,DATE_ID&#xD;&#xA;,YEAR_ID&#xD;&#xA;,MONTH_ID&#xD;&#xA;,DAY_ID&#xD;&#xA;,MIN_ID&#xD;&#xA;,BHTYPE&#xD;&#xA;,BUSYHOUR&#xD;&#xA;,BHCLASS&#xD;&#xA;,TIMELEVEL&#xD;&#xA;,SESSION_ID&#xD;&#xA;,BATCH_ID&#xD;&#xA;,PERIOD_DURATION&#xD;&#xA;,ROWSTATUS&#xD;&#xA;,DC_RELEASE&#xD;&#xA;,DC_SOURCE&#xD;&#xA;,DC_TIMEZONE&#xD;&#xA;,BH_ID&#xD;&#xA;,OFFSET&#xD;&#xA;,vgAcceptedReq_actual&#xD;&#xA;,vgAcceptedReq_delta&#xD;&#xA;,vgPeakTransTimeIntervalLength_actual&#xD;&#xA;,vgPeakTransTimeIntervalLength_max&#xD;&#xA;,vgPeakTransTimeIntervalLength_min&#xD;&#xA;,vgPeakTransTransPerTimeInterval_actual&#xD;&#xA;,vgPeakTransTransPerTimeInterval_max&#xD;&#xA;,vgPeakTransTransPerTimeInterval_min&#xD;&#xA;,vgRejectedReq_actual&#xD;&#xA;,vgRejectedReq_delta&#xD;&#xA;)&#xD;&#xA;select&#xD;&#xA; raw.NODE_NAME&#xD;&#xA;,raw.OSS_ID&#xD;&#xA;,raw.VIRTUAL_GATEWAY&#xD;&#xA;,raw.DATE_ID&#xD;&#xA;,raw.YEAR_ID&#xD;&#xA;,raw.MONTH_ID&#xD;&#xA;,raw.DAY_ID&#xD;&#xA;,raw.MIN_ID&#xD;&#xA;,rankbh.BHTYPE&#xD;&#xA;,raw.HOUR_ID&#xD;&#xA;,rankbh.BHCLASS&#xD;&#xA;,&apos;DAYBH&apos;&#xD;&#xA;,$sessionid&#xD;&#xA;,$batchid&#xD;&#xA;,raw.PERIOD_DURATION&#xD;&#xA;,&apos;AGGREGATED&apos;&#xD;&#xA;,raw.DC_RELEASE&#xD;&#xA;,raw.DC_SOURCE&#xD;&#xA;,raw.DC_TIMEZONE&#xD;&#xA;,rankbh.BH_ID&#xD;&#xA;,rankbh.OFFSET&#xD;&#xA;,raw.vgAcceptedReq_actual&#xD;&#xA;,raw.vgAcceptedReq_delta&#xD;&#xA;,raw.vgPeakTransTimeIntervalLength_actual&#xD;&#xA;,raw.vgPeakTransTimeIntervalLength_max&#xD;&#xA;,raw.vgPeakTransTimeIntervalLength_min&#xD;&#xA;,raw.vgPeakTransTransPerTimeInterval_actual&#xD;&#xA;,raw.vgPeakTransTransPerTimeInterval_max&#xD;&#xA;,raw.vgPeakTransTransPerTimeInterval_min&#xD;&#xA;,raw.vgRejectedReq_actual&#xD;&#xA;,raw.vgRejectedReq_delta&#xD;&#xA;from &#xD;&#xA;(SELECT &#xD;&#xA;DATE_ID,&#xD;&#xA;BHTYPE,&#xD;&#xA;BUSYHOUR,&#xD;&#xA;BHCLASS,&#xD;&#xA;BH_ID,&#xD;&#xA;OFFSET,&#xD;&#xA;NODE_NAME,&#xD;&#xA;OSS_ID,&#xD;&#xA;CAST(rankbh.DATE_ID || &apos; &apos; || rankbh.BUSYHOUR || &apos;:&apos; || rankbh.OFFSET AS TIMESTAMP) AS start_timestamp, DATEADD(MINUTE, rankbh.WINDOWSIZE, rankbh.DATE_ID || &apos; &apos; || rankbh.BUSYHOUR || &apos;:&apos; || rankbh.OFFSET) AS end_timestamp FROM $sourceDerivedTable.get(&quot;RANKSRC&quot;) AS rankbh where rankbh.DATE_ID = $dateid and rankbh.BUSYHOUR is not null) AS rankbh, &#xD;&#xA;$sourceDerivedTable.get(&quot;BHSRC&quot;) as raw, LOG_BUSYHOURMAPPING as map&#xD;&#xA;where &#xD;&#xA;raw.datetime_id &gt;= rankbh.start_timestamp&#xD;&#xA;and&#xD;&#xA;raw.datetime_id &lt; rankbh.end_timestamp &#xD;&#xA;and raw.date_id between $dateid and dateadd (dd,+1,$dateid)&#xD;&#xA;and map.BHTARGETLEVEL = rankbh.BHTYPE&#xD;&#xA;and map.BHTARGETTYPE = &apos;$sourceType.get(&quot;BHSRC&quot;)&apos;&#xD;&#xA;and map.ENABLE = 1&#xD;&#xA;and raw.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xD;&#xA;and rankbh.NODE_NAME = raw.NODE_NAME&#xD;&#xA;and rankbh.OSS_ID = raw.OSS_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="447" COLLECTION_ID="127" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_VIRTUAL_GATEWAY_WEEKBH_AFG&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_VIRTUAL_GATEWAY&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;WEEK&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_VIRTUAL_GATEWAY&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = dateadd(dd ,6, $date) AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="448" COLLECTION_ID="127" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_VIRTUAL_GATEWAY_WEEKBH_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_VIRTUAL_GATEWAY_DAYBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;#foreach($table in $targetTableList.get(&quot;DAYBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.bhclass = src.bhclass from $sourceDerivedTable.get(&quot;DAYBHCLASS&quot;) as src&#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.date_id = src.date_id&#xA;and dst.bhtype = src.bhtype and&#xA;dst.NODE_NAME= src.NODE_NAME&#xA;and dst.OSS_ID= src.OSS_ID&#xA;&#xA;#end&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="449" COLLECTION_ID="128" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_VIRTUAL_GATEWAY_MONTHBH_AFG&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_VIRTUAL_GATEWAY&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;MONTH&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_VIRTUAL_GATEWAY&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = dateadd(dd ,6, $date) AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="450" COLLECTION_ID="128" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_VIRTUAL_GATEWAY_MONTHBH_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_VIRTUAL_GATEWAY_DAYBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;#foreach($table in $targetTableList.get(&quot;DAYBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.bhclass = src.bhclass FROM $sourceDerivedTable.get(&quot;DAYBHCLASS&quot;) as src&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.date_id = src.date_id&#xA;and dst.bhtype = src.bhtype and&#xA;dst.NODE_NAME= src.NODE_NAME&#xA;and dst.OSS_ID= src.OSS_ID&#xA;&#xA;#end&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="451" COLLECTION_ID="129" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_SYSTEM_DAY&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_SYSTEM&apos; AND TIMELEVEL = &apos;DAY&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_SYSTEM_RAW WHERE DATE_ID = $date &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="452" COLLECTION_ID="129" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_SYSTEM_DAY" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_SYSTEM_DAY&#xD;&#xA;" ACTION_CONTENTS="DELETE $targetDerivedTable.get(&quot;TOTAL&quot;)&#xA;WHERE DATE_ID=$dateid&#xA;&#xA;Insert into $targetDerivedTable.get(&quot;TOTAL&quot;)&#xA;(&#xA; NODE_NAME &#xA;,OSS_ID&#xA;,DC_RELEASE&#xA;,DATE_ID&#xA;,YEAR_ID&#xA;,MONTH_ID&#xA;,DAY_ID&#xA;,WEEK_ID&#xA;,DATACOVERAGE&#xA;,AGG_COUNT&#xA;,SESSION_ID&#xA;,BATCH_ID&#xA;,TIMELEVEL&#xA;,PERIOD_DURATION&#xA;,DC_SOURCE&#xA;,DC_TIMEZONE&#xA;,ROWSTATUS&#xA;,cpuUsage_actual&#xA;,cpuUsage_max&#xA;,cpuUsage_min&#xA;,memUsage_actual&#xA;,memUsage_max&#xA;,memUsage_min&#xA;,rootPath_actual&#xA;,rootPath_max&#xA;,rootPath_min&#xA;)&#xA;Select&#xA; NODE_NAME&#xA;,OSS_ID&#xA;,DC_RELEASE&#xA;,DATE_ID&#xA;,MIN(YEAR_ID)&#xA;,MIN(MONTH_ID)&#xA;,MIN(DAY_ID)&#xA;,MIN(DATEPART(cwk, $dateid))&#xA;,SUM(PERIOD_DURATION)&#xA;,COUNT(*)&#xA;,$sessionid&#xA;,$batchid&#xA;,&apos;DAY&apos;&#xA;,1440&#xA;,MIN(DC_SOURCE)&#xA;,MIN(DC_TIMEZONE)&#xA;,&apos;AGGREGATED&apos;&#xA;,AVG(cpuUsage_actual)&#xA;,MAX(cpuUsage_max)&#xA;,MIN(cpuUsage_min)&#xA;,AVG(memUsage_actual)&#xA;,MAX(memUsage_max)&#xA;,MIN(memUsage_min)&#xA;,AVG(rootPath_actual)&#xA;,MAX(rootPath_max)&#xA;,MIN(rootPath_min)&#xA;from  $sourceDerivedTable.get(&quot;TOTAL&quot;)  AS src &#xA;where src.DATE_ID=$dateid&#xA;and src.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;group by&#xA; NODE_NAME&#xA;,OSS_ID&#xA;,DC_RELEASE&#xA;,DATE_ID&#xA;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="453" COLLECTION_ID="130" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_SYSTEM_DAYBH_AFG&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_SYSTEM&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_SYSTEM_RAW WHERE DATE_ID = $date &#xA;UNION ALL&#xA;select count(*) from (SELECT count(distinct aggregation) c  FROM LOG_AGGREGATIONSTATUS   WHERE typename = &apos;DC_E_AFG_AFGBH&apos; AND timelevel = &apos;RANKBH&apos; AND DATADATE = $date and AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS IN (&apos;AGGREGATED&apos;) ) as a ,(select  count(distinct aggregation) c  from LOG_AggregationRules where target_type = &apos;DC_E_AFG_AFGBH&apos; AND target_level = &apos;RANKBH&apos;  and aggregationscope = &apos;DAY&apos;) as b where a.c&gt;=b.c and b.c &lt;&gt; 0 &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="454" COLLECTION_ID="130" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_SYSTEM_DAYBH_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_SYSTEM_DAYBH&#xD;&#xA;" ACTION_CONTENTS="&#xD;&#xA;DELETE $targetDerivedTable.get(&quot;RANKSRC&quot;)&#xD;&#xA;WHERE DATE_ID=$dateid&#xD;&#xA;AND BHTYPE in (select distinct BHTYPE from $sourceDerivedTable.get(&quot;RANKSRC&quot;))&#xD;&#xA;&#xD;&#xA;Insert into $targetDerivedTable.get(&quot;RANKSRC&quot;)&#xD;&#xA;(&#xD;&#xA; NODE_NAME&#xD;&#xA;,OSS_ID&#xD;&#xA;,DATE_ID&#xD;&#xA;,YEAR_ID&#xD;&#xA;,MONTH_ID&#xD;&#xA;,DAY_ID&#xD;&#xA;,MIN_ID&#xD;&#xA;,BHTYPE&#xD;&#xA;,BUSYHOUR&#xD;&#xA;,BHCLASS&#xD;&#xA;,TIMELEVEL&#xD;&#xA;,SESSION_ID&#xD;&#xA;,BATCH_ID&#xD;&#xA;,PERIOD_DURATION&#xD;&#xA;,ROWSTATUS&#xD;&#xA;,DC_RELEASE&#xD;&#xA;,DC_SOURCE&#xD;&#xA;,DC_TIMEZONE&#xD;&#xA;,BH_ID&#xD;&#xA;,OFFSET&#xD;&#xA;,cpuUsage_actual&#xD;&#xA;,cpuUsage_max&#xD;&#xA;,cpuUsage_min&#xD;&#xA;,memUsage_actual&#xD;&#xA;,memUsage_max&#xD;&#xA;,memUsage_min&#xD;&#xA;,rootPath_actual&#xD;&#xA;,rootPath_max&#xD;&#xA;,rootPath_min&#xD;&#xA;)&#xD;&#xA;select&#xD;&#xA; raw.NODE_NAME&#xD;&#xA;,raw.OSS_ID&#xD;&#xA;,raw.DATE_ID&#xD;&#xA;,raw.YEAR_ID&#xD;&#xA;,raw.MONTH_ID&#xD;&#xA;,raw.DAY_ID&#xD;&#xA;,raw.MIN_ID&#xD;&#xA;,rankbh.BHTYPE&#xD;&#xA;,raw.HOUR_ID&#xD;&#xA;,rankbh.BHCLASS&#xD;&#xA;,&apos;DAYBH&apos;&#xD;&#xA;,$sessionid&#xD;&#xA;,$batchid&#xD;&#xA;,raw.PERIOD_DURATION&#xD;&#xA;,&apos;AGGREGATED&apos;&#xD;&#xA;,raw.DC_RELEASE&#xD;&#xA;,raw.DC_SOURCE&#xD;&#xA;,raw.DC_TIMEZONE&#xD;&#xA;,rankbh.BH_ID&#xD;&#xA;,rankbh.OFFSET&#xD;&#xA;,raw.cpuUsage_actual&#xD;&#xA;,raw.cpuUsage_max&#xD;&#xA;,raw.cpuUsage_min&#xD;&#xA;,raw.memUsage_actual&#xD;&#xA;,raw.memUsage_max&#xD;&#xA;,raw.memUsage_min&#xD;&#xA;,raw.rootPath_actual&#xD;&#xA;,raw.rootPath_max&#xD;&#xA;,raw.rootPath_min&#xD;&#xA;from &#xD;&#xA;(SELECT &#xD;&#xA;DATE_ID,&#xD;&#xA;BHTYPE,&#xD;&#xA;BUSYHOUR,&#xD;&#xA;BHCLASS,&#xD;&#xA;BH_ID,&#xD;&#xA;OFFSET,&#xD;&#xA;NODE_NAME,&#xD;&#xA;OSS_ID,&#xD;&#xA;CAST(rankbh.DATE_ID || &apos; &apos; || rankbh.BUSYHOUR || &apos;:&apos; || rankbh.OFFSET AS TIMESTAMP) AS start_timestamp, DATEADD(MINUTE, rankbh.WINDOWSIZE, rankbh.DATE_ID || &apos; &apos; || rankbh.BUSYHOUR || &apos;:&apos; || rankbh.OFFSET) AS end_timestamp FROM $sourceDerivedTable.get(&quot;RANKSRC&quot;) AS rankbh where rankbh.DATE_ID = $dateid and rankbh.BUSYHOUR is not null) AS rankbh, &#xD;&#xA;$sourceDerivedTable.get(&quot;BHSRC&quot;) as raw, LOG_BUSYHOURMAPPING as map&#xD;&#xA;where &#xD;&#xA;raw.datetime_id &gt;= rankbh.start_timestamp&#xD;&#xA;and&#xD;&#xA;raw.datetime_id &lt; rankbh.end_timestamp &#xD;&#xA;and raw.date_id between $dateid and dateadd (dd,+1,$dateid)&#xD;&#xA;and map.BHTARGETLEVEL = rankbh.BHTYPE&#xD;&#xA;and map.BHTARGETTYPE = &apos;$sourceType.get(&quot;BHSRC&quot;)&apos;&#xD;&#xA;and map.ENABLE = 1&#xD;&#xA;and raw.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xD;&#xA;and rankbh.NODE_NAME = raw.NODE_NAME&#xD;&#xA;and rankbh.OSS_ID = raw.OSS_ID&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="455" COLLECTION_ID="131" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_SYSTEM_WEEKBH_AFG&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_SYSTEM&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;WEEK&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_SYSTEM&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = dateadd(dd ,6, $date) AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="456" COLLECTION_ID="131" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_SYSTEM_WEEKBH_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_SYSTEM_DAYBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;#foreach($table in $targetTableList.get(&quot;DAYBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.bhclass = src.bhclass from $sourceDerivedTable.get(&quot;DAYBHCLASS&quot;) as src&#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.date_id = src.date_id&#xA;and dst.bhtype = src.bhtype and&#xA;dst.NODE_NAME= src.NODE_NAME&#xA;and dst.OSS_ID= src.OSS_ID&#xA;&#xA;#end&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="457" COLLECTION_ID="132" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_SYSTEM_MONTHBH_AFG&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_SYSTEM&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;MONTH&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_SYSTEM&apos; AND TIMELEVEL = &apos;DAYBH&apos; AND DATADATE = dateadd(dd ,6, $date) AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="458" COLLECTION_ID="132" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_SYSTEM_MONTHBH_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_SYSTEM_DAYBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;#foreach($table in $targetTableList.get(&quot;DAYBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.bhclass = src.bhclass FROM $sourceDerivedTable.get(&quot;DAYBHCLASS&quot;) as src&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.date_id = src.date_id&#xA;and dst.bhtype = src.bhtype and&#xA;dst.NODE_NAME= src.NODE_NAME&#xA;and dst.OSS_ID= src.OSS_ID&#xA;&#xA;#end&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="459" COLLECTION_ID="133" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_RANKBH_AFG_CP0&#xD;&#xA;" ACTION_CONTENTS="IF (&#xA;select (SELECT  count(*) FROM SYSVIEWS WHERE viewname = &apos;DC_E_AFG_AFGBH_RANKBH_AFG_CP0&apos; AND vcreator=&apos;dc&apos;)&#xA;) = 1 then&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH_AFG_CP0 WHERE DATE_ID = $date&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;else&#xA;select 0 result&#xA;end if&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="460" COLLECTION_ID="133" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_CP0" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;DELETE $targetDerivedTable.get(&quot;RANKBH&quot;)&#xA;WHERE DATE_ID=$dateid AND BHTYPE=&apos;AFG_CP0&apos;&#xA;&#xA;Insert into $targetDerivedTable.get(&quot;RANKBH&quot;)&#xA;(&#xA; NODE_NAME &#xA;,OSS_ID&#xA;,DATE_ID&#xA;,BHTYPE&#xA;,BHVALUE&#xA;,BHCLASS&#xA;,WEEKBH&#xA;,MONTHBH&#xA;,DATACOVERAGE&#xA;,PERIOD_DURATION&#xA;,TIMELEVEL&#xA;,SESSION_ID&#xA;,BATCH_ID&#xA;,ROWSTATUS&#xA;,BH_ID&#xA;,OFFSET&#xA;,WINDOWSIZE&#xA;,BHOBJECT&#xA;)&#xA;SELECT &#xA; NODE_NAME&#xA;,OSS_ID&#xA;,DATE_ID&#xA;,&apos;AFG_CP0&apos;&#xA;,MAX(BHVALUE)&#xA;,1&#xA;,0&#xA;,0&#xA;,SUM(PERIOD_DURATION)&#xA;,NULL&#xA;,&apos;RANKBH&apos;&#xA;,$sessionid&#xA;,$batchid&#xA;,&apos;AGGREGATED&apos;&#xA;,ID&#xA;,MINUTE_OFFSET&#xA;,SLIDING_WINDOW_SIZE&#xA;,BHOBJECT&#xA;from $sourceTable.get(&quot;RANKBH&quot;)&#xA;WHERE DATE_ID=$dateid &#xA;and ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;GROUP BY&#xA;  NODE_NAME&#xA;,OSS_ID&#xA;,DATE_ID&#xA;,BHTYPE&#xA;,ID&#xA;,MINUTE_OFFSET&#xA;,SLIDING_WINDOW_SIZE&#xA;,BHOBJECT&#xA;&#xA;&#xA;UPDATE $targetDerivedTable.get(&quot;RANKBH&quot;) AS dst &#xA;SET &#xA;dst.BUSYHOUR=src.HOUR_ID,&#xA;dst.PERIOD_DURATION=src.PERIOD_DURATION&#xA;,dst.DC_RELEASE = src.DC_RELEASE&#xA;,dst.DC_SOURCE = src.DC_SOURCE&#xA;,dst.DC_TIMEZONE = src.DC_TIMEZONE&#xA;FROM $sourceTable.get(&quot;RANKBH&quot;) AS src&#xA;where src.DATE_ID=$dateid&#xA;and dst.DATE_ID=$dateid&#xA;and src.DATE_ID=dst.DATE_ID&#xA;and src.BHVALUE=dst.BHVALUE&#xA;and src.BHTYPE=dst.BHTYPE&#xA;and src.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;and dst.NODE_NAME = src.NODE_NAME&#xA;and dst.OSS_ID = src.OSS_ID&#xA;ORDER BY src.HOUR_ID &#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="461" COLLECTION_ID="134" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_WEEKRANKBH_AFG_CP0&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;WEEK&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="462" COLLECTION_ID="134" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_CP0" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.weekbh = 0&#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.bhtype=&apos;AFG_CP0&apos;;&#xA;&#xA;#end&#xA;&#xA;&#xA;&#xA;&#xA;SELECT &#xA;b.NODE_NAME AS NODE_NAME, &#xA;b.OSS_ID AS OSS_ID, &#xA;b.bhtype AS bhtype,max(b.bhvalue) AS bhvalue, cast(null as date) AS date_id &#xA;INTO #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) &#xA;FROM $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as b &#xA;where b.date_id between $dateid and dateadd(dd,6,$dateid) &#xA;and b.bhtype = &apos;AFG_CP0&apos; &#xA;group by &#xA;b.NODE_NAME,&#xA;b.OSS_ID,&#xA;b.bhtype;&#xA;&#xA;UPDATE #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) AS dst &#xA;SET dst.date_id = a.date_id from $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where a.date_id between $dateid and dateadd(dd,6,$dateid) &#xA;and a.bhtype = dst.bhtype&#xA;and a.NODE_NAME = dst.NODE_NAME &#xA;and a.OSS_ID = dst.OSS_ID &#xA;and a.bhvalue = dst.bhvalue;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.weekbh = 1 &#xA;from #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where dst.date_id=a.date_id&#xA;and dst.NODE_NAME= a.NODE_NAME &#xA;and dst.OSS_ID= a.OSS_ID &#xA;and dst.bhvalue=a.bhvalue;&#xA;&#xA;#end&#xA;&#xA;drop table #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;);&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.bhclass = (dst.monthbh * 100) + (dst.weekbh * 10) + 1 &#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.bhtype=&apos;AFG_CP0&apos;;&#xA;&#xA;#end&#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="463" COLLECTION_ID="135" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_MONTHRANKBH_AFG_CP0&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;MONTH&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="464" COLLECTION_ID="135" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_CP0" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.monthbh = 0&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.bhtype=&apos;AFG_CP0&apos;;&#xA;&#xA;#end&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;SELECT &#xA;b.NODE_NAME AS NODE_NAME, &#xA;b.OSS_ID AS OSS_ID, &#xA;b.bhtype AS bhtype,max(b.bhvalue) AS bhvalue, cast(null as date) AS date_id &#xA;INTO #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) &#xA;FROM $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as b &#xA;where b.date_id between $dateid and dateadd(mm,1,$dateid)-1 &#xA;and b.bhtype = &apos;AFG_CP0&apos; &#xA;group by &#xA;b.NODE_NAME,&#xA;b.OSS_ID,&#xA;b.bhtype;&#xA;&#xA;UPDATE #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) AS dst &#xA;SET dst.date_id = a.date_id from $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where a.date_id between $dateid and dateadd(mm,1,$dateid)-1 &#xA;and a.bhtype = dst.bhtype&#xA;and a.NODE_NAME = dst.NODE_NAME &#xA;and a.OSS_ID = dst.OSS_ID &#xA;and a.bhvalue = dst.bhvalue;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.monthbh = 1 &#xA;from #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where dst.date_id=a.date_id&#xA;and dst.NODE_NAME= a.NODE_NAME &#xA;and dst.OSS_ID= a.OSS_ID &#xA;and dst.bhvalue=a.bhvalue;&#xA;&#xA;#end&#xA;&#xA;drop table #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;);&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.bhclass = (dst.monthbh * 100) + (dst.weekbh * 10) + 1&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.bhtype=&apos;AFG_CP0&apos;;&#xA;&#xA;#end&#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="465" COLLECTION_ID="136" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_RANKBH_AFG_CP1&#xD;&#xA;" ACTION_CONTENTS="IF (&#xA;select (SELECT  count(*) FROM SYSVIEWS WHERE viewname = &apos;DC_E_AFG_AFGBH_RANKBH_AFG_CP1&apos; AND vcreator=&apos;dc&apos;)&#xA;) = 1 then&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH_AFG_CP1 WHERE DATE_ID = $date&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;else&#xA;select 0 result&#xA;end if&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="466" COLLECTION_ID="136" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_CP1" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;DELETE $targetDerivedTable.get(&quot;RANKBH&quot;)&#xA;WHERE DATE_ID=$dateid AND BHTYPE=&apos;AFG_CP1&apos;&#xA;&#xA;Insert into $targetDerivedTable.get(&quot;RANKBH&quot;)&#xA;(&#xA; NODE_NAME &#xA;,OSS_ID&#xA;,DATE_ID&#xA;,BHTYPE&#xA;,BHVALUE&#xA;,BHCLASS&#xA;,WEEKBH&#xA;,MONTHBH&#xA;,DATACOVERAGE&#xA;,PERIOD_DURATION&#xA;,TIMELEVEL&#xA;,SESSION_ID&#xA;,BATCH_ID&#xA;,ROWSTATUS&#xA;,BH_ID&#xA;,OFFSET&#xA;,WINDOWSIZE&#xA;,BHOBJECT&#xA;)&#xA;SELECT &#xA; NODE_NAME&#xA;,OSS_ID&#xA;,DATE_ID&#xA;,&apos;AFG_CP1&apos;&#xA;,MAX(BHVALUE)&#xA;,1&#xA;,0&#xA;,0&#xA;,SUM(PERIOD_DURATION)&#xA;,NULL&#xA;,&apos;RANKBH&apos;&#xA;,$sessionid&#xA;,$batchid&#xA;,&apos;AGGREGATED&apos;&#xA;,ID&#xA;,MINUTE_OFFSET&#xA;,SLIDING_WINDOW_SIZE&#xA;,BHOBJECT&#xA;from $sourceTable.get(&quot;RANKBH&quot;)&#xA;WHERE DATE_ID=$dateid &#xA;and ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;GROUP BY&#xA;  NODE_NAME&#xA;,OSS_ID&#xA;,DATE_ID&#xA;,BHTYPE&#xA;,ID&#xA;,MINUTE_OFFSET&#xA;,SLIDING_WINDOW_SIZE&#xA;,BHOBJECT&#xA;&#xA;&#xA;UPDATE $targetDerivedTable.get(&quot;RANKBH&quot;) AS dst &#xA;SET &#xA;dst.BUSYHOUR=src.HOUR_ID,&#xA;dst.PERIOD_DURATION=src.PERIOD_DURATION&#xA;,dst.DC_RELEASE = src.DC_RELEASE&#xA;,dst.DC_SOURCE = src.DC_SOURCE&#xA;,dst.DC_TIMEZONE = src.DC_TIMEZONE&#xA;FROM $sourceTable.get(&quot;RANKBH&quot;) AS src&#xA;where src.DATE_ID=$dateid&#xA;and dst.DATE_ID=$dateid&#xA;and src.DATE_ID=dst.DATE_ID&#xA;and src.BHVALUE=dst.BHVALUE&#xA;and src.BHTYPE=dst.BHTYPE&#xA;and src.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;and dst.NODE_NAME = src.NODE_NAME&#xA;and dst.OSS_ID = src.OSS_ID&#xA;ORDER BY src.HOUR_ID &#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="467" COLLECTION_ID="137" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_WEEKRANKBH_AFG_CP1&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;WEEK&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="468" COLLECTION_ID="137" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_CP1" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.weekbh = 0&#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.bhtype=&apos;AFG_CP1&apos;;&#xA;&#xA;#end&#xA;&#xA;&#xA;&#xA;&#xA;SELECT &#xA;b.NODE_NAME AS NODE_NAME, &#xA;b.OSS_ID AS OSS_ID, &#xA;b.bhtype AS bhtype,max(b.bhvalue) AS bhvalue, cast(null as date) AS date_id &#xA;INTO #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) &#xA;FROM $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as b &#xA;where b.date_id between $dateid and dateadd(dd,6,$dateid) &#xA;and b.bhtype = &apos;AFG_CP1&apos; &#xA;group by &#xA;b.NODE_NAME,&#xA;b.OSS_ID,&#xA;b.bhtype;&#xA;&#xA;UPDATE #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) AS dst &#xA;SET dst.date_id = a.date_id from $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where a.date_id between $dateid and dateadd(dd,6,$dateid) &#xA;and a.bhtype = dst.bhtype&#xA;and a.NODE_NAME = dst.NODE_NAME &#xA;and a.OSS_ID = dst.OSS_ID &#xA;and a.bhvalue = dst.bhvalue;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.weekbh = 1 &#xA;from #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where dst.date_id=a.date_id&#xA;and dst.NODE_NAME= a.NODE_NAME &#xA;and dst.OSS_ID= a.OSS_ID &#xA;and dst.bhvalue=a.bhvalue;&#xA;&#xA;#end&#xA;&#xA;drop table #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;);&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.bhclass = (dst.monthbh * 100) + (dst.weekbh * 10) + 1 &#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.bhtype=&apos;AFG_CP1&apos;;&#xA;&#xA;#end&#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="469" COLLECTION_ID="138" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_MONTHRANKBH_AFG_CP1&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;MONTH&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="470" COLLECTION_ID="138" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_CP1" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.monthbh = 0&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.bhtype=&apos;AFG_CP1&apos;;&#xA;&#xA;#end&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;SELECT &#xA;b.NODE_NAME AS NODE_NAME, &#xA;b.OSS_ID AS OSS_ID, &#xA;b.bhtype AS bhtype,max(b.bhvalue) AS bhvalue, cast(null as date) AS date_id &#xA;INTO #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) &#xA;FROM $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as b &#xA;where b.date_id between $dateid and dateadd(mm,1,$dateid)-1 &#xA;and b.bhtype = &apos;AFG_CP1&apos; &#xA;group by &#xA;b.NODE_NAME,&#xA;b.OSS_ID,&#xA;b.bhtype;&#xA;&#xA;UPDATE #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) AS dst &#xA;SET dst.date_id = a.date_id from $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where a.date_id between $dateid and dateadd(mm,1,$dateid)-1 &#xA;and a.bhtype = dst.bhtype&#xA;and a.NODE_NAME = dst.NODE_NAME &#xA;and a.OSS_ID = dst.OSS_ID &#xA;and a.bhvalue = dst.bhvalue;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.monthbh = 1 &#xA;from #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where dst.date_id=a.date_id&#xA;and dst.NODE_NAME= a.NODE_NAME &#xA;and dst.OSS_ID= a.OSS_ID &#xA;and dst.bhvalue=a.bhvalue;&#xA;&#xA;#end&#xA;&#xA;drop table #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;);&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.bhclass = (dst.monthbh * 100) + (dst.weekbh * 10) + 1&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.bhtype=&apos;AFG_CP1&apos;;&#xA;&#xA;#end&#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="471" COLLECTION_ID="139" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_RANKBH_AFG_CP2&#xD;&#xA;" ACTION_CONTENTS="IF (&#xA;select (SELECT  count(*) FROM SYSVIEWS WHERE viewname = &apos;DC_E_AFG_AFGBH_RANKBH_AFG_CP2&apos; AND vcreator=&apos;dc&apos;)&#xA;) = 1 then&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH_AFG_CP2 WHERE DATE_ID = $date&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;else&#xA;select 0 result&#xA;end if&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="472" COLLECTION_ID="139" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_CP2" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;DELETE $targetDerivedTable.get(&quot;RANKBH&quot;)&#xA;WHERE DATE_ID=$dateid AND BHTYPE=&apos;AFG_CP2&apos;&#xA;&#xA;Insert into $targetDerivedTable.get(&quot;RANKBH&quot;)&#xA;(&#xA; NODE_NAME &#xA;,OSS_ID&#xA;,DATE_ID&#xA;,BHTYPE&#xA;,BHVALUE&#xA;,BHCLASS&#xA;,WEEKBH&#xA;,MONTHBH&#xA;,DATACOVERAGE&#xA;,PERIOD_DURATION&#xA;,TIMELEVEL&#xA;,SESSION_ID&#xA;,BATCH_ID&#xA;,ROWSTATUS&#xA;,BH_ID&#xA;,OFFSET&#xA;,WINDOWSIZE&#xA;,BHOBJECT&#xA;)&#xA;SELECT &#xA; NODE_NAME&#xA;,OSS_ID&#xA;,DATE_ID&#xA;,&apos;AFG_CP2&apos;&#xA;,MAX(BHVALUE)&#xA;,1&#xA;,0&#xA;,0&#xA;,SUM(PERIOD_DURATION)&#xA;,NULL&#xA;,&apos;RANKBH&apos;&#xA;,$sessionid&#xA;,$batchid&#xA;,&apos;AGGREGATED&apos;&#xA;,ID&#xA;,MINUTE_OFFSET&#xA;,SLIDING_WINDOW_SIZE&#xA;,BHOBJECT&#xA;from $sourceTable.get(&quot;RANKBH&quot;)&#xA;WHERE DATE_ID=$dateid &#xA;and ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;GROUP BY&#xA;  NODE_NAME&#xA;,OSS_ID&#xA;,DATE_ID&#xA;,BHTYPE&#xA;,ID&#xA;,MINUTE_OFFSET&#xA;,SLIDING_WINDOW_SIZE&#xA;,BHOBJECT&#xA;&#xA;&#xA;UPDATE $targetDerivedTable.get(&quot;RANKBH&quot;) AS dst &#xA;SET &#xA;dst.BUSYHOUR=src.HOUR_ID,&#xA;dst.PERIOD_DURATION=src.PERIOD_DURATION&#xA;,dst.DC_RELEASE = src.DC_RELEASE&#xA;,dst.DC_SOURCE = src.DC_SOURCE&#xA;,dst.DC_TIMEZONE = src.DC_TIMEZONE&#xA;FROM $sourceTable.get(&quot;RANKBH&quot;) AS src&#xA;where src.DATE_ID=$dateid&#xA;and dst.DATE_ID=$dateid&#xA;and src.DATE_ID=dst.DATE_ID&#xA;and src.BHVALUE=dst.BHVALUE&#xA;and src.BHTYPE=dst.BHTYPE&#xA;and src.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;and dst.NODE_NAME = src.NODE_NAME&#xA;and dst.OSS_ID = src.OSS_ID&#xA;ORDER BY src.HOUR_ID &#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="473" COLLECTION_ID="140" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_WEEKRANKBH_AFG_CP2&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;WEEK&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="474" COLLECTION_ID="140" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_CP2" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.weekbh = 0&#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.bhtype=&apos;AFG_CP2&apos;;&#xA;&#xA;#end&#xA;&#xA;&#xA;&#xA;&#xA;SELECT &#xA;b.NODE_NAME AS NODE_NAME, &#xA;b.OSS_ID AS OSS_ID, &#xA;b.bhtype AS bhtype,max(b.bhvalue) AS bhvalue, cast(null as date) AS date_id &#xA;INTO #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) &#xA;FROM $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as b &#xA;where b.date_id between $dateid and dateadd(dd,6,$dateid) &#xA;and b.bhtype = &apos;AFG_CP2&apos; &#xA;group by &#xA;b.NODE_NAME,&#xA;b.OSS_ID,&#xA;b.bhtype;&#xA;&#xA;UPDATE #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) AS dst &#xA;SET dst.date_id = a.date_id from $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where a.date_id between $dateid and dateadd(dd,6,$dateid) &#xA;and a.bhtype = dst.bhtype&#xA;and a.NODE_NAME = dst.NODE_NAME &#xA;and a.OSS_ID = dst.OSS_ID &#xA;and a.bhvalue = dst.bhvalue;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.weekbh = 1 &#xA;from #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where dst.date_id=a.date_id&#xA;and dst.NODE_NAME= a.NODE_NAME &#xA;and dst.OSS_ID= a.OSS_ID &#xA;and dst.bhvalue=a.bhvalue;&#xA;&#xA;#end&#xA;&#xA;drop table #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;);&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.bhclass = (dst.monthbh * 100) + (dst.weekbh * 10) + 1 &#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.bhtype=&apos;AFG_CP2&apos;;&#xA;&#xA;#end&#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="475" COLLECTION_ID="141" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_MONTHRANKBH_AFG_CP2&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;MONTH&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="476" COLLECTION_ID="141" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_CP2" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.monthbh = 0&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.bhtype=&apos;AFG_CP2&apos;;&#xA;&#xA;#end&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;SELECT &#xA;b.NODE_NAME AS NODE_NAME, &#xA;b.OSS_ID AS OSS_ID, &#xA;b.bhtype AS bhtype,max(b.bhvalue) AS bhvalue, cast(null as date) AS date_id &#xA;INTO #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) &#xA;FROM $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as b &#xA;where b.date_id between $dateid and dateadd(mm,1,$dateid)-1 &#xA;and b.bhtype = &apos;AFG_CP2&apos; &#xA;group by &#xA;b.NODE_NAME,&#xA;b.OSS_ID,&#xA;b.bhtype;&#xA;&#xA;UPDATE #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) AS dst &#xA;SET dst.date_id = a.date_id from $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where a.date_id between $dateid and dateadd(mm,1,$dateid)-1 &#xA;and a.bhtype = dst.bhtype&#xA;and a.NODE_NAME = dst.NODE_NAME &#xA;and a.OSS_ID = dst.OSS_ID &#xA;and a.bhvalue = dst.bhvalue;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.monthbh = 1 &#xA;from #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where dst.date_id=a.date_id&#xA;and dst.NODE_NAME= a.NODE_NAME &#xA;and dst.OSS_ID= a.OSS_ID &#xA;and dst.bhvalue=a.bhvalue;&#xA;&#xA;#end&#xA;&#xA;drop table #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;);&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.bhclass = (dst.monthbh * 100) + (dst.weekbh * 10) + 1&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.bhtype=&apos;AFG_CP2&apos;;&#xA;&#xA;#end&#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="477" COLLECTION_ID="142" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_RANKBH_AFG_CP3&#xD;&#xA;" ACTION_CONTENTS="IF (&#xA;select (SELECT  count(*) FROM SYSVIEWS WHERE viewname = &apos;DC_E_AFG_AFGBH_RANKBH_AFG_CP3&apos; AND vcreator=&apos;dc&apos;)&#xA;) = 1 then&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH_AFG_CP3 WHERE DATE_ID = $date&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;else&#xA;select 0 result&#xA;end if&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="478" COLLECTION_ID="142" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_CP3" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;DELETE $targetDerivedTable.get(&quot;RANKBH&quot;)&#xA;WHERE DATE_ID=$dateid AND BHTYPE=&apos;AFG_CP3&apos;&#xA;&#xA;Insert into $targetDerivedTable.get(&quot;RANKBH&quot;)&#xA;(&#xA; NODE_NAME &#xA;,OSS_ID&#xA;,DATE_ID&#xA;,BHTYPE&#xA;,BHVALUE&#xA;,BHCLASS&#xA;,WEEKBH&#xA;,MONTHBH&#xA;,DATACOVERAGE&#xA;,PERIOD_DURATION&#xA;,TIMELEVEL&#xA;,SESSION_ID&#xA;,BATCH_ID&#xA;,ROWSTATUS&#xA;,BH_ID&#xA;,OFFSET&#xA;,WINDOWSIZE&#xA;,BHOBJECT&#xA;)&#xA;SELECT &#xA; NODE_NAME&#xA;,OSS_ID&#xA;,DATE_ID&#xA;,&apos;AFG_CP3&apos;&#xA;,MAX(BHVALUE)&#xA;,1&#xA;,0&#xA;,0&#xA;,SUM(PERIOD_DURATION)&#xA;,NULL&#xA;,&apos;RANKBH&apos;&#xA;,$sessionid&#xA;,$batchid&#xA;,&apos;AGGREGATED&apos;&#xA;,ID&#xA;,MINUTE_OFFSET&#xA;,SLIDING_WINDOW_SIZE&#xA;,BHOBJECT&#xA;from $sourceTable.get(&quot;RANKBH&quot;)&#xA;WHERE DATE_ID=$dateid &#xA;and ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;GROUP BY&#xA;  NODE_NAME&#xA;,OSS_ID&#xA;,DATE_ID&#xA;,BHTYPE&#xA;,ID&#xA;,MINUTE_OFFSET&#xA;,SLIDING_WINDOW_SIZE&#xA;,BHOBJECT&#xA;&#xA;&#xA;UPDATE $targetDerivedTable.get(&quot;RANKBH&quot;) AS dst &#xA;SET &#xA;dst.BUSYHOUR=src.HOUR_ID,&#xA;dst.PERIOD_DURATION=src.PERIOD_DURATION&#xA;,dst.DC_RELEASE = src.DC_RELEASE&#xA;,dst.DC_SOURCE = src.DC_SOURCE&#xA;,dst.DC_TIMEZONE = src.DC_TIMEZONE&#xA;FROM $sourceTable.get(&quot;RANKBH&quot;) AS src&#xA;where src.DATE_ID=$dateid&#xA;and dst.DATE_ID=$dateid&#xA;and src.DATE_ID=dst.DATE_ID&#xA;and src.BHVALUE=dst.BHVALUE&#xA;and src.BHTYPE=dst.BHTYPE&#xA;and src.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;and dst.NODE_NAME = src.NODE_NAME&#xA;and dst.OSS_ID = src.OSS_ID&#xA;ORDER BY src.HOUR_ID &#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="479" COLLECTION_ID="143" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_WEEKRANKBH_AFG_CP3&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;WEEK&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="480" COLLECTION_ID="143" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_CP3" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.weekbh = 0&#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.bhtype=&apos;AFG_CP3&apos;;&#xA;&#xA;#end&#xA;&#xA;&#xA;&#xA;&#xA;SELECT &#xA;b.NODE_NAME AS NODE_NAME, &#xA;b.OSS_ID AS OSS_ID, &#xA;b.bhtype AS bhtype,max(b.bhvalue) AS bhvalue, cast(null as date) AS date_id &#xA;INTO #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) &#xA;FROM $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as b &#xA;where b.date_id between $dateid and dateadd(dd,6,$dateid) &#xA;and b.bhtype = &apos;AFG_CP3&apos; &#xA;group by &#xA;b.NODE_NAME,&#xA;b.OSS_ID,&#xA;b.bhtype;&#xA;&#xA;UPDATE #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) AS dst &#xA;SET dst.date_id = a.date_id from $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where a.date_id between $dateid and dateadd(dd,6,$dateid) &#xA;and a.bhtype = dst.bhtype&#xA;and a.NODE_NAME = dst.NODE_NAME &#xA;and a.OSS_ID = dst.OSS_ID &#xA;and a.bhvalue = dst.bhvalue;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.weekbh = 1 &#xA;from #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where dst.date_id=a.date_id&#xA;and dst.NODE_NAME= a.NODE_NAME &#xA;and dst.OSS_ID= a.OSS_ID &#xA;and dst.bhvalue=a.bhvalue;&#xA;&#xA;#end&#xA;&#xA;drop table #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;);&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.bhclass = (dst.monthbh * 100) + (dst.weekbh * 10) + 1 &#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.bhtype=&apos;AFG_CP3&apos;;&#xA;&#xA;#end&#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="481" COLLECTION_ID="144" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_MONTHRANKBH_AFG_CP3&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;MONTH&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="482" COLLECTION_ID="144" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_CP3" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.monthbh = 0&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.bhtype=&apos;AFG_CP3&apos;;&#xA;&#xA;#end&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;SELECT &#xA;b.NODE_NAME AS NODE_NAME, &#xA;b.OSS_ID AS OSS_ID, &#xA;b.bhtype AS bhtype,max(b.bhvalue) AS bhvalue, cast(null as date) AS date_id &#xA;INTO #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) &#xA;FROM $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as b &#xA;where b.date_id between $dateid and dateadd(mm,1,$dateid)-1 &#xA;and b.bhtype = &apos;AFG_CP3&apos; &#xA;group by &#xA;b.NODE_NAME,&#xA;b.OSS_ID,&#xA;b.bhtype;&#xA;&#xA;UPDATE #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) AS dst &#xA;SET dst.date_id = a.date_id from $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where a.date_id between $dateid and dateadd(mm,1,$dateid)-1 &#xA;and a.bhtype = dst.bhtype&#xA;and a.NODE_NAME = dst.NODE_NAME &#xA;and a.OSS_ID = dst.OSS_ID &#xA;and a.bhvalue = dst.bhvalue;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.monthbh = 1 &#xA;from #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where dst.date_id=a.date_id&#xA;and dst.NODE_NAME= a.NODE_NAME &#xA;and dst.OSS_ID= a.OSS_ID &#xA;and dst.bhvalue=a.bhvalue;&#xA;&#xA;#end&#xA;&#xA;drop table #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;);&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.bhclass = (dst.monthbh * 100) + (dst.weekbh * 10) + 1&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.bhtype=&apos;AFG_CP3&apos;;&#xA;&#xA;#end&#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="483" COLLECTION_ID="145" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_RANKBH_AFG_CP4&#xD;&#xA;" ACTION_CONTENTS="IF (&#xA;select (SELECT  count(*) FROM SYSVIEWS WHERE viewname = &apos;DC_E_AFG_AFGBH_RANKBH_AFG_CP4&apos; AND vcreator=&apos;dc&apos;)&#xA;) = 1 then&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH_AFG_CP4 WHERE DATE_ID = $date&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;else&#xA;select 0 result&#xA;end if&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="484" COLLECTION_ID="145" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_CP4" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;DELETE $targetDerivedTable.get(&quot;RANKBH&quot;)&#xA;WHERE DATE_ID=$dateid AND BHTYPE=&apos;AFG_CP4&apos;&#xA;&#xA;Insert into $targetDerivedTable.get(&quot;RANKBH&quot;)&#xA;(&#xA; NODE_NAME &#xA;,OSS_ID&#xA;,DATE_ID&#xA;,BHTYPE&#xA;,BHVALUE&#xA;,BHCLASS&#xA;,WEEKBH&#xA;,MONTHBH&#xA;,DATACOVERAGE&#xA;,PERIOD_DURATION&#xA;,TIMELEVEL&#xA;,SESSION_ID&#xA;,BATCH_ID&#xA;,ROWSTATUS&#xA;,BH_ID&#xA;,OFFSET&#xA;,WINDOWSIZE&#xA;,BHOBJECT&#xA;)&#xA;SELECT &#xA; NODE_NAME&#xA;,OSS_ID&#xA;,DATE_ID&#xA;,&apos;AFG_CP4&apos;&#xA;,MAX(BHVALUE)&#xA;,1&#xA;,0&#xA;,0&#xA;,SUM(PERIOD_DURATION)&#xA;,NULL&#xA;,&apos;RANKBH&apos;&#xA;,$sessionid&#xA;,$batchid&#xA;,&apos;AGGREGATED&apos;&#xA;,ID&#xA;,MINUTE_OFFSET&#xA;,SLIDING_WINDOW_SIZE&#xA;,BHOBJECT&#xA;from $sourceTable.get(&quot;RANKBH&quot;)&#xA;WHERE DATE_ID=$dateid &#xA;and ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;GROUP BY&#xA;  NODE_NAME&#xA;,OSS_ID&#xA;,DATE_ID&#xA;,BHTYPE&#xA;,ID&#xA;,MINUTE_OFFSET&#xA;,SLIDING_WINDOW_SIZE&#xA;,BHOBJECT&#xA;&#xA;&#xA;UPDATE $targetDerivedTable.get(&quot;RANKBH&quot;) AS dst &#xA;SET &#xA;dst.BUSYHOUR=src.HOUR_ID,&#xA;dst.PERIOD_DURATION=src.PERIOD_DURATION&#xA;,dst.DC_RELEASE = src.DC_RELEASE&#xA;,dst.DC_SOURCE = src.DC_SOURCE&#xA;,dst.DC_TIMEZONE = src.DC_TIMEZONE&#xA;FROM $sourceTable.get(&quot;RANKBH&quot;) AS src&#xA;where src.DATE_ID=$dateid&#xA;and dst.DATE_ID=$dateid&#xA;and src.DATE_ID=dst.DATE_ID&#xA;and src.BHVALUE=dst.BHVALUE&#xA;and src.BHTYPE=dst.BHTYPE&#xA;and src.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;and dst.NODE_NAME = src.NODE_NAME&#xA;and dst.OSS_ID = src.OSS_ID&#xA;ORDER BY src.HOUR_ID &#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="485" COLLECTION_ID="146" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_WEEKRANKBH_AFG_CP4&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;WEEK&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="486" COLLECTION_ID="146" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_CP4" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.weekbh = 0&#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.bhtype=&apos;AFG_CP4&apos;;&#xA;&#xA;#end&#xA;&#xA;&#xA;&#xA;&#xA;SELECT &#xA;b.NODE_NAME AS NODE_NAME, &#xA;b.OSS_ID AS OSS_ID, &#xA;b.bhtype AS bhtype,max(b.bhvalue) AS bhvalue, cast(null as date) AS date_id &#xA;INTO #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) &#xA;FROM $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as b &#xA;where b.date_id between $dateid and dateadd(dd,6,$dateid) &#xA;and b.bhtype = &apos;AFG_CP4&apos; &#xA;group by &#xA;b.NODE_NAME,&#xA;b.OSS_ID,&#xA;b.bhtype;&#xA;&#xA;UPDATE #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) AS dst &#xA;SET dst.date_id = a.date_id from $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where a.date_id between $dateid and dateadd(dd,6,$dateid) &#xA;and a.bhtype = dst.bhtype&#xA;and a.NODE_NAME = dst.NODE_NAME &#xA;and a.OSS_ID = dst.OSS_ID &#xA;and a.bhvalue = dst.bhvalue;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.weekbh = 1 &#xA;from #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where dst.date_id=a.date_id&#xA;and dst.NODE_NAME= a.NODE_NAME &#xA;and dst.OSS_ID= a.OSS_ID &#xA;and dst.bhvalue=a.bhvalue;&#xA;&#xA;#end&#xA;&#xA;drop table #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;);&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.bhclass = (dst.monthbh * 100) + (dst.weekbh * 10) + 1 &#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.bhtype=&apos;AFG_CP4&apos;;&#xA;&#xA;#end&#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="487" COLLECTION_ID="147" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_MONTHRANKBH_AFG_CP4&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;MONTH&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="488" COLLECTION_ID="147" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_CP4" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.monthbh = 0&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.bhtype=&apos;AFG_CP4&apos;;&#xA;&#xA;#end&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;SELECT &#xA;b.NODE_NAME AS NODE_NAME, &#xA;b.OSS_ID AS OSS_ID, &#xA;b.bhtype AS bhtype,max(b.bhvalue) AS bhvalue, cast(null as date) AS date_id &#xA;INTO #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) &#xA;FROM $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as b &#xA;where b.date_id between $dateid and dateadd(mm,1,$dateid)-1 &#xA;and b.bhtype = &apos;AFG_CP4&apos; &#xA;group by &#xA;b.NODE_NAME,&#xA;b.OSS_ID,&#xA;b.bhtype;&#xA;&#xA;UPDATE #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) AS dst &#xA;SET dst.date_id = a.date_id from $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where a.date_id between $dateid and dateadd(mm,1,$dateid)-1 &#xA;and a.bhtype = dst.bhtype&#xA;and a.NODE_NAME = dst.NODE_NAME &#xA;and a.OSS_ID = dst.OSS_ID &#xA;and a.bhvalue = dst.bhvalue;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.monthbh = 1 &#xA;from #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where dst.date_id=a.date_id&#xA;and dst.NODE_NAME= a.NODE_NAME &#xA;and dst.OSS_ID= a.OSS_ID &#xA;and dst.bhvalue=a.bhvalue;&#xA;&#xA;#end&#xA;&#xA;drop table #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;);&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.bhclass = (dst.monthbh * 100) + (dst.weekbh * 10) + 1&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.bhtype=&apos;AFG_CP4&apos;;&#xA;&#xA;#end&#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="489" COLLECTION_ID="148" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_RANKBH_AFG_PP0&#xD;&#xA;" ACTION_CONTENTS="IF (&#xA;select (SELECT  count(*) FROM SYSVIEWS WHERE viewname = &apos;DC_E_AFG_AFGBH_RANKBH_AFG_PP0&apos; AND vcreator=&apos;dc&apos;)&#xA;) = 1 then&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH_AFG_PP0 WHERE DATE_ID = $date&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;else&#xA;select 0 result&#xA;end if&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="490" COLLECTION_ID="148" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_PP0" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;DELETE $targetDerivedTable.get(&quot;RANKBH&quot;)&#xA;WHERE DATE_ID=$dateid AND BHTYPE=&apos;AFG_PP0&apos;&#xA;&#xA;Insert into $targetDerivedTable.get(&quot;RANKBH&quot;)&#xA;(&#xA; NODE_NAME &#xA;,OSS_ID&#xA;,DATE_ID&#xA;,BHTYPE&#xA;,BHVALUE&#xA;,BHCLASS&#xA;,WEEKBH&#xA;,MONTHBH&#xA;,DATACOVERAGE&#xA;,PERIOD_DURATION&#xA;,TIMELEVEL&#xA;,SESSION_ID&#xA;,BATCH_ID&#xA;,ROWSTATUS&#xA;,BH_ID&#xA;,OFFSET&#xA;,WINDOWSIZE&#xA;,BHOBJECT&#xA;)&#xA;SELECT &#xA; NODE_NAME&#xA;,OSS_ID&#xA;,DATE_ID&#xA;,&apos;AFG_PP0&apos;&#xA;,MAX(BHVALUE)&#xA;,1&#xA;,0&#xA;,0&#xA;,SUM(PERIOD_DURATION)&#xA;,NULL&#xA;,&apos;RANKBH&apos;&#xA;,$sessionid&#xA;,$batchid&#xA;,&apos;AGGREGATED&apos;&#xA;,ID&#xA;,MINUTE_OFFSET&#xA;,SLIDING_WINDOW_SIZE&#xA;,BHOBJECT&#xA;from $sourceTable.get(&quot;RANKBH&quot;)&#xA;WHERE DATE_ID=$dateid &#xA;and ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;GROUP BY&#xA;  NODE_NAME&#xA;,OSS_ID&#xA;,DATE_ID&#xA;,BHTYPE&#xA;,ID&#xA;,MINUTE_OFFSET&#xA;,SLIDING_WINDOW_SIZE&#xA;,BHOBJECT&#xA;&#xA;&#xA;UPDATE $targetDerivedTable.get(&quot;RANKBH&quot;) AS dst &#xA;SET &#xA;dst.BUSYHOUR=src.HOUR_ID,&#xA;dst.PERIOD_DURATION=src.PERIOD_DURATION&#xA;,dst.DC_RELEASE = src.DC_RELEASE&#xA;,dst.DC_SOURCE = src.DC_SOURCE&#xA;,dst.DC_TIMEZONE = src.DC_TIMEZONE&#xA;FROM $sourceTable.get(&quot;RANKBH&quot;) AS src&#xA;where src.DATE_ID=$dateid&#xA;and dst.DATE_ID=$dateid&#xA;and src.DATE_ID=dst.DATE_ID&#xA;and src.BHVALUE=dst.BHVALUE&#xA;and src.BHTYPE=dst.BHTYPE&#xA;and src.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;and dst.NODE_NAME = src.NODE_NAME&#xA;and dst.OSS_ID = src.OSS_ID&#xA;ORDER BY src.HOUR_ID &#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="491" COLLECTION_ID="149" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_WEEKRANKBH_AFG_PP0&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;WEEK&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="492" COLLECTION_ID="149" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_PP0" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.weekbh = 0&#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.bhtype=&apos;AFG_PP0&apos;;&#xA;&#xA;#end&#xA;&#xA;&#xA;&#xA;&#xA;SELECT &#xA;b.NODE_NAME AS NODE_NAME, &#xA;b.OSS_ID AS OSS_ID, &#xA;b.bhtype AS bhtype,max(b.bhvalue) AS bhvalue, cast(null as date) AS date_id &#xA;INTO #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) &#xA;FROM $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as b &#xA;where b.date_id between $dateid and dateadd(dd,6,$dateid) &#xA;and b.bhtype = &apos;AFG_PP0&apos; &#xA;group by &#xA;b.NODE_NAME,&#xA;b.OSS_ID,&#xA;b.bhtype;&#xA;&#xA;UPDATE #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) AS dst &#xA;SET dst.date_id = a.date_id from $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where a.date_id between $dateid and dateadd(dd,6,$dateid) &#xA;and a.bhtype = dst.bhtype&#xA;and a.NODE_NAME = dst.NODE_NAME &#xA;and a.OSS_ID = dst.OSS_ID &#xA;and a.bhvalue = dst.bhvalue;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.weekbh = 1 &#xA;from #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where dst.date_id=a.date_id&#xA;and dst.NODE_NAME= a.NODE_NAME &#xA;and dst.OSS_ID= a.OSS_ID &#xA;and dst.bhvalue=a.bhvalue;&#xA;&#xA;#end&#xA;&#xA;drop table #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;);&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.bhclass = (dst.monthbh * 100) + (dst.weekbh * 10) + 1 &#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.bhtype=&apos;AFG_PP0&apos;;&#xA;&#xA;#end&#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="493" COLLECTION_ID="150" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_MONTHRANKBH_AFG_PP0&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;MONTH&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="494" COLLECTION_ID="150" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_PP0" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.monthbh = 0&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.bhtype=&apos;AFG_PP0&apos;;&#xA;&#xA;#end&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;SELECT &#xA;b.NODE_NAME AS NODE_NAME, &#xA;b.OSS_ID AS OSS_ID, &#xA;b.bhtype AS bhtype,max(b.bhvalue) AS bhvalue, cast(null as date) AS date_id &#xA;INTO #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) &#xA;FROM $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as b &#xA;where b.date_id between $dateid and dateadd(mm,1,$dateid)-1 &#xA;and b.bhtype = &apos;AFG_PP0&apos; &#xA;group by &#xA;b.NODE_NAME,&#xA;b.OSS_ID,&#xA;b.bhtype;&#xA;&#xA;UPDATE #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) AS dst &#xA;SET dst.date_id = a.date_id from $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where a.date_id between $dateid and dateadd(mm,1,$dateid)-1 &#xA;and a.bhtype = dst.bhtype&#xA;and a.NODE_NAME = dst.NODE_NAME &#xA;and a.OSS_ID = dst.OSS_ID &#xA;and a.bhvalue = dst.bhvalue;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.monthbh = 1 &#xA;from #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where dst.date_id=a.date_id&#xA;and dst.NODE_NAME= a.NODE_NAME &#xA;and dst.OSS_ID= a.OSS_ID &#xA;and dst.bhvalue=a.bhvalue;&#xA;&#xA;#end&#xA;&#xA;drop table #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;);&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.bhclass = (dst.monthbh * 100) + (dst.weekbh * 10) + 1&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.bhtype=&apos;AFG_PP0&apos;;&#xA;&#xA;#end&#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="495" COLLECTION_ID="151" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:20 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_RANKBH_AFG_PP1&#xD;&#xA;" ACTION_CONTENTS="IF (&#xA;select (SELECT  count(*) FROM SYSVIEWS WHERE viewname = &apos;DC_E_AFG_AFGBH_RANKBH_AFG_PP1&apos; AND vcreator=&apos;dc&apos;)&#xA;) = 1 then&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH_AFG_PP1 WHERE DATE_ID = $date&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;else&#xA;select 0 result&#xA;end if&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="496" COLLECTION_ID="151" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_PP1" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;DELETE $targetDerivedTable.get(&quot;RANKBH&quot;)&#xA;WHERE DATE_ID=$dateid AND BHTYPE=&apos;AFG_PP1&apos;&#xA;&#xA;Insert into $targetDerivedTable.get(&quot;RANKBH&quot;)&#xA;(&#xA; NODE_NAME &#xA;,OSS_ID&#xA;,DATE_ID&#xA;,BHTYPE&#xA;,BHVALUE&#xA;,BHCLASS&#xA;,WEEKBH&#xA;,MONTHBH&#xA;,DATACOVERAGE&#xA;,PERIOD_DURATION&#xA;,TIMELEVEL&#xA;,SESSION_ID&#xA;,BATCH_ID&#xA;,ROWSTATUS&#xA;,BH_ID&#xA;,OFFSET&#xA;,WINDOWSIZE&#xA;,BHOBJECT&#xA;)&#xA;SELECT &#xA; NODE_NAME&#xA;,OSS_ID&#xA;,DATE_ID&#xA;,&apos;AFG_PP1&apos;&#xA;,MAX(BHVALUE)&#xA;,1&#xA;,0&#xA;,0&#xA;,SUM(PERIOD_DURATION)&#xA;,NULL&#xA;,&apos;RANKBH&apos;&#xA;,$sessionid&#xA;,$batchid&#xA;,&apos;AGGREGATED&apos;&#xA;,ID&#xA;,MINUTE_OFFSET&#xA;,SLIDING_WINDOW_SIZE&#xA;,BHOBJECT&#xA;from $sourceTable.get(&quot;RANKBH&quot;)&#xA;WHERE DATE_ID=$dateid &#xA;and ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;GROUP BY&#xA;  NODE_NAME&#xA;,OSS_ID&#xA;,DATE_ID&#xA;,BHTYPE&#xA;,ID&#xA;,MINUTE_OFFSET&#xA;,SLIDING_WINDOW_SIZE&#xA;,BHOBJECT&#xA;&#xA;&#xA;UPDATE $targetDerivedTable.get(&quot;RANKBH&quot;) AS dst &#xA;SET &#xA;dst.BUSYHOUR=src.HOUR_ID,&#xA;dst.PERIOD_DURATION=src.PERIOD_DURATION&#xA;,dst.DC_RELEASE = src.DC_RELEASE&#xA;,dst.DC_SOURCE = src.DC_SOURCE&#xA;,dst.DC_TIMEZONE = src.DC_TIMEZONE&#xA;FROM $sourceTable.get(&quot;RANKBH&quot;) AS src&#xA;where src.DATE_ID=$dateid&#xA;and dst.DATE_ID=$dateid&#xA;and src.DATE_ID=dst.DATE_ID&#xA;and src.BHVALUE=dst.BHVALUE&#xA;and src.BHTYPE=dst.BHTYPE&#xA;and src.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;and dst.NODE_NAME = src.NODE_NAME&#xA;and dst.OSS_ID = src.OSS_ID&#xA;ORDER BY src.HOUR_ID &#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="497" COLLECTION_ID="152" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_WEEKRANKBH_AFG_PP1&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;WEEK&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="498" COLLECTION_ID="152" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_PP1" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.weekbh = 0&#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.bhtype=&apos;AFG_PP1&apos;;&#xA;&#xA;#end&#xA;&#xA;&#xA;&#xA;&#xA;SELECT &#xA;b.NODE_NAME AS NODE_NAME, &#xA;b.OSS_ID AS OSS_ID, &#xA;b.bhtype AS bhtype,max(b.bhvalue) AS bhvalue, cast(null as date) AS date_id &#xA;INTO #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) &#xA;FROM $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as b &#xA;where b.date_id between $dateid and dateadd(dd,6,$dateid) &#xA;and b.bhtype = &apos;AFG_PP1&apos; &#xA;group by &#xA;b.NODE_NAME,&#xA;b.OSS_ID,&#xA;b.bhtype;&#xA;&#xA;UPDATE #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) AS dst &#xA;SET dst.date_id = a.date_id from $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where a.date_id between $dateid and dateadd(dd,6,$dateid) &#xA;and a.bhtype = dst.bhtype&#xA;and a.NODE_NAME = dst.NODE_NAME &#xA;and a.OSS_ID = dst.OSS_ID &#xA;and a.bhvalue = dst.bhvalue;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.weekbh = 1 &#xA;from #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where dst.date_id=a.date_id&#xA;and dst.NODE_NAME= a.NODE_NAME &#xA;and dst.OSS_ID= a.OSS_ID &#xA;and dst.bhvalue=a.bhvalue;&#xA;&#xA;#end&#xA;&#xA;drop table #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;);&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.bhclass = (dst.monthbh * 100) + (dst.weekbh * 10) + 1 &#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.bhtype=&apos;AFG_PP1&apos;;&#xA;&#xA;#end&#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="499" COLLECTION_ID="153" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_MONTHRANKBH_AFG_PP1&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;MONTH&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="500" COLLECTION_ID="153" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_PP1" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.monthbh = 0&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.bhtype=&apos;AFG_PP1&apos;;&#xA;&#xA;#end&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;SELECT &#xA;b.NODE_NAME AS NODE_NAME, &#xA;b.OSS_ID AS OSS_ID, &#xA;b.bhtype AS bhtype,max(b.bhvalue) AS bhvalue, cast(null as date) AS date_id &#xA;INTO #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) &#xA;FROM $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as b &#xA;where b.date_id between $dateid and dateadd(mm,1,$dateid)-1 &#xA;and b.bhtype = &apos;AFG_PP1&apos; &#xA;group by &#xA;b.NODE_NAME,&#xA;b.OSS_ID,&#xA;b.bhtype;&#xA;&#xA;UPDATE #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) AS dst &#xA;SET dst.date_id = a.date_id from $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where a.date_id between $dateid and dateadd(mm,1,$dateid)-1 &#xA;and a.bhtype = dst.bhtype&#xA;and a.NODE_NAME = dst.NODE_NAME &#xA;and a.OSS_ID = dst.OSS_ID &#xA;and a.bhvalue = dst.bhvalue;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.monthbh = 1 &#xA;from #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where dst.date_id=a.date_id&#xA;and dst.NODE_NAME= a.NODE_NAME &#xA;and dst.OSS_ID= a.OSS_ID &#xA;and dst.bhvalue=a.bhvalue;&#xA;&#xA;#end&#xA;&#xA;drop table #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;);&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.bhclass = (dst.monthbh * 100) + (dst.weekbh * 10) + 1&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.bhtype=&apos;AFG_PP1&apos;;&#xA;&#xA;#end&#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="501" COLLECTION_ID="154" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_RANKBH_AFG_PP2&#xD;&#xA;" ACTION_CONTENTS="IF (&#xA;select (SELECT  count(*) FROM SYSVIEWS WHERE viewname = &apos;DC_E_AFG_AFGBH_RANKBH_AFG_PP2&apos; AND vcreator=&apos;dc&apos;)&#xA;) = 1 then&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH_AFG_PP2 WHERE DATE_ID = $date&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;else&#xA;select 0 result&#xA;end if&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="502" COLLECTION_ID="154" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_PP2" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;DELETE $targetDerivedTable.get(&quot;RANKBH&quot;)&#xA;WHERE DATE_ID=$dateid AND BHTYPE=&apos;AFG_PP2&apos;&#xA;&#xA;Insert into $targetDerivedTable.get(&quot;RANKBH&quot;)&#xA;(&#xA; NODE_NAME &#xA;,OSS_ID&#xA;,DATE_ID&#xA;,BHTYPE&#xA;,BHVALUE&#xA;,BHCLASS&#xA;,WEEKBH&#xA;,MONTHBH&#xA;,DATACOVERAGE&#xA;,PERIOD_DURATION&#xA;,TIMELEVEL&#xA;,SESSION_ID&#xA;,BATCH_ID&#xA;,ROWSTATUS&#xA;,BH_ID&#xA;,OFFSET&#xA;,WINDOWSIZE&#xA;,BHOBJECT&#xA;)&#xA;SELECT &#xA; NODE_NAME&#xA;,OSS_ID&#xA;,DATE_ID&#xA;,&apos;AFG_PP2&apos;&#xA;,MAX(BHVALUE)&#xA;,1&#xA;,0&#xA;,0&#xA;,SUM(PERIOD_DURATION)&#xA;,NULL&#xA;,&apos;RANKBH&apos;&#xA;,$sessionid&#xA;,$batchid&#xA;,&apos;AGGREGATED&apos;&#xA;,ID&#xA;,MINUTE_OFFSET&#xA;,SLIDING_WINDOW_SIZE&#xA;,BHOBJECT&#xA;from $sourceTable.get(&quot;RANKBH&quot;)&#xA;WHERE DATE_ID=$dateid &#xA;and ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;GROUP BY&#xA;  NODE_NAME&#xA;,OSS_ID&#xA;,DATE_ID&#xA;,BHTYPE&#xA;,ID&#xA;,MINUTE_OFFSET&#xA;,SLIDING_WINDOW_SIZE&#xA;,BHOBJECT&#xA;&#xA;&#xA;UPDATE $targetDerivedTable.get(&quot;RANKBH&quot;) AS dst &#xA;SET &#xA;dst.BUSYHOUR=src.HOUR_ID,&#xA;dst.PERIOD_DURATION=src.PERIOD_DURATION&#xA;,dst.DC_RELEASE = src.DC_RELEASE&#xA;,dst.DC_SOURCE = src.DC_SOURCE&#xA;,dst.DC_TIMEZONE = src.DC_TIMEZONE&#xA;FROM $sourceTable.get(&quot;RANKBH&quot;) AS src&#xA;where src.DATE_ID=$dateid&#xA;and dst.DATE_ID=$dateid&#xA;and src.DATE_ID=dst.DATE_ID&#xA;and src.BHVALUE=dst.BHVALUE&#xA;and src.BHTYPE=dst.BHTYPE&#xA;and src.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;and dst.NODE_NAME = src.NODE_NAME&#xA;and dst.OSS_ID = src.OSS_ID&#xA;ORDER BY src.HOUR_ID &#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="503" COLLECTION_ID="155" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_WEEKRANKBH_AFG_PP2&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;WEEK&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="504" COLLECTION_ID="155" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_PP2" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.weekbh = 0&#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.bhtype=&apos;AFG_PP2&apos;;&#xA;&#xA;#end&#xA;&#xA;&#xA;&#xA;&#xA;SELECT &#xA;b.NODE_NAME AS NODE_NAME, &#xA;b.OSS_ID AS OSS_ID, &#xA;b.bhtype AS bhtype,max(b.bhvalue) AS bhvalue, cast(null as date) AS date_id &#xA;INTO #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) &#xA;FROM $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as b &#xA;where b.date_id between $dateid and dateadd(dd,6,$dateid) &#xA;and b.bhtype = &apos;AFG_PP2&apos; &#xA;group by &#xA;b.NODE_NAME,&#xA;b.OSS_ID,&#xA;b.bhtype;&#xA;&#xA;UPDATE #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) AS dst &#xA;SET dst.date_id = a.date_id from $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where a.date_id between $dateid and dateadd(dd,6,$dateid) &#xA;and a.bhtype = dst.bhtype&#xA;and a.NODE_NAME = dst.NODE_NAME &#xA;and a.OSS_ID = dst.OSS_ID &#xA;and a.bhvalue = dst.bhvalue;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.weekbh = 1 &#xA;from #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where dst.date_id=a.date_id&#xA;and dst.NODE_NAME= a.NODE_NAME &#xA;and dst.OSS_ID= a.OSS_ID &#xA;and dst.bhvalue=a.bhvalue;&#xA;&#xA;#end&#xA;&#xA;drop table #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;);&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.bhclass = (dst.monthbh * 100) + (dst.weekbh * 10) + 1 &#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.bhtype=&apos;AFG_PP2&apos;;&#xA;&#xA;#end&#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="505" COLLECTION_ID="156" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_MONTHRANKBH_AFG_PP2&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;MONTH&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="506" COLLECTION_ID="156" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_PP2" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.monthbh = 0&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.bhtype=&apos;AFG_PP2&apos;;&#xA;&#xA;#end&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;SELECT &#xA;b.NODE_NAME AS NODE_NAME, &#xA;b.OSS_ID AS OSS_ID, &#xA;b.bhtype AS bhtype,max(b.bhvalue) AS bhvalue, cast(null as date) AS date_id &#xA;INTO #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) &#xA;FROM $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as b &#xA;where b.date_id between $dateid and dateadd(mm,1,$dateid)-1 &#xA;and b.bhtype = &apos;AFG_PP2&apos; &#xA;group by &#xA;b.NODE_NAME,&#xA;b.OSS_ID,&#xA;b.bhtype;&#xA;&#xA;UPDATE #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) AS dst &#xA;SET dst.date_id = a.date_id from $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where a.date_id between $dateid and dateadd(mm,1,$dateid)-1 &#xA;and a.bhtype = dst.bhtype&#xA;and a.NODE_NAME = dst.NODE_NAME &#xA;and a.OSS_ID = dst.OSS_ID &#xA;and a.bhvalue = dst.bhvalue;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.monthbh = 1 &#xA;from #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where dst.date_id=a.date_id&#xA;and dst.NODE_NAME= a.NODE_NAME &#xA;and dst.OSS_ID= a.OSS_ID &#xA;and dst.bhvalue=a.bhvalue;&#xA;&#xA;#end&#xA;&#xA;drop table #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;);&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.bhclass = (dst.monthbh * 100) + (dst.weekbh * 10) + 1&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.bhtype=&apos;AFG_PP2&apos;;&#xA;&#xA;#end&#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="507" COLLECTION_ID="157" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_RANKBH_AFG_PP3&#xD;&#xA;" ACTION_CONTENTS="IF (&#xA;select (SELECT  count(*) FROM SYSVIEWS WHERE viewname = &apos;DC_E_AFG_AFGBH_RANKBH_AFG_PP3&apos; AND vcreator=&apos;dc&apos;)&#xA;) = 1 then&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH_AFG_PP3 WHERE DATE_ID = $date&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;else&#xA;select 0 result&#xA;end if&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="508" COLLECTION_ID="157" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_PP3" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;DELETE $targetDerivedTable.get(&quot;RANKBH&quot;)&#xA;WHERE DATE_ID=$dateid AND BHTYPE=&apos;AFG_PP3&apos;&#xA;&#xA;Insert into $targetDerivedTable.get(&quot;RANKBH&quot;)&#xA;(&#xA; NODE_NAME &#xA;,OSS_ID&#xA;,DATE_ID&#xA;,BHTYPE&#xA;,BHVALUE&#xA;,BHCLASS&#xA;,WEEKBH&#xA;,MONTHBH&#xA;,DATACOVERAGE&#xA;,PERIOD_DURATION&#xA;,TIMELEVEL&#xA;,SESSION_ID&#xA;,BATCH_ID&#xA;,ROWSTATUS&#xA;,BH_ID&#xA;,OFFSET&#xA;,WINDOWSIZE&#xA;,BHOBJECT&#xA;)&#xA;SELECT &#xA; NODE_NAME&#xA;,OSS_ID&#xA;,DATE_ID&#xA;,&apos;AFG_PP3&apos;&#xA;,MAX(BHVALUE)&#xA;,1&#xA;,0&#xA;,0&#xA;,SUM(PERIOD_DURATION)&#xA;,NULL&#xA;,&apos;RANKBH&apos;&#xA;,$sessionid&#xA;,$batchid&#xA;,&apos;AGGREGATED&apos;&#xA;,ID&#xA;,MINUTE_OFFSET&#xA;,SLIDING_WINDOW_SIZE&#xA;,BHOBJECT&#xA;from $sourceTable.get(&quot;RANKBH&quot;)&#xA;WHERE DATE_ID=$dateid &#xA;and ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;GROUP BY&#xA;  NODE_NAME&#xA;,OSS_ID&#xA;,DATE_ID&#xA;,BHTYPE&#xA;,ID&#xA;,MINUTE_OFFSET&#xA;,SLIDING_WINDOW_SIZE&#xA;,BHOBJECT&#xA;&#xA;&#xA;UPDATE $targetDerivedTable.get(&quot;RANKBH&quot;) AS dst &#xA;SET &#xA;dst.BUSYHOUR=src.HOUR_ID,&#xA;dst.PERIOD_DURATION=src.PERIOD_DURATION&#xA;,dst.DC_RELEASE = src.DC_RELEASE&#xA;,dst.DC_SOURCE = src.DC_SOURCE&#xA;,dst.DC_TIMEZONE = src.DC_TIMEZONE&#xA;FROM $sourceTable.get(&quot;RANKBH&quot;) AS src&#xA;where src.DATE_ID=$dateid&#xA;and dst.DATE_ID=$dateid&#xA;and src.DATE_ID=dst.DATE_ID&#xA;and src.BHVALUE=dst.BHVALUE&#xA;and src.BHTYPE=dst.BHTYPE&#xA;and src.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;and dst.NODE_NAME = src.NODE_NAME&#xA;and dst.OSS_ID = src.OSS_ID&#xA;ORDER BY src.HOUR_ID &#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="509" COLLECTION_ID="158" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_WEEKRANKBH_AFG_PP3&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;WEEK&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="510" COLLECTION_ID="158" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_PP3" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.weekbh = 0&#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.bhtype=&apos;AFG_PP3&apos;;&#xA;&#xA;#end&#xA;&#xA;&#xA;&#xA;&#xA;SELECT &#xA;b.NODE_NAME AS NODE_NAME, &#xA;b.OSS_ID AS OSS_ID, &#xA;b.bhtype AS bhtype,max(b.bhvalue) AS bhvalue, cast(null as date) AS date_id &#xA;INTO #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) &#xA;FROM $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as b &#xA;where b.date_id between $dateid and dateadd(dd,6,$dateid) &#xA;and b.bhtype = &apos;AFG_PP3&apos; &#xA;group by &#xA;b.NODE_NAME,&#xA;b.OSS_ID,&#xA;b.bhtype;&#xA;&#xA;UPDATE #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) AS dst &#xA;SET dst.date_id = a.date_id from $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where a.date_id between $dateid and dateadd(dd,6,$dateid) &#xA;and a.bhtype = dst.bhtype&#xA;and a.NODE_NAME = dst.NODE_NAME &#xA;and a.OSS_ID = dst.OSS_ID &#xA;and a.bhvalue = dst.bhvalue;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.weekbh = 1 &#xA;from #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where dst.date_id=a.date_id&#xA;and dst.NODE_NAME= a.NODE_NAME &#xA;and dst.OSS_ID= a.OSS_ID &#xA;and dst.bhvalue=a.bhvalue;&#xA;&#xA;#end&#xA;&#xA;drop table #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;);&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.bhclass = (dst.monthbh * 100) + (dst.weekbh * 10) + 1 &#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.bhtype=&apos;AFG_PP3&apos;;&#xA;&#xA;#end&#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="511" COLLECTION_ID="159" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_MONTHRANKBH_AFG_PP3&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;MONTH&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="512" COLLECTION_ID="159" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_PP3" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.monthbh = 0&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.bhtype=&apos;AFG_PP3&apos;;&#xA;&#xA;#end&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;SELECT &#xA;b.NODE_NAME AS NODE_NAME, &#xA;b.OSS_ID AS OSS_ID, &#xA;b.bhtype AS bhtype,max(b.bhvalue) AS bhvalue, cast(null as date) AS date_id &#xA;INTO #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) &#xA;FROM $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as b &#xA;where b.date_id between $dateid and dateadd(mm,1,$dateid)-1 &#xA;and b.bhtype = &apos;AFG_PP3&apos; &#xA;group by &#xA;b.NODE_NAME,&#xA;b.OSS_ID,&#xA;b.bhtype;&#xA;&#xA;UPDATE #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) AS dst &#xA;SET dst.date_id = a.date_id from $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where a.date_id between $dateid and dateadd(mm,1,$dateid)-1 &#xA;and a.bhtype = dst.bhtype&#xA;and a.NODE_NAME = dst.NODE_NAME &#xA;and a.OSS_ID = dst.OSS_ID &#xA;and a.bhvalue = dst.bhvalue;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.monthbh = 1 &#xA;from #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where dst.date_id=a.date_id&#xA;and dst.NODE_NAME= a.NODE_NAME &#xA;and dst.OSS_ID= a.OSS_ID &#xA;and dst.bhvalue=a.bhvalue;&#xA;&#xA;#end&#xA;&#xA;drop table #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;);&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.bhclass = (dst.monthbh * 100) + (dst.weekbh * 10) + 1&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.bhtype=&apos;AFG_PP3&apos;;&#xA;&#xA;#end&#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="513" COLLECTION_ID="160" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_RANKBH_AFG_PP4&#xD;&#xA;" ACTION_CONTENTS="IF (&#xA;select (SELECT  count(*) FROM SYSVIEWS WHERE viewname = &apos;DC_E_AFG_AFGBH_RANKBH_AFG_PP4&apos; AND vcreator=&apos;dc&apos;)&#xA;) = 1 then&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH_AFG_PP4 WHERE DATE_ID = $date&#xA;UNION ALL&#xA;SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;DAY&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;else&#xA;select 0 result&#xA;end if&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="514" COLLECTION_ID="160" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_PP4" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;DELETE $targetDerivedTable.get(&quot;RANKBH&quot;)&#xA;WHERE DATE_ID=$dateid AND BHTYPE=&apos;AFG_PP4&apos;&#xA;&#xA;Insert into $targetDerivedTable.get(&quot;RANKBH&quot;)&#xA;(&#xA; NODE_NAME &#xA;,OSS_ID&#xA;,DATE_ID&#xA;,BHTYPE&#xA;,BHVALUE&#xA;,BHCLASS&#xA;,WEEKBH&#xA;,MONTHBH&#xA;,DATACOVERAGE&#xA;,PERIOD_DURATION&#xA;,TIMELEVEL&#xA;,SESSION_ID&#xA;,BATCH_ID&#xA;,ROWSTATUS&#xA;,BH_ID&#xA;,OFFSET&#xA;,WINDOWSIZE&#xA;,BHOBJECT&#xA;)&#xA;SELECT &#xA; NODE_NAME&#xA;,OSS_ID&#xA;,DATE_ID&#xA;,&apos;AFG_PP4&apos;&#xA;,MAX(BHVALUE)&#xA;,1&#xA;,0&#xA;,0&#xA;,SUM(PERIOD_DURATION)&#xA;,NULL&#xA;,&apos;RANKBH&apos;&#xA;,$sessionid&#xA;,$batchid&#xA;,&apos;AGGREGATED&apos;&#xA;,ID&#xA;,MINUTE_OFFSET&#xA;,SLIDING_WINDOW_SIZE&#xA;,BHOBJECT&#xA;from $sourceTable.get(&quot;RANKBH&quot;)&#xA;WHERE DATE_ID=$dateid &#xA;and ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;GROUP BY&#xA;  NODE_NAME&#xA;,OSS_ID&#xA;,DATE_ID&#xA;,BHTYPE&#xA;,ID&#xA;,MINUTE_OFFSET&#xA;,SLIDING_WINDOW_SIZE&#xA;,BHOBJECT&#xA;&#xA;&#xA;UPDATE $targetDerivedTable.get(&quot;RANKBH&quot;) AS dst &#xA;SET &#xA;dst.BUSYHOUR=src.HOUR_ID,&#xA;dst.PERIOD_DURATION=src.PERIOD_DURATION&#xA;,dst.DC_RELEASE = src.DC_RELEASE&#xA;,dst.DC_SOURCE = src.DC_SOURCE&#xA;,dst.DC_TIMEZONE = src.DC_TIMEZONE&#xA;FROM $sourceTable.get(&quot;RANKBH&quot;) AS src&#xA;where src.DATE_ID=$dateid&#xA;and dst.DATE_ID=$dateid&#xA;and src.DATE_ID=dst.DATE_ID&#xA;and src.BHVALUE=dst.BHVALUE&#xA;and src.BHTYPE=dst.BHTYPE&#xA;and src.ROWSTATUS NOT IN (&apos;DUPLICATE&apos;,&apos;SUSPECTED&apos;)&#xA;and dst.NODE_NAME = src.NODE_NAME&#xA;and dst.OSS_ID = src.OSS_ID&#xA;ORDER BY src.HOUR_ID &#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="515" COLLECTION_ID="161" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_WEEKRANKBH_AFG_PP4&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;WEEK&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="516" COLLECTION_ID="161" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_PP4" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.weekbh = 0&#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.bhtype=&apos;AFG_PP4&apos;;&#xA;&#xA;#end&#xA;&#xA;&#xA;&#xA;&#xA;SELECT &#xA;b.NODE_NAME AS NODE_NAME, &#xA;b.OSS_ID AS OSS_ID, &#xA;b.bhtype AS bhtype,max(b.bhvalue) AS bhvalue, cast(null as date) AS date_id &#xA;INTO #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) &#xA;FROM $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as b &#xA;where b.date_id between $dateid and dateadd(dd,6,$dateid) &#xA;and b.bhtype = &apos;AFG_PP4&apos; &#xA;group by &#xA;b.NODE_NAME,&#xA;b.OSS_ID,&#xA;b.bhtype;&#xA;&#xA;UPDATE #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) AS dst &#xA;SET dst.date_id = a.date_id from $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where a.date_id between $dateid and dateadd(dd,6,$dateid) &#xA;and a.bhtype = dst.bhtype&#xA;and a.NODE_NAME = dst.NODE_NAME &#xA;and a.OSS_ID = dst.OSS_ID &#xA;and a.bhvalue = dst.bhvalue;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.weekbh = 1 &#xA;from #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where dst.date_id=a.date_id&#xA;and dst.NODE_NAME= a.NODE_NAME &#xA;and dst.OSS_ID= a.OSS_ID &#xA;and dst.bhvalue=a.bhvalue;&#xA;&#xA;#end&#xA;&#xA;drop table #calculate_week_$targetTable.get(&quot;RANKBHCLASS&quot;);&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.bhclass = (dst.monthbh * 100) + (dst.weekbh * 10) + 1 &#xA;WHERE dst.date_id between $dateid and dateadd(dd,6,$dateid)&#xA;and dst.bhtype=&apos;AFG_PP4&apos;;&#xA;&#xA;#end&#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="517" COLLECTION_ID="162" COLLECTION_SET_ID="15" ACTION_TYPE="GateKeeper" TRANSFER_ACTION_NAME="GateKeeper" ORDER_BY_NO="0" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;aggregation=DC_E_AFG_AFGBH_MONTHRANKBH_AFG_PP4&#xD;&#xA;" ACTION_CONTENTS="SELECT count(*) result FROM LOG_AGGREGATIONSTATUS WHERE TYPENAME = &apos;DC_E_AFG_AFGBH&apos; AND TIMELEVEL = &apos;RANKBH&apos; AND DATADATE = $date AND AGGREGATIONSCOPE = &apos;MONTH&apos; AND STATUS NOT IN (&apos;AGGREGATED&apos;)&#xA;UNION ALL&#xA;SELECT count(*) result FROM DC_E_AFG_AFGBH_RANKBH WHERE DATE_ID = dateadd(dd, 6, $date) &#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="518" COLLECTION_ID="162" COLLECTION_SET_ID="15" ACTION_TYPE="Aggregation" TRANSFER_ACTION_NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_PP4" ORDER_BY_NO="1" WHERE_CLAUSE="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;tablename=DC_E_AFG_AFGBH_RANKBH&#xD;&#xA;" ACTION_CONTENTS="&#xA;&#xA;set temporary option join_preference=&apos;-1&apos;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.monthbh = 0&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.bhtype=&apos;AFG_PP4&apos;;&#xA;&#xA;#end&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;SELECT &#xA;b.NODE_NAME AS NODE_NAME, &#xA;b.OSS_ID AS OSS_ID, &#xA;b.bhtype AS bhtype,max(b.bhvalue) AS bhvalue, cast(null as date) AS date_id &#xA;INTO #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) &#xA;FROM $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as b &#xA;where b.date_id between $dateid and dateadd(mm,1,$dateid)-1 &#xA;and b.bhtype = &apos;AFG_PP4&apos; &#xA;group by &#xA;b.NODE_NAME,&#xA;b.OSS_ID,&#xA;b.bhtype;&#xA;&#xA;UPDATE #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) AS dst &#xA;SET dst.date_id = a.date_id from $targetDerivedTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where a.date_id between $dateid and dateadd(mm,1,$dateid)-1 &#xA;and a.bhtype = dst.bhtype&#xA;and a.NODE_NAME = dst.NODE_NAME &#xA;and a.OSS_ID = dst.OSS_ID &#xA;and a.bhvalue = dst.bhvalue;&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst &#xA;SET &#xA;dst.monthbh = 1 &#xA;from #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;) as a&#xA;where dst.date_id=a.date_id&#xA;and dst.NODE_NAME= a.NODE_NAME &#xA;and dst.OSS_ID= a.OSS_ID &#xA;and dst.bhvalue=a.bhvalue;&#xA;&#xA;#end&#xA;&#xA;drop table #calculate_$targetTable.get(&quot;RANKBHCLASS&quot;);&#xA;&#xA;&#xA;#foreach($table in $targetTableList.get(&quot;RANKBHCLASS&quot;))&#xA;&#xA;UPDATE $table.get(&quot;table&quot;) AS dst  &#xA;SET &#xA;dst.bhclass = (dst.monthbh * 100) + (dst.weekbh * 10) + 1&#xA;WHERE dst.date_id between $dateid and dateadd(mm,1,$dateid)-1&#xA;and dst.bhtype=&apos;AFG_PP4&apos;;&#xA;&#xA;#end&#xA;&#xA;set temporary option join_preference=&apos;0&apos;&#xA;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="519" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_base_${ETLDATA_DIR}" ORDER_BY_NO="0" WHERE_CLAUSE="${ETLDATA_DIR}/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="520" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_iqloaderBase_${LOG_DIR}/iqloader" ORDER_BY_NO="1" WHERE_CLAUSE="${LOG_DIR}/iqloader/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=770&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="521" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_rejectedBase_${REJECTED_DIR}" ORDER_BY_NO="2" WHERE_CLAUSE="${REJECTED_DIR}/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=770&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="522" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_iqloaderBase_Techpack_${LOG_DIR}/iqloader/DC_E_AFG" ORDER_BY_NO="3" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=770&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="523" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_rejectedBase_Techpack_${REJECTED_DIR}/DC_E_AFG" ORDER_BY_NO="4" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=770&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="524" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_base_${REFERENCE_DIR}" ORDER_BY_NO="5" WHERE_CLAUSE="${REFERENCE_DIR}/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="525" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_base_DC_E_AFG" ORDER_BY_NO="6" WHERE_CLAUSE="${REFERENCE_DIR}/DC_E_AFG/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="526" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dc_e_afg_agg_proxy" ORDER_BY_NO="7" WHERE_CLAUSE="${ETLDATA_DIR}/dc_e_afg_agg_proxy/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="527" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dc_e_afg_agg_proxy_raw" ORDER_BY_NO="8" WHERE_CLAUSE="${ETLDATA_DIR}/dc_e_afg_agg_proxy/raw/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="528" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dc_e_afg_agg_proxy_joined" ORDER_BY_NO="9" WHERE_CLAUSE="${ETLDATA_DIR}/dc_e_afg_agg_proxy/joined/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="529" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_AGG_PROXY_RAW_loader" ORDER_BY_NO="10" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DC_E_AFG_AGG_PROXY_RAW/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="530" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_AGG_PROXY_RAW_rejected" ORDER_BY_NO="11" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DC_E_AFG_AGG_PROXY_RAW/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="531" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_AGG_PROXY_DAY_loader" ORDER_BY_NO="12" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DC_E_AFG_AGG_PROXY_DAY/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="532" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_AGG_PROXY_DAY_rejected" ORDER_BY_NO="13" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DC_E_AFG_AGG_PROXY_DAY/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="533" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_AGG_PROXY_DAYBH_loader" ORDER_BY_NO="14" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DC_E_AFG_AGG_PROXY_DAYBH/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="534" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_AGG_PROXY_DAYBH_rejected" ORDER_BY_NO="15" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DC_E_AFG_AGG_PROXY_DAYBH/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="535" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dc_e_afg_bootstrap_func" ORDER_BY_NO="16" WHERE_CLAUSE="${ETLDATA_DIR}/dc_e_afg_bootstrap_func/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="536" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dc_e_afg_bootstrap_func_raw" ORDER_BY_NO="17" WHERE_CLAUSE="${ETLDATA_DIR}/dc_e_afg_bootstrap_func/raw/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="537" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dc_e_afg_bootstrap_func_joined" ORDER_BY_NO="18" WHERE_CLAUSE="${ETLDATA_DIR}/dc_e_afg_bootstrap_func/joined/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="538" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_BOOTSTRAP_FUNC_RAW_loader" ORDER_BY_NO="19" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DC_E_AFG_BOOTSTRAP_FUNC_RAW/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="539" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_BOOTSTRAP_FUNC_RAW_rejected" ORDER_BY_NO="20" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DC_E_AFG_BOOTSTRAP_FUNC_RAW/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="540" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_BOOTSTRAP_FUNC_DAY_loader" ORDER_BY_NO="21" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DC_E_AFG_BOOTSTRAP_FUNC_DAY/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="541" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_BOOTSTRAP_FUNC_DAY_rejected" ORDER_BY_NO="22" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DC_E_AFG_BOOTSTRAP_FUNC_DAY/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="542" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_BOOTSTRAP_FUNC_DAYBH_loader" ORDER_BY_NO="23" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DC_E_AFG_BOOTSTRAP_FUNC_DAYBH/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="543" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_BOOTSTRAP_FUNC_DAYBH_rejected" ORDER_BY_NO="24" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DC_E_AFG_BOOTSTRAP_FUNC_DAYBH/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="544" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dc_e_afg_diameter" ORDER_BY_NO="25" WHERE_CLAUSE="${ETLDATA_DIR}/dc_e_afg_diameter/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="545" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dc_e_afg_diameter_raw" ORDER_BY_NO="26" WHERE_CLAUSE="${ETLDATA_DIR}/dc_e_afg_diameter/raw/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="546" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dc_e_afg_diameter_joined" ORDER_BY_NO="27" WHERE_CLAUSE="${ETLDATA_DIR}/dc_e_afg_diameter/joined/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="547" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_DIAMETER_RAW_loader" ORDER_BY_NO="28" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DC_E_AFG_DIAMETER_RAW/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="548" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_DIAMETER_RAW_rejected" ORDER_BY_NO="29" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DC_E_AFG_DIAMETER_RAW/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="549" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_DIAMETER_DAY_loader" ORDER_BY_NO="30" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DC_E_AFG_DIAMETER_DAY/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="550" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_DIAMETER_DAY_rejected" ORDER_BY_NO="31" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DC_E_AFG_DIAMETER_DAY/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="551" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_DIAMETER_DAYBH_loader" ORDER_BY_NO="32" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DC_E_AFG_DIAMETER_DAYBH/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="552" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_DIAMETER_DAYBH_rejected" ORDER_BY_NO="33" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DC_E_AFG_DIAMETER_DAYBH/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="553" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dc_e_afg_openid_conn" ORDER_BY_NO="34" WHERE_CLAUSE="${ETLDATA_DIR}/dc_e_afg_openid_conn/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="554" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dc_e_afg_openid_conn_raw" ORDER_BY_NO="35" WHERE_CLAUSE="${ETLDATA_DIR}/dc_e_afg_openid_conn/raw/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="555" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dc_e_afg_openid_conn_joined" ORDER_BY_NO="36" WHERE_CLAUSE="${ETLDATA_DIR}/dc_e_afg_openid_conn/joined/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="556" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_OPENID_CONN_RAW_loader" ORDER_BY_NO="37" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DC_E_AFG_OPENID_CONN_RAW/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="557" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_OPENID_CONN_RAW_rejected" ORDER_BY_NO="38" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DC_E_AFG_OPENID_CONN_RAW/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="558" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_OPENID_CONN_DAY_loader" ORDER_BY_NO="39" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DC_E_AFG_OPENID_CONN_DAY/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="559" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_OPENID_CONN_DAY_rejected" ORDER_BY_NO="40" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DC_E_AFG_OPENID_CONN_DAY/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="560" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_OPENID_CONN_DAYBH_loader" ORDER_BY_NO="41" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DC_E_AFG_OPENID_CONN_DAYBH/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="561" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_OPENID_CONN_DAYBH_rejected" ORDER_BY_NO="42" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DC_E_AFG_OPENID_CONN_DAYBH/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="562" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dc_e_afg_trustedproxy" ORDER_BY_NO="43" WHERE_CLAUSE="${ETLDATA_DIR}/dc_e_afg_trustedproxy/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="563" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dc_e_afg_trustedproxy_raw" ORDER_BY_NO="44" WHERE_CLAUSE="${ETLDATA_DIR}/dc_e_afg_trustedproxy/raw/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="564" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dc_e_afg_trustedproxy_joined" ORDER_BY_NO="45" WHERE_CLAUSE="${ETLDATA_DIR}/dc_e_afg_trustedproxy/joined/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="565" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_TRUSTEDPROXY_RAW_loader" ORDER_BY_NO="46" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DC_E_AFG_TRUSTEDPROXY_RAW/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="566" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_TRUSTEDPROXY_RAW_rejected" ORDER_BY_NO="47" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DC_E_AFG_TRUSTEDPROXY_RAW/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="567" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_TRUSTEDPROXY_DAY_loader" ORDER_BY_NO="48" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DC_E_AFG_TRUSTEDPROXY_DAY/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="568" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_TRUSTEDPROXY_DAY_rejected" ORDER_BY_NO="49" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DC_E_AFG_TRUSTEDPROXY_DAY/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="569" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_TRUSTEDPROXY_DAYBH_loader" ORDER_BY_NO="50" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DC_E_AFG_TRUSTEDPROXY_DAYBH/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="570" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_TRUSTEDPROXY_DAYBH_rejected" ORDER_BY_NO="51" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DC_E_AFG_TRUSTEDPROXY_DAYBH/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="571" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dc_e_afg_virtual_gateway" ORDER_BY_NO="52" WHERE_CLAUSE="${ETLDATA_DIR}/dc_e_afg_virtual_gateway/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="572" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dc_e_afg_virtual_gateway_raw" ORDER_BY_NO="53" WHERE_CLAUSE="${ETLDATA_DIR}/dc_e_afg_virtual_gateway/raw/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="573" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dc_e_afg_virtual_gateway_joined" ORDER_BY_NO="54" WHERE_CLAUSE="${ETLDATA_DIR}/dc_e_afg_virtual_gateway/joined/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="574" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_VIRTUAL_GATEWAY_RAW_loader" ORDER_BY_NO="55" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DC_E_AFG_VIRTUAL_GATEWAY_RAW/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="575" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_VIRTUAL_GATEWAY_RAW_rejected" ORDER_BY_NO="56" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DC_E_AFG_VIRTUAL_GATEWAY_RAW/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="576" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_VIRTUAL_GATEWAY_DAY_loader" ORDER_BY_NO="57" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DC_E_AFG_VIRTUAL_GATEWAY_DAY/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="577" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_VIRTUAL_GATEWAY_DAY_rejected" ORDER_BY_NO="58" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DC_E_AFG_VIRTUAL_GATEWAY_DAY/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="578" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_VIRTUAL_GATEWAY_DAYBH_loader" ORDER_BY_NO="59" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DC_E_AFG_VIRTUAL_GATEWAY_DAYBH/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="579" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_VIRTUAL_GATEWAY_DAYBH_rejected" ORDER_BY_NO="60" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DC_E_AFG_VIRTUAL_GATEWAY_DAYBH/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="580" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_AFGBH_RANKBH_loader" ORDER_BY_NO="61" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DC_E_AFG_AFGBH_RANKBH/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="581" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_AFGBH_RANKBH_rejected" ORDER_BY_NO="62" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DC_E_AFG_AFGBH_RANKBH/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="582" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dc_e_afg_system" ORDER_BY_NO="63" WHERE_CLAUSE="${ETLDATA_DIR}/dc_e_afg_system/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="583" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dc_e_afg_system_raw" ORDER_BY_NO="64" WHERE_CLAUSE="${ETLDATA_DIR}/dc_e_afg_system/raw/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="584" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dc_e_afg_system_joined" ORDER_BY_NO="65" WHERE_CLAUSE="${ETLDATA_DIR}/dc_e_afg_system/joined/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="585" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_SYSTEM_RAW_loader" ORDER_BY_NO="66" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DC_E_AFG_SYSTEM_RAW/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="586" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_SYSTEM_RAW_rejected" ORDER_BY_NO="67" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DC_E_AFG_SYSTEM_RAW/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="587" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_SYSTEM_DAY_loader" ORDER_BY_NO="68" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DC_E_AFG_SYSTEM_DAY/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="588" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_SYSTEM_DAY_rejected" ORDER_BY_NO="69" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DC_E_AFG_SYSTEM_DAY/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="589" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_SYSTEM_DAYBH_loader" ORDER_BY_NO="70" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DC_E_AFG_SYSTEM_DAYBH/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="590" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DC_E_AFG_SYSTEM_DAYBH_rejected" ORDER_BY_NO="71" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DC_E_AFG_SYSTEM_DAYBH/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="591" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dim_e_afg_afgbh_bhtype" ORDER_BY_NO="72" WHERE_CLAUSE="${ETLDATA_DIR}/dim_e_afg_afgbh_bhtype/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="592" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dim_e_afg_afgbh_bhtype_raw" ORDER_BY_NO="73" WHERE_CLAUSE="${ETLDATA_DIR}/dim_e_afg_afgbh_bhtype/raw/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="593" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_dim_e_afg_afgbh_bhtype_joined" ORDER_BY_NO="74" WHERE_CLAUSE="${ETLDATA_DIR}/dim_e_afg_afgbh_bhtype/joined/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="594" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DIM_E_AFG_AFGBH_BHTYPE_RAW_loader" ORDER_BY_NO="75" WHERE_CLAUSE="${LOG_DIR}/iqloader/DC_E_AFG/DIM_E_AFG_AFGBH_BHTYPE_RAW/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="595" COLLECTION_ID="163" COLLECTION_SET_ID="15" ACTION_TYPE="CreateDir" TRANSFER_ACTION_NAME="CreateDir_DIM_E_AFG_AFGBH_BHTYPE_RAW_rejected" ORDER_BY_NO="76" WHERE_CLAUSE="${REJECTED_DIR}/DC_E_AFG/DIM_E_AFG_AFGBH_BHTYPE_RAW/" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;owner=dcuser&#xD;&#xA;permission=750&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="596" COLLECTION_ID="164" COLLECTION_SET_ID="15" ACTION_TYPE="Diskmanager" TRANSFER_ACTION_NAME="loaderLog/DC_E_AFG" ORDER_BY_NO="0" WHERE_CLAUSE="" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;diskManager.dir.fileAgeDay=2&#xD;&#xA;diskManager.dir.timeMask=&#xD;&#xA;diskManager.dir.fileAgeHour=0&#xD;&#xA;diskManager.dir.outDir=${LOG_DIR}/iqloader/DC_E_AFG/&#xD;&#xA;diskManager.dir.fileMask=(?\!.*\\.zip$).*&#xD;&#xA;diskManager.dir.archiveMode=3&#xD;&#xA;diskManager.dir.dateFormatOutput=yyyy-MM-dd&#xD;&#xA;diskManager.dir.fileAgeMode=0&#xD;&#xA;diskManager.dir.inDir=${LOG_DIR}/iqloader/DC_E_AFG/&#xD;&#xA;diskManager.dir.dateFormatInput=&#xD;&#xA;diskManager.dir.archivePrefix=archive&#xD;&#xA;diskManager.dir.directoryDepth=5&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="597" COLLECTION_ID="164" COLLECTION_SET_ID="15" ACTION_TYPE="Diskmanager" TRANSFER_ACTION_NAME="rejected/DC_E_AFG" ORDER_BY_NO="1" WHERE_CLAUSE="" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;diskManager.dir.fileAgeDay=2&#xD;&#xA;diskManager.dir.timeMask=&#xD;&#xA;diskManager.dir.fileAgeHour=0&#xD;&#xA;diskManager.dir.outDir=${REJECTED_DIR}/DC_E_AFG/&#xD;&#xA;diskManager.dir.fileMask=(?\!.*\\.zip$).*&#xD;&#xA;diskManager.dir.archiveMode=3&#xD;&#xA;diskManager.dir.dateFormatOutput=yyyy-MM-dd&#xD;&#xA;diskManager.dir.fileAgeMode=0&#xD;&#xA;diskManager.dir.inDir=${REJECTED_DIR}/DC_E_AFG/&#xD;&#xA;diskManager.dir.dateFormatInput=&#xD;&#xA;diskManager.dir.archivePrefix=archive&#xD;&#xA;diskManager.dir.directoryDepth=5&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_TRANSFER_ACTIONS VERSION_NUMBER="((13))" TRANSFER_ACTION_ID="598" COLLECTION_ID="164" COLLECTION_SET_ID="15" ACTION_TYPE="Diskmanager" TRANSFER_ACTION_NAME="techpack/DC_E_AFG" ORDER_BY_NO="2" WHERE_CLAUSE="" ACTION_CONTENTS="#&#xD;&#xA;#Thu Aug 27 01:35:21 PDT 2020&#xD;&#xA;diskManager.dir.fileAgeDay=2&#xD;&#xA;diskManager.dir.timeMask=&#xD;&#xA;diskManager.dir.fileAgeHour=0&#xD;&#xA;diskManager.dir.outDir=${LOG_DIR}/engine//DC_E_AFG/&#xD;&#xA;diskManager.dir.fileMask=(?\!.*\\.zip$).*&#xD;&#xA;diskManager.dir.archiveMode=3&#xD;&#xA;diskManager.dir.dateFormatOutput=yyyy-MM-dd&#xD;&#xA;diskManager.dir.fileAgeMode=0&#xD;&#xA;diskManager.dir.inDir=${LOG_DIR}/engine//DC_E_AFG/&#xD;&#xA;diskManager.dir.dateFormatInput=&#xD;&#xA;diskManager.dir.archivePrefix=archive&#xD;&#xA;diskManager.dir.directoryDepth=5&#xD;&#xA;" ENABLED_FLAG="Y" CONNECTION_ID="2"/>
  <META_PLUGINS/>
  <META_SCHEDULINGS COLLECTION_ID="95" COLLECTION_SET_ID="15" ID="57" EXECUTION_TYPE="wait" NAME="DWHM_Partition_DC_E_AFG" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="98" COLLECTION_SET_ID="15" ID="58" EXECUTION_TYPE="wait" NAME="Loader_DC_E_AFG_AGG_PROXY" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="99" COLLECTION_SET_ID="15" ID="59" EXECUTION_TYPE="wait" NAME="Loader_DC_E_AFG_BOOTSTRAP_FUNC" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="100" COLLECTION_SET_ID="15" ID="60" EXECUTION_TYPE="wait" NAME="Loader_DC_E_AFG_DIAMETER" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="101" COLLECTION_SET_ID="15" ID="61" EXECUTION_TYPE="wait" NAME="Loader_DC_E_AFG_OPENID_CONN" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="102" COLLECTION_SET_ID="15" ID="62" EXECUTION_TYPE="wait" NAME="Loader_DC_E_AFG_TRUSTEDPROXY" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="103" COLLECTION_SET_ID="15" ID="63" EXECUTION_TYPE="wait" NAME="Loader_DC_E_AFG_VIRTUAL_GATEWAY" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="104" COLLECTION_SET_ID="15" ID="64" EXECUTION_TYPE="wait" NAME="Loader_DC_E_AFG_SYSTEM" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="105" COLLECTION_SET_ID="15" ID="66" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AGG_PROXY_DAY" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="106" COLLECTION_SET_ID="15" ID="67" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AGG_PROXY_DAYBH_AFG" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="107" COLLECTION_SET_ID="15" ID="68" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AGG_PROXY_WEEKBH_AFG" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="108" COLLECTION_SET_ID="15" ID="69" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AGG_PROXY_MONTHBH_AFG" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="109" COLLECTION_SET_ID="15" ID="70" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_BOOTSTRAP_FUNC_DAY" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="110" COLLECTION_SET_ID="15" ID="71" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_BOOTSTRAP_FUNC_DAYBH_AFG" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="111" COLLECTION_SET_ID="15" ID="72" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_BOOTSTRAP_FUNC_WEEKBH_AFG" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="112" COLLECTION_SET_ID="15" ID="73" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_BOOTSTRAP_FUNC_MONTHBH_AFG" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="113" COLLECTION_SET_ID="15" ID="74" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_DIAMETER_DAY" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="114" COLLECTION_SET_ID="15" ID="75" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_DIAMETER_DAYBH_AFG" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="115" COLLECTION_SET_ID="15" ID="76" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_DIAMETER_WEEKBH_AFG" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="116" COLLECTION_SET_ID="15" ID="77" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_DIAMETER_MONTHBH_AFG" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="117" COLLECTION_SET_ID="15" ID="78" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_OPENID_CONN_DAY" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="118" COLLECTION_SET_ID="15" ID="79" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_OPENID_CONN_DAYBH_AFG" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="119" COLLECTION_SET_ID="15" ID="80" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_OPENID_CONN_WEEKBH_AFG" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="120" COLLECTION_SET_ID="15" ID="81" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_OPENID_CONN_MONTHBH_AFG" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="121" COLLECTION_SET_ID="15" ID="82" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_TRUSTEDPROXY_DAY" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="122" COLLECTION_SET_ID="15" ID="83" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_TRUSTEDPROXY_DAYBH_AFG" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="123" COLLECTION_SET_ID="15" ID="84" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_TRUSTEDPROXY_WEEKBH_AFG" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="124" COLLECTION_SET_ID="15" ID="85" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_TRUSTEDPROXY_MONTHBH_AFG" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="125" COLLECTION_SET_ID="15" ID="86" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_VIRTUAL_GATEWAY_DAY" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="126" COLLECTION_SET_ID="15" ID="87" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_VIRTUAL_GATEWAY_DAYBH_AFG" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="127" COLLECTION_SET_ID="15" ID="88" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_VIRTUAL_GATEWAY_WEEKBH_AFG" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="128" COLLECTION_SET_ID="15" ID="89" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_VIRTUAL_GATEWAY_MONTHBH_AFG" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="129" COLLECTION_SET_ID="15" ID="90" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_SYSTEM_DAY" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="130" COLLECTION_SET_ID="15" ID="91" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_SYSTEM_DAYBH_AFG" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="131" COLLECTION_SET_ID="15" ID="92" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_SYSTEM_WEEKBH_AFG" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="132" COLLECTION_SET_ID="15" ID="93" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_SYSTEM_MONTHBH_AFG" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="133" COLLECTION_SET_ID="15" ID="94" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_CP0" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="134" COLLECTION_SET_ID="15" ID="95" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_CP0" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="135" COLLECTION_SET_ID="15" ID="96" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_CP0" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="136" COLLECTION_SET_ID="15" ID="97" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_CP1" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="137" COLLECTION_SET_ID="15" ID="98" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_CP1" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="138" COLLECTION_SET_ID="15" ID="99" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_CP1" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="139" COLLECTION_SET_ID="15" ID="100" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_CP2" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="140" COLLECTION_SET_ID="15" ID="101" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_CP2" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="141" COLLECTION_SET_ID="15" ID="102" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_CP2" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="142" COLLECTION_SET_ID="15" ID="103" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_CP3" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="143" COLLECTION_SET_ID="15" ID="104" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_CP3" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="144" COLLECTION_SET_ID="15" ID="105" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_CP3" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="145" COLLECTION_SET_ID="15" ID="106" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_CP4" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="146" COLLECTION_SET_ID="15" ID="107" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_CP4" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="147" COLLECTION_SET_ID="15" ID="108" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_CP4" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="148" COLLECTION_SET_ID="15" ID="109" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_PP0" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="149" COLLECTION_SET_ID="15" ID="110" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_PP0" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="150" COLLECTION_SET_ID="15" ID="111" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_PP0" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="151" COLLECTION_SET_ID="15" ID="112" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_PP1" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="152" COLLECTION_SET_ID="15" ID="113" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_PP1" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="153" COLLECTION_SET_ID="15" ID="114" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_PP1" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="154" COLLECTION_SET_ID="15" ID="115" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_PP2" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="155" COLLECTION_SET_ID="15" ID="116" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_PP2" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="156" COLLECTION_SET_ID="15" ID="117" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_PP2" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="157" COLLECTION_SET_ID="15" ID="118" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_PP3" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="158" COLLECTION_SET_ID="15" ID="119" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_PP3" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="159" COLLECTION_SET_ID="15" ID="120" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_PP3" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="160" COLLECTION_SET_ID="15" ID="121" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_RANKBH_AFG_PP4" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="161" COLLECTION_SET_ID="15" ID="122" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_WEEKRANKBH_AFG_PP4" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS COLLECTION_ID="162" COLLECTION_SET_ID="15" ID="123" EXECUTION_TYPE="wait" NAME="Aggregator_DC_E_AFG_AFGBH_MONTHRANKBH_AFG_PP4" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
  <META_SCHEDULINGS SCHEDULING_DAY="1" SCHEDULING_MIN="0" SCHEDULING_HOUR="8" SCHEDULING_MONTH="1" SCHEDULING_YEAR="2009" COLLECTION_ID="164" COLLECTION_SET_ID="15" ID="124" EXECUTION_TYPE="weekly" NAME="Diskmanager_DC_E_AFG" FRI_FLAG="Y" MON_FLAG="Y" SAT_FLAG="Y" SUN_FLAG="Y" THU_FLAG="Y" TUE_FLAG="Y" WED_FLAG="Y" HOLD_FLAG="N" VERSION_NUMBER="((13))"/>
</dataset>
