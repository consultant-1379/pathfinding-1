<?xml version="1.0" encoding="UTF-8"?>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ~ COPYRIGHT Ericsson 2020
 ~
 ~
 ~
 ~ The copyright to the computer program(s) herein is the property of
 ~
 ~ Ericsson Inc. The programs may be used and/or copied only with written
 ~
 ~ permission from Ericsson Inc. or in accordance with the terms and
 ~
 ~ conditions stipulated in the agreement/contract under which the
 ~
 ~ program(s) have been supplied.
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.4.RELEASE</version>
		<relativePath />
	</parent>
	<groupId>com.ericsson.oss.eniq.techpack</groupId>
	<packaging>jar</packaging>
	<name>eric-oss-eniq-feature-installer</name>
	<artifactId>eric-oss-eniq-feature-installer</artifactId>
	<version>1.0.0-SNAPSHOT</version>

	<properties>
		<java.version>11</java.version> <!-- JDK 1.8 version is the Java version as supported by SonarQube plugin -->
		<spring-cloud.version>Hoxton.SR1</spring-cloud.version>
		<dockerfile-maven-version>1.4.10</dockerfile-maven-version>
		<!-- JaCoCo plugin for Java Code Coverage -->
		<maven.jcoco-plugin.version>0.8.5</maven.jcoco-plugin.version>
		<!-- Minimum ratio or percentage of instructions to be covered, used by
			JaCoCo plugin. Industry standard is 0.8 or 80% which allows at least 80%
			of the code to be covered by the test cases. -->
		<jacoco-maven-plugin.coveredratio.minimum>0.2</jacoco-maven-plugin.coveredratio.minimum>
		<springfox-version>2.9.2</springfox-version>
		<swagger-core-version>1.5.22</swagger-core-version>
		<version.maven-checkstyle-plugin>3.0.0</version.maven-checkstyle-plugin>
		<version.checkstyle-tool>6.11.2</version.checkstyle-tool>
		<version.enm-checkstyle-module>1.1.103</version.enm-checkstyle-module>
		<opentracing-spring-version>2.0.0.redhat-00003</opentracing-spring-version>
		<jaeger-client-version>0.34.0</jaeger-client-version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<dependencies>
	<!-- https://mvnrepository.com/artifact/org.skyscreamer/jsonassert -->
<dependency>
    <groupId>org.skyscreamer</groupId>
    <artifactId>jsonassert</artifactId>
    <version>1.5.0</version>
    <scope>test</scope>
</dependency>
	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<exclusions>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-core</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<dependency>
			<groupId>net.logstash.logback</groupId>
			<artifactId>logstash-logback-encoder</artifactId>
			<version>6.1</version>
		</dependency>
		<!-- <dependency>
			<groupId>com.ericsson.oss.orchestration.eo</groupId>
			<artifactId>eric-common-logging</artifactId>
			<version>1.0.16</version>
			<scope>runtime</scope>
		</dependency> -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox-version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox-version}</version>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${swagger-core-version}</version>
		</dependency>
		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
			<version>0.1.0</version>
		</dependency>
		<dependency>
			<groupId>io.jaegertracing</groupId>
			<artifactId>jaeger-client</artifactId>
			<version>${jaeger-client-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-contract-verifier</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>javax.json</groupId>
		    <artifactId>javax.json-api</artifactId>
		    <version>1.1</version>
       </dependency>
		<dependency>
		    <groupId>org.glassfish</groupId>
		    <artifactId>javax.json</artifactId>
		    <version>1.1</version>
		</dependency>
    
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>2.0.0-alpha2</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>2.0.0-alpha2</version>
		</dependency>
		<dependency>
			<groupId>pl.pragmatists</groupId>
			<artifactId>JUnitParams</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-contract-verifier</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
    			<groupId>org.springframework.cloud</groupId>
    			<artifactId>spring-cloud-starter-contract-stub-runner</artifactId>
    			<scope>test</scope>
		</dependency>
				
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-checkstyle-plugin -->
			<dependency>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.1.0</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>4.1.1</version>
				<executions>
					<execution>
						<id>1</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/v1/eric-oss-eniq-feature-installer-openapi.yaml</inputSpec>
							<generatorName>html</generatorName>
							<output>src/main/resources/v1</output>
						</configuration>
					</execution>
					<execution>
						<id>2</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/v1/eric-oss-eniq-feature-installer-openapi.yaml</inputSpec>
							<generatorName>spring</generatorName>
							<modelNamePrefix>MsChassis</modelNamePrefix>
							<configOptions>
								<generateSupportingFiles>true</generateSupportingFiles>
								<sourceFolder>src/java/main</sourceFolder>
								<dateLibrary>java11</dateLibrary>
								<java11>true</java11>
								<library>spring-mvc</library>
								<interfaceOnly>true</interfaceOnly>
								<skipOverwrite>false</skipOverwrite>
								<useTags>true</useTags>
								<useBeanValidation>true</useBeanValidation>
							</configOptions>
							<apiPackage>com.ericsson.oss.eniq.techpack.api</apiPackage>
							<modelPackage>com.ericsson.oss.eniq.techpack.api.model</modelPackage>
							<groupId>${project.groupId}</groupId>
							<artifactId>${project.artifactId}</artifactId>
							<artifactVersion>${project.version}</artifactVersion>
							<environmentVariables>
								<enablePostProcessFile>true</enablePostProcessFile>
							</environmentVariables>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>2.2.4.RELEASE</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>${dockerfile-maven-version}</version>
				<executions>
					<execution>
						<id>default</id>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<repository>${project.artifactId}</repository>
					<tag>${project.version}</tag>
					<buildArgs>
						<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>
				</configuration>
			</plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.5</version>
					<configuration>
						<skipTests>false</skipTests>
						<testFailureIgnore>true</testFailureIgnore>
						<forkMode>once</forkMode>
					</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-contract-maven-plugin</artifactId>
				<version>2.2.1.RELEASE</version>
				<extensions>true</extensions>
				<!-- <configuration>
					<baseClassForTests>com.ericsson.oss.eniq.techpack.api.contract.ApiBase</baseClassForTests>
				</configuration> -->
			</plugin>
			<!-- JaCoCo plugin for Java Code Coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${maven.jcoco-plugin.version}</version>
				<configuration>
					<append>true</append>
					<excludes>
						<exclude>**/api/*.*</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>jacoco-check</id>
						<phase>test</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<!-- JaCoCo uses a set of different counters to calculate coverage
							metrics -->
						<!-- Check configuration used to specify rules on element types (BUNDLE,
							PACKAGE, CLASS, SOURCEFILE or METHOD) with a list of limits. Each limit applies
							to a certain counter (INSTRUCTION, LINE, BRANCH, COMPLEXITY, METHOD, CLASS)
							and defines a minimum or maximum for the corresponding value (TOTALCOUNT,
							COVEREDCOUNT, MISSEDCOUNT, COVEREDRATIO, MISSEDRATIO). A limit ratio may
							optionally be declared as a percentage where 0.80 and 80% represent the same
							value, the value must end with %. -->
						<configuration>
							<rules>
								<rule implementation="org.jacoco.maven.RuleConfiguration">
									<element>BUNDLE</element>
									<limits>
										<limit implementation="org.jacoco.report.check.Limit">
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>${jacoco-maven-plugin.coveredratio.minimum}</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
							<excludes>
									<exclude>**/api/*.*</exclude>
							</excludes>
						</configuration>
					</execution>
					<execution>
						<id>agent-for-ut</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>**/api/*.*</exclude>
							</excludes>
						</configuration>
					</execution>
					<execution>
						<id>agent-for-it</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>**/api/*.*</exclude>
							</excludes>
						</configuration>
					</execution>
					<execution>
						<id>jacoco-site</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>**/api/*.*</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
        		<groupId>org.codehaus.mojo</groupId>
        		<artifactId>cobertura-maven-plugin</artifactId>
        		<version>2.7</version>
       			<configuration>
       				<formats>
                		<format>html</format>
               			<format>xml</format>
           			</formats>
        		</configuration>
    		</plugin>
			<!-- JaCoCo plugin for Java Code Coverage -->
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>com.mycila</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>3.0</version>
					<configuration>
						<header>license/copyright.txt</header>
						<excludes>
							<exclude>.bob/*</exclude>
							<exclude>**/.helmignore</exclude>
							<exclude>**/*.html</exclude>
							<exclude>**/_helpers.tpl</exclude>
							<exclude>**/*.tgz</exclude>
							<exclude>**/VERSION*</exclude>
							<exclude>**/*.repo</exclude>
							<exclude>design-rule-check-report*</exclude>
							<exclude>zally-api-lint-report.txt</exclude>
							<exclude>*artifact.properties</exclude>
						</excludes>
						<headerDefinitions>
							<headerDefinition>./license/javaHeaderDefinition.xml</headerDefinition>
							<headerDefinition>./license/xmlHeaderDefinition.xml</headerDefinition>
						</headerDefinitions>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${version.maven-checkstyle-plugin}</version>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>${version.checkstyle-tool}</version>
						</dependency>
						<dependency>
							<groupId>com.ericsson.cds</groupId>
							<artifactId>checkstyle-module</artifactId>
							<version>${version.enm-checkstyle-module}</version>
						</dependency>
					</dependencies>
					<configuration>
						<consoleOutput>true</consoleOutput>
						<logViolationsToConsole>true</logViolationsToConsole>
						<configLocation>/enm/checkstyle/checkstyle.xml</configLocation>
						<suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
						<violationSeverity>warning</violationSeverity>
						<includeTestSourceDirectory>true</includeTestSourceDirectory>
						<encoding>UTF-8</encoding>
						<consoleOutput>true</consoleOutput>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>3.6.0.1398</version>
				</plugin>
				<plugin>
					<groupId>org.spring.framework.cloud</groupId>
					<artifactId>spring-cloud-contract-maven-plugins</artifactId>
					<version>3.0.3</version>
					<extensions>true</extensions>
					<configuration>
						<baseClassForTests>com.ericsson.oss.eniq.contracttest</baseClassForTests>
					</configuration>
				</plugin>
				<plugin>
                	<groupId>org.springframework.boot</groupId>
                	<artifactId>spring-boot-maven-plugin</artifactId>
             	</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
