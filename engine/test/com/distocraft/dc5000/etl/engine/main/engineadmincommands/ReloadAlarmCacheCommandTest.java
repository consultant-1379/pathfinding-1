/** * ----------------------------------------------------------------------- *     Copyright (C) 2010 LM Ericsson Limited.  All rights reserved. * ----------------------------------------------------------------------- */package com.distocraft.dc5000.etl.engine.main.engineadmincommands;import static org.hamcrest.CoreMatchers.*;import static org.junit.Assert.*;import org.jmock.Expectations;import org.junit.Before;import org.junit.Test;import com.distocraft.dc5000.etl.engine.BaseMock;import com.distocraft.dc5000.etl.engine.main.EngineAdmin;/** * @author eheijun *  */public class ReloadAlarmCacheCommandTest extends BaseMock {  EngineAdmin mockedEngineAdmin;  @Before  public void setUp() {    mockedEngineAdmin = context.mock(EngineAdmin.class);  }  @Test  public void testPerformCommand() throws NumberFormatException, Exception {    final String[] validNumberArguments = new String[] { "reloadAlarmCache" };    final Command command = new StubbedReloadAlarmCacheCommand(validNumberArguments);    expectReloadAlarmCacheCommandOnEngineAdmin();    command.validateArguments();    command.performCommand();  }  private void expectReloadAlarmCacheCommandOnEngineAdmin() throws Exception {    context.checking(new Expectations() {      {        one(mockedEngineAdmin).reloadAlarmConfigCache();      }    });  }  @Test  public void testCheckArgumentsWith2Arguments() {    final String[] invalidNumberArguments = new String[] { "onearg", "twoarg" };    try {      new ReloadAlarmCacheCommand(invalidNumberArguments).validateArguments();      fail("Exception should have been thrown");    } catch (final InvalidArgumentsException e) {      assertThat(e.getMessage(), is("Incorrect number of arguments supplied, usage: engine -e reloadAlarmCache"));    }  }  @Test  public void testCheckArgumentsWithCorrectNumArgumentsDoesntThrowException() throws InvalidArgumentsException {    final String[] validNumberArguments = new String[] { "reloadAlarmCache" };    new ReloadAlarmCacheCommand(validNumberArguments).validateArguments();  }  class StubbedReloadAlarmCacheCommand extends ReloadAlarmCacheCommand {    /**     *      * @param args     */    public StubbedReloadAlarmCacheCommand(final String[] args) {      super(args);    }    /*     * (non-Javadoc)     *      * @see     * com.distocraft.dc5000.etl.engine.main.engineadmincommands.ReloadAlarmCacheCommand#createNewEngineAdmin()     */    @Override    protected EngineAdmin createNewEngineAdmin() {      return mockedEngineAdmin;    }  }}